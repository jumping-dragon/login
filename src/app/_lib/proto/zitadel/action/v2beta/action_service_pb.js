// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/action/v2beta/action_service.proto (package zitadel.action.v2beta, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../validate/validate_pb.js";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb.js";
import { file_zitadel_action_v2beta_target } from "./target_pb.js";
import { file_zitadel_action_v2beta_execution } from "./execution_pb.js";
import { file_zitadel_action_v2beta_query } from "./query_pb.js";
import { file_zitadel_filter_v2beta_filter } from "../../filter/v2beta/filter_pb.js";

/**
 * Describes the file zitadel/action/v2beta/action_service.proto.
 */
export const file_zitadel_action_v2beta_action_service = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_struct, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_action_v2beta_target, file_zitadel_action_v2beta_execution, file_zitadel_action_v2beta_query, file_google_protobuf_timestamp, file_zitadel_filter_v2beta_filter]);

/**
 * Describes the message zitadel.action.v2beta.CreateTargetRequest.
 * Use `create(CreateTargetRequestSchema)` to create a new message.
 */
export const CreateTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 0);

/**
 * Describes the message zitadel.action.v2beta.CreateTargetResponse.
 * Use `create(CreateTargetResponseSchema)` to create a new message.
 */
export const CreateTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 1);

/**
 * Describes the message zitadel.action.v2beta.UpdateTargetRequest.
 * Use `create(UpdateTargetRequestSchema)` to create a new message.
 */
export const UpdateTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 2);

/**
 * Describes the message zitadel.action.v2beta.UpdateTargetResponse.
 * Use `create(UpdateTargetResponseSchema)` to create a new message.
 */
export const UpdateTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 3);

/**
 * Describes the message zitadel.action.v2beta.DeleteTargetRequest.
 * Use `create(DeleteTargetRequestSchema)` to create a new message.
 */
export const DeleteTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 4);

/**
 * Describes the message zitadel.action.v2beta.DeleteTargetResponse.
 * Use `create(DeleteTargetResponseSchema)` to create a new message.
 */
export const DeleteTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 5);

/**
 * Describes the message zitadel.action.v2beta.GetTargetRequest.
 * Use `create(GetTargetRequestSchema)` to create a new message.
 */
export const GetTargetRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 6);

/**
 * Describes the message zitadel.action.v2beta.GetTargetResponse.
 * Use `create(GetTargetResponseSchema)` to create a new message.
 */
export const GetTargetResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 7);

/**
 * Describes the message zitadel.action.v2beta.ListTargetsRequest.
 * Use `create(ListTargetsRequestSchema)` to create a new message.
 */
export const ListTargetsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 8);

/**
 * Describes the message zitadel.action.v2beta.ListTargetsResponse.
 * Use `create(ListTargetsResponseSchema)` to create a new message.
 */
export const ListTargetsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 9);

/**
 * Describes the message zitadel.action.v2beta.SetExecutionRequest.
 * Use `create(SetExecutionRequestSchema)` to create a new message.
 */
export const SetExecutionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 10);

/**
 * Describes the message zitadel.action.v2beta.SetExecutionResponse.
 * Use `create(SetExecutionResponseSchema)` to create a new message.
 */
export const SetExecutionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 11);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionsRequest.
 * Use `create(ListExecutionsRequestSchema)` to create a new message.
 */
export const ListExecutionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 12);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionsResponse.
 * Use `create(ListExecutionsResponseSchema)` to create a new message.
 */
export const ListExecutionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 13);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionFunctionsRequest.
 * Use `create(ListExecutionFunctionsRequestSchema)` to create a new message.
 */
export const ListExecutionFunctionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 14);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionFunctionsResponse.
 * Use `create(ListExecutionFunctionsResponseSchema)` to create a new message.
 */
export const ListExecutionFunctionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 15);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionMethodsRequest.
 * Use `create(ListExecutionMethodsRequestSchema)` to create a new message.
 */
export const ListExecutionMethodsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 16);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionMethodsResponse.
 * Use `create(ListExecutionMethodsResponseSchema)` to create a new message.
 */
export const ListExecutionMethodsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 17);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionServicesRequest.
 * Use `create(ListExecutionServicesRequestSchema)` to create a new message.
 */
export const ListExecutionServicesRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 18);

/**
 * Describes the message zitadel.action.v2beta.ListExecutionServicesResponse.
 * Use `create(ListExecutionServicesResponseSchema)` to create a new message.
 */
export const ListExecutionServicesResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_action_v2beta_action_service, 19);

/**
 * Service to manage custom executions.
 * The service provides methods to create, update, delete and list targets and executions.
 *
 * @generated from service zitadel.action.v2beta.ActionService
 */
export const ActionService = /*@__PURE__*/
  serviceDesc(file_zitadel_action_v2beta_action_service, 0);

