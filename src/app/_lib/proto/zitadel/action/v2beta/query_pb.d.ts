// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/action/v2beta/query.proto (package zitadel.action.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Condition, ConditionJson } from "./execution_pb.js";
import type { TextFilterMethod, TextFilterMethodJson } from "../../filter/v2beta/filter_pb.js";

/**
 * Describes the file zitadel/action/v2beta/query.proto.
 */
export declare const file_zitadel_action_v2beta_query: GenFile;

/**
 * @generated from message zitadel.action.v2beta.ExecutionSearchFilter
 */
export declare type ExecutionSearchFilter = Message<"zitadel.action.v2beta.ExecutionSearchFilter"> & {
  /**
   * @generated from oneof zitadel.action.v2beta.ExecutionSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.action.v2beta.InConditionsFilter in_conditions_filter = 1;
     */
    value: InConditionsFilter;
    case: "inConditionsFilter";
  } | {
    /**
     * @generated from field: zitadel.action.v2beta.ExecutionTypeFilter execution_type_filter = 2;
     */
    value: ExecutionTypeFilter;
    case: "executionTypeFilter";
  } | {
    /**
     * @generated from field: zitadel.action.v2beta.TargetFilter target_filter = 3;
     */
    value: TargetFilter;
    case: "targetFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.action.v2beta.ExecutionSearchFilter
 */
export declare type ExecutionSearchFilterJson = {
  /**
   * @generated from field: zitadel.action.v2beta.InConditionsFilter in_conditions_filter = 1;
   */
  inConditionsFilter?: InConditionsFilterJson;

  /**
   * @generated from field: zitadel.action.v2beta.ExecutionTypeFilter execution_type_filter = 2;
   */
  executionTypeFilter?: ExecutionTypeFilterJson;

  /**
   * @generated from field: zitadel.action.v2beta.TargetFilter target_filter = 3;
   */
  targetFilter?: TargetFilterJson;
};

/**
 * Describes the message zitadel.action.v2beta.ExecutionSearchFilter.
 * Use `create(ExecutionSearchFilterSchema)` to create a new message.
 */
export declare const ExecutionSearchFilterSchema: GenMessage<ExecutionSearchFilter, {jsonType: ExecutionSearchFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.InConditionsFilter
 */
export declare type InConditionsFilter = Message<"zitadel.action.v2beta.InConditionsFilter"> & {
  /**
   * Defines the conditions to query for.
   *
   * @generated from field: repeated zitadel.action.v2beta.Condition conditions = 1;
   */
  conditions: Condition[];
};

/**
 * @generated from message zitadel.action.v2beta.InConditionsFilter
 */
export declare type InConditionsFilterJson = {
  /**
   * Defines the conditions to query for.
   *
   * @generated from field: repeated zitadel.action.v2beta.Condition conditions = 1;
   */
  conditions?: ConditionJson[];
};

/**
 * Describes the message zitadel.action.v2beta.InConditionsFilter.
 * Use `create(InConditionsFilterSchema)` to create a new message.
 */
export declare const InConditionsFilterSchema: GenMessage<InConditionsFilter, {jsonType: InConditionsFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.ExecutionTypeFilter
 */
export declare type ExecutionTypeFilter = Message<"zitadel.action.v2beta.ExecutionTypeFilter"> & {
  /**
   * Defines the type to query for.
   *
   * @generated from field: zitadel.action.v2beta.ExecutionType execution_type = 1;
   */
  executionType: ExecutionType;
};

/**
 * @generated from message zitadel.action.v2beta.ExecutionTypeFilter
 */
export declare type ExecutionTypeFilterJson = {
  /**
   * Defines the type to query for.
   *
   * @generated from field: zitadel.action.v2beta.ExecutionType execution_type = 1;
   */
  executionType?: ExecutionTypeJson;
};

/**
 * Describes the message zitadel.action.v2beta.ExecutionTypeFilter.
 * Use `create(ExecutionTypeFilterSchema)` to create a new message.
 */
export declare const ExecutionTypeFilterSchema: GenMessage<ExecutionTypeFilter, {jsonType: ExecutionTypeFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.TargetFilter
 */
export declare type TargetFilter = Message<"zitadel.action.v2beta.TargetFilter"> & {
  /**
   * Defines the id to query for.
   *
   * @generated from field: string target_id = 1;
   */
  targetId: string;
};

/**
 * @generated from message zitadel.action.v2beta.TargetFilter
 */
export declare type TargetFilterJson = {
  /**
   * Defines the id to query for.
   *
   * @generated from field: string target_id = 1;
   */
  targetId?: string;
};

/**
 * Describes the message zitadel.action.v2beta.TargetFilter.
 * Use `create(TargetFilterSchema)` to create a new message.
 */
export declare const TargetFilterSchema: GenMessage<TargetFilter, {jsonType: TargetFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.TargetSearchFilter
 */
export declare type TargetSearchFilter = Message<"zitadel.action.v2beta.TargetSearchFilter"> & {
  /**
   * @generated from oneof zitadel.action.v2beta.TargetSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.action.v2beta.TargetNameFilter target_name_filter = 1;
     */
    value: TargetNameFilter;
    case: "targetNameFilter";
  } | {
    /**
     * @generated from field: zitadel.action.v2beta.InTargetIDsFilter in_target_ids_filter = 2;
     */
    value: InTargetIDsFilter;
    case: "inTargetIdsFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.action.v2beta.TargetSearchFilter
 */
export declare type TargetSearchFilterJson = {
  /**
   * @generated from field: zitadel.action.v2beta.TargetNameFilter target_name_filter = 1;
   */
  targetNameFilter?: TargetNameFilterJson;

  /**
   * @generated from field: zitadel.action.v2beta.InTargetIDsFilter in_target_ids_filter = 2;
   */
  inTargetIdsFilter?: InTargetIDsFilterJson;
};

/**
 * Describes the message zitadel.action.v2beta.TargetSearchFilter.
 * Use `create(TargetSearchFilterSchema)` to create a new message.
 */
export declare const TargetSearchFilterSchema: GenMessage<TargetSearchFilter, {jsonType: TargetSearchFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.TargetNameFilter
 */
export declare type TargetNameFilter = Message<"zitadel.action.v2beta.TargetNameFilter"> & {
  /**
   * Defines the name of the target to query for.
   *
   * @generated from field: string target_name = 1;
   */
  targetName: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * @generated from message zitadel.action.v2beta.TargetNameFilter
 */
export declare type TargetNameFilterJson = {
  /**
   * Defines the name of the target to query for.
   *
   * @generated from field: string target_name = 1;
   */
  targetName?: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method?: TextFilterMethodJson;
};

/**
 * Describes the message zitadel.action.v2beta.TargetNameFilter.
 * Use `create(TargetNameFilterSchema)` to create a new message.
 */
export declare const TargetNameFilterSchema: GenMessage<TargetNameFilter, {jsonType: TargetNameFilterJson}>;

/**
 * @generated from message zitadel.action.v2beta.InTargetIDsFilter
 */
export declare type InTargetIDsFilter = Message<"zitadel.action.v2beta.InTargetIDsFilter"> & {
  /**
   * Defines the ids to query for.
   *
   * @generated from field: repeated string target_ids = 1;
   */
  targetIds: string[];
};

/**
 * @generated from message zitadel.action.v2beta.InTargetIDsFilter
 */
export declare type InTargetIDsFilterJson = {
  /**
   * Defines the ids to query for.
   *
   * @generated from field: repeated string target_ids = 1;
   */
  targetIds?: string[];
};

/**
 * Describes the message zitadel.action.v2beta.InTargetIDsFilter.
 * Use `create(InTargetIDsFilterSchema)` to create a new message.
 */
export declare const InTargetIDsFilterSchema: GenMessage<InTargetIDsFilter, {jsonType: InTargetIDsFilterJson}>;

/**
 * @generated from enum zitadel.action.v2beta.TargetFieldName
 */
export enum TargetFieldName {
  /**
   * @generated from enum value: TARGET_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_ID = 1;
   */
  ID = 1,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_CREATED_DATE = 2;
   */
  CREATED_DATE = 2,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_CHANGED_DATE = 3;
   */
  CHANGED_DATE = 3,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_NAME = 4;
   */
  NAME = 4,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_TARGET_TYPE = 5;
   */
  TARGET_TYPE = 5,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_URL = 6;
   */
  URL = 6,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_TIMEOUT = 7;
   */
  TIMEOUT = 7,

  /**
   * @generated from enum value: TARGET_FIELD_NAME_INTERRUPT_ON_ERROR = 8;
   */
  INTERRUPT_ON_ERROR = 8,
}

/**
 * @generated from enum zitadel.action.v2beta.TargetFieldName
 */
export declare type TargetFieldNameJson = "TARGET_FIELD_NAME_UNSPECIFIED" | "TARGET_FIELD_NAME_ID" | "TARGET_FIELD_NAME_CREATED_DATE" | "TARGET_FIELD_NAME_CHANGED_DATE" | "TARGET_FIELD_NAME_NAME" | "TARGET_FIELD_NAME_TARGET_TYPE" | "TARGET_FIELD_NAME_URL" | "TARGET_FIELD_NAME_TIMEOUT" | "TARGET_FIELD_NAME_INTERRUPT_ON_ERROR";

/**
 * Describes the enum zitadel.action.v2beta.TargetFieldName.
 */
export declare const TargetFieldNameSchema: GenEnum<TargetFieldName, TargetFieldNameJson>;

/**
 * @generated from enum zitadel.action.v2beta.ExecutionType
 */
export enum ExecutionType {
  /**
   * @generated from enum value: EXECUTION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EXECUTION_TYPE_REQUEST = 1;
   */
  REQUEST = 1,

  /**
   * @generated from enum value: EXECUTION_TYPE_RESPONSE = 2;
   */
  RESPONSE = 2,

  /**
   * @generated from enum value: EXECUTION_TYPE_EVENT = 3;
   */
  EVENT = 3,

  /**
   * @generated from enum value: EXECUTION_TYPE_FUNCTION = 4;
   */
  FUNCTION = 4,
}

/**
 * @generated from enum zitadel.action.v2beta.ExecutionType
 */
export declare type ExecutionTypeJson = "EXECUTION_TYPE_UNSPECIFIED" | "EXECUTION_TYPE_REQUEST" | "EXECUTION_TYPE_RESPONSE" | "EXECUTION_TYPE_EVENT" | "EXECUTION_TYPE_FUNCTION";

/**
 * Describes the enum zitadel.action.v2beta.ExecutionType.
 */
export declare const ExecutionTypeSchema: GenEnum<ExecutionType, ExecutionTypeJson>;

/**
 * @generated from enum zitadel.action.v2beta.ExecutionFieldName
 */
export enum ExecutionFieldName {
  /**
   * @generated from enum value: EXECUTION_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EXECUTION_FIELD_NAME_ID = 1;
   */
  ID = 1,

  /**
   * @generated from enum value: EXECUTION_FIELD_NAME_CREATED_DATE = 2;
   */
  CREATED_DATE = 2,

  /**
   * @generated from enum value: EXECUTION_FIELD_NAME_CHANGED_DATE = 3;
   */
  CHANGED_DATE = 3,
}

/**
 * @generated from enum zitadel.action.v2beta.ExecutionFieldName
 */
export declare type ExecutionFieldNameJson = "EXECUTION_FIELD_NAME_UNSPECIFIED" | "EXECUTION_FIELD_NAME_ID" | "EXECUTION_FIELD_NAME_CREATED_DATE" | "EXECUTION_FIELD_NAME_CHANGED_DATE";

/**
 * Describes the enum zitadel.action.v2beta.ExecutionFieldName.
 */
export declare const ExecutionFieldNameSchema: GenEnum<ExecutionFieldName, ExecutionFieldNameJson>;

