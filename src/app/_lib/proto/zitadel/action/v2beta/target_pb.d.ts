// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/action/v2beta/target.proto (package zitadel.action.v2beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Duration, DurationJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/action/v2beta/target.proto.
 */
export declare const file_zitadel_action_v2beta_target: GenFile;

/**
 * @generated from message zitadel.action.v2beta.Target
 */
export declare type Target = Message<"zitadel.action.v2beta.Target"> & {
  /**
   * The unique identifier of the target.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp of the target creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: Timestamp;

  /**
   * The timestamp of the last change to the target (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 3;
   */
  changeDate?: Timestamp;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * Defines the target type and how the response of the target is treated.
   *
   * @generated from oneof zitadel.action.v2beta.Target.target_type
   */
  targetType: {
    /**
     * @generated from field: zitadel.action.v2beta.RESTWebhook rest_webhook = 5;
     */
    value: RESTWebhook;
    case: "restWebhook";
  } | {
    /**
     * @generated from field: zitadel.action.v2beta.RESTCall rest_call = 6;
     */
    value: RESTCall;
    case: "restCall";
  } | {
    /**
     * @generated from field: zitadel.action.v2beta.RESTAsync rest_async = 7;
     */
    value: RESTAsync;
    case: "restAsync";
  } | { case: undefined; value?: undefined };

  /**
   * Timeout defines the duration until ZITADEL cancels the execution.
   * If the target doesn't respond before this timeout expires, the the connection is closed and the action fails. Depending on the target type and possible setting on `interrupt_on_error` following targets will not be called. In case of a `rest_async` target only this specific target will fail, without any influence on other targets of the same execution.
   *
   * @generated from field: google.protobuf.Duration timeout = 8;
   */
  timeout?: Duration;

  /**
   * @generated from field: string endpoint = 9;
   */
  endpoint: string;

  /**
   * @generated from field: string signing_key = 10;
   */
  signingKey: string;
};

/**
 * @generated from message zitadel.action.v2beta.Target
 */
export declare type TargetJson = {
  /**
   * The unique identifier of the target.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The timestamp of the target creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: TimestampJson;

  /**
   * The timestamp of the last change to the target (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 3;
   */
  changeDate?: TimestampJson;

  /**
   * @generated from field: string name = 4;
   */
  name?: string;

  /**
   * @generated from field: zitadel.action.v2beta.RESTWebhook rest_webhook = 5;
   */
  restWebhook?: RESTWebhookJson;

  /**
   * @generated from field: zitadel.action.v2beta.RESTCall rest_call = 6;
   */
  restCall?: RESTCallJson;

  /**
   * @generated from field: zitadel.action.v2beta.RESTAsync rest_async = 7;
   */
  restAsync?: RESTAsyncJson;

  /**
   * Timeout defines the duration until ZITADEL cancels the execution.
   * If the target doesn't respond before this timeout expires, the the connection is closed and the action fails. Depending on the target type and possible setting on `interrupt_on_error` following targets will not be called. In case of a `rest_async` target only this specific target will fail, without any influence on other targets of the same execution.
   *
   * @generated from field: google.protobuf.Duration timeout = 8;
   */
  timeout?: DurationJson;

  /**
   * @generated from field: string endpoint = 9;
   */
  endpoint?: string;

  /**
   * @generated from field: string signing_key = 10;
   */
  signingKey?: string;
};

/**
 * Describes the message zitadel.action.v2beta.Target.
 * Use `create(TargetSchema)` to create a new message.
 */
export declare const TargetSchema: GenMessage<Target, {jsonType: TargetJson}>;

/**
 * @generated from message zitadel.action.v2beta.RESTWebhook
 */
export declare type RESTWebhook = Message<"zitadel.action.v2beta.RESTWebhook"> & {
  /**
   * Define if any error stops the whole execution. By default the process continues as normal.
   *
   * @generated from field: bool interrupt_on_error = 1;
   */
  interruptOnError: boolean;
};

/**
 * @generated from message zitadel.action.v2beta.RESTWebhook
 */
export declare type RESTWebhookJson = {
  /**
   * Define if any error stops the whole execution. By default the process continues as normal.
   *
   * @generated from field: bool interrupt_on_error = 1;
   */
  interruptOnError?: boolean;
};

/**
 * Describes the message zitadel.action.v2beta.RESTWebhook.
 * Use `create(RESTWebhookSchema)` to create a new message.
 */
export declare const RESTWebhookSchema: GenMessage<RESTWebhook, {jsonType: RESTWebhookJson}>;

/**
 * @generated from message zitadel.action.v2beta.RESTCall
 */
export declare type RESTCall = Message<"zitadel.action.v2beta.RESTCall"> & {
  /**
   * Define if any error stops the whole execution. By default the process continues as normal.
   *
   * @generated from field: bool interrupt_on_error = 1;
   */
  interruptOnError: boolean;
};

/**
 * @generated from message zitadel.action.v2beta.RESTCall
 */
export declare type RESTCallJson = {
  /**
   * Define if any error stops the whole execution. By default the process continues as normal.
   *
   * @generated from field: bool interrupt_on_error = 1;
   */
  interruptOnError?: boolean;
};

/**
 * Describes the message zitadel.action.v2beta.RESTCall.
 * Use `create(RESTCallSchema)` to create a new message.
 */
export declare const RESTCallSchema: GenMessage<RESTCall, {jsonType: RESTCallJson}>;

/**
 * @generated from message zitadel.action.v2beta.RESTAsync
 */
export declare type RESTAsync = Message<"zitadel.action.v2beta.RESTAsync"> & {
};

/**
 * @generated from message zitadel.action.v2beta.RESTAsync
 */
export declare type RESTAsyncJson = {
};

/**
 * Describes the message zitadel.action.v2beta.RESTAsync.
 * Use `create(RESTAsyncSchema)` to create a new message.
 */
export declare const RESTAsyncSchema: GenMessage<RESTAsync, {jsonType: RESTAsyncJson}>;

