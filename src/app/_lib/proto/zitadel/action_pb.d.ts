// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/action.proto (package zitadel.action.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson, TextQueryMethod, TextQueryMethodJson } from "./object_pb.js";
import type { Duration, DurationJson } from "@bufbuild/protobuf/wkt";
import type { LocalizedMessage, LocalizedMessageJson } from "./message_pb.js";

/**
 * Describes the file zitadel/action.proto.
 */
export declare const file_zitadel_action: GenFile;

/**
 * @generated from message zitadel.action.v1.Action
 */
export declare type Action = Message<"zitadel.action.v1.Action"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.action.v1.ActionState state = 3;
   */
  state: ActionState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string script = 5;
   */
  script: string;

  /**
   * @generated from field: google.protobuf.Duration timeout = 6;
   */
  timeout?: Duration;

  /**
   * @generated from field: bool allowed_to_fail = 7;
   */
  allowedToFail: boolean;
};

/**
 * @generated from message zitadel.action.v1.Action
 */
export declare type ActionJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: zitadel.action.v1.ActionState state = 3;
   */
  state?: ActionStateJson;

  /**
   * @generated from field: string name = 4;
   */
  name?: string;

  /**
   * @generated from field: string script = 5;
   */
  script?: string;

  /**
   * @generated from field: google.protobuf.Duration timeout = 6;
   */
  timeout?: DurationJson;

  /**
   * @generated from field: bool allowed_to_fail = 7;
   */
  allowedToFail?: boolean;
};

/**
 * Describes the message zitadel.action.v1.Action.
 * Use `create(ActionSchema)` to create a new message.
 */
export declare const ActionSchema: GenMessage<Action, {jsonType: ActionJson}>;

/**
 * @generated from message zitadel.action.v1.ActionIDQuery
 */
export declare type ActionIDQuery = Message<"zitadel.action.v1.ActionIDQuery"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * @generated from message zitadel.action.v1.ActionIDQuery
 */
export declare type ActionIDQueryJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.action.v1.ActionIDQuery.
 * Use `create(ActionIDQuerySchema)` to create a new message.
 */
export declare const ActionIDQuerySchema: GenMessage<ActionIDQuery, {jsonType: ActionIDQueryJson}>;

/**
 * @generated from message zitadel.action.v1.ActionNameQuery
 */
export declare type ActionNameQuery = Message<"zitadel.action.v1.ActionNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.action.v1.ActionNameQuery
 */
export declare type ActionNameQueryJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.action.v1.ActionNameQuery.
 * Use `create(ActionNameQuerySchema)` to create a new message.
 */
export declare const ActionNameQuerySchema: GenMessage<ActionNameQuery, {jsonType: ActionNameQueryJson}>;

/**
 * ActionStateQuery always equals
 *
 * @generated from message zitadel.action.v1.ActionStateQuery
 */
export declare type ActionStateQuery = Message<"zitadel.action.v1.ActionStateQuery"> & {
  /**
   * @generated from field: zitadel.action.v1.ActionState state = 1;
   */
  state: ActionState;
};

/**
 * ActionStateQuery always equals
 *
 * @generated from message zitadel.action.v1.ActionStateQuery
 */
export declare type ActionStateQueryJson = {
  /**
   * @generated from field: zitadel.action.v1.ActionState state = 1;
   */
  state?: ActionStateJson;
};

/**
 * Describes the message zitadel.action.v1.ActionStateQuery.
 * Use `create(ActionStateQuerySchema)` to create a new message.
 */
export declare const ActionStateQuerySchema: GenMessage<ActionStateQuery, {jsonType: ActionStateQueryJson}>;

/**
 * @generated from message zitadel.action.v1.Flow
 */
export declare type Flow = Message<"zitadel.action.v1.Flow"> & {
  /**
   * id of the flow type
   *
   * @generated from field: zitadel.action.v1.FlowType type = 1;
   */
  type?: FlowType;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.action.v1.FlowState state = 3;
   */
  state: FlowState;

  /**
   * @generated from field: repeated zitadel.action.v1.TriggerAction trigger_actions = 4;
   */
  triggerActions: TriggerAction[];
};

/**
 * @generated from message zitadel.action.v1.Flow
 */
export declare type FlowJson = {
  /**
   * id of the flow type
   *
   * @generated from field: zitadel.action.v1.FlowType type = 1;
   */
  type?: FlowTypeJson;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: zitadel.action.v1.FlowState state = 3;
   */
  state?: FlowStateJson;

  /**
   * @generated from field: repeated zitadel.action.v1.TriggerAction trigger_actions = 4;
   */
  triggerActions?: TriggerActionJson[];
};

/**
 * Describes the message zitadel.action.v1.Flow.
 * Use `create(FlowSchema)` to create a new message.
 */
export declare const FlowSchema: GenMessage<Flow, {jsonType: FlowJson}>;

/**
 * @generated from message zitadel.action.v1.FlowType
 */
export declare type FlowType = Message<"zitadel.action.v1.FlowType"> & {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessage;
};

/**
 * @generated from message zitadel.action.v1.FlowType
 */
export declare type FlowTypeJson = {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessageJson;
};

/**
 * Describes the message zitadel.action.v1.FlowType.
 * Use `create(FlowTypeSchema)` to create a new message.
 */
export declare const FlowTypeSchema: GenMessage<FlowType, {jsonType: FlowTypeJson}>;

/**
 * @generated from message zitadel.action.v1.TriggerType
 */
export declare type TriggerType = Message<"zitadel.action.v1.TriggerType"> & {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessage;
};

/**
 * @generated from message zitadel.action.v1.TriggerType
 */
export declare type TriggerTypeJson = {
  /**
   * identifier of the type
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * key and name of the type
   *
   * @generated from field: zitadel.v1.LocalizedMessage name = 2;
   */
  name?: LocalizedMessageJson;
};

/**
 * Describes the message zitadel.action.v1.TriggerType.
 * Use `create(TriggerTypeSchema)` to create a new message.
 */
export declare const TriggerTypeSchema: GenMessage<TriggerType, {jsonType: TriggerTypeJson}>;

/**
 * @generated from message zitadel.action.v1.TriggerAction
 */
export declare type TriggerAction = Message<"zitadel.action.v1.TriggerAction"> & {
  /**
   * id of the trigger type
   *
   * @generated from field: zitadel.action.v1.TriggerType trigger_type = 1;
   */
  triggerType?: TriggerType;

  /**
   * @generated from field: repeated zitadel.action.v1.Action actions = 2;
   */
  actions: Action[];
};

/**
 * @generated from message zitadel.action.v1.TriggerAction
 */
export declare type TriggerActionJson = {
  /**
   * id of the trigger type
   *
   * @generated from field: zitadel.action.v1.TriggerType trigger_type = 1;
   */
  triggerType?: TriggerTypeJson;

  /**
   * @generated from field: repeated zitadel.action.v1.Action actions = 2;
   */
  actions?: ActionJson[];
};

/**
 * Describes the message zitadel.action.v1.TriggerAction.
 * Use `create(TriggerActionSchema)` to create a new message.
 */
export declare const TriggerActionSchema: GenMessage<TriggerAction, {jsonType: TriggerActionJson}>;

/**
 * @generated from enum zitadel.action.v1.ActionState
 */
export enum ActionState {
  /**
   * @generated from enum value: ACTION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTION_STATE_INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * @generated from enum value: ACTION_STATE_ACTIVE = 2;
   */
  ACTIVE = 2,
}

/**
 * @generated from enum zitadel.action.v1.ActionState
 */
export declare type ActionStateJson = "ACTION_STATE_UNSPECIFIED" | "ACTION_STATE_INACTIVE" | "ACTION_STATE_ACTIVE";

/**
 * Describes the enum zitadel.action.v1.ActionState.
 */
export declare const ActionStateSchema: GenEnum<ActionState, ActionStateJson>;

/**
 * @generated from enum zitadel.action.v1.ActionFieldName
 */
export enum ActionFieldName {
  /**
   * @generated from enum value: ACTION_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_ID = 2;
   */
  ID = 2,

  /**
   * @generated from enum value: ACTION_FIELD_NAME_STATE = 3;
   */
  STATE = 3,
}

/**
 * @generated from enum zitadel.action.v1.ActionFieldName
 */
export declare type ActionFieldNameJson = "ACTION_FIELD_NAME_UNSPECIFIED" | "ACTION_FIELD_NAME_NAME" | "ACTION_FIELD_NAME_ID" | "ACTION_FIELD_NAME_STATE";

/**
 * Describes the enum zitadel.action.v1.ActionFieldName.
 */
export declare const ActionFieldNameSchema: GenEnum<ActionFieldName, ActionFieldNameJson>;

/**
 * @generated from enum zitadel.action.v1.FlowState
 */
export enum FlowState {
  /**
   * @generated from enum value: FLOW_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FLOW_STATE_INACTIVE = 1;
   */
  INACTIVE = 1,

  /**
   * @generated from enum value: FLOW_STATE_ACTIVE = 2;
   */
  ACTIVE = 2,
}

/**
 * @generated from enum zitadel.action.v1.FlowState
 */
export declare type FlowStateJson = "FLOW_STATE_UNSPECIFIED" | "FLOW_STATE_INACTIVE" | "FLOW_STATE_ACTIVE";

/**
 * Describes the enum zitadel.action.v1.FlowState.
 */
export declare const FlowStateSchema: GenEnum<FlowState, FlowStateJson>;

