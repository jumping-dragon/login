// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/analytics/v2beta/telemetry.proto (package zitadel.analytics.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/analytics/v2beta/telemetry.proto.
 */
export declare const file_zitadel_analytics_v2beta_telemetry: GenFile;

/**
 * @generated from message zitadel.analytics.v2beta.InstanceInformation
 */
export declare type InstanceInformation = Message<"zitadel.analytics.v2beta.InstanceInformation"> & {
  /**
   * The unique identifier of the instance.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The custom domains (incl. generated ones) of the instance.
   *
   * @generated from field: repeated string domains = 2;
   */
  domains: string[];

  /**
   * The creation date of the instance.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * @generated from message zitadel.analytics.v2beta.InstanceInformation
 */
export declare type InstanceInformationJson = {
  /**
   * The unique identifier of the instance.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The custom domains (incl. generated ones) of the instance.
   *
   * @generated from field: repeated string domains = 2;
   */
  domains?: string[];

  /**
   * The creation date of the instance.
   *
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: TimestampJson;
};

/**
 * Describes the message zitadel.analytics.v2beta.InstanceInformation.
 * Use `create(InstanceInformationSchema)` to create a new message.
 */
export declare const InstanceInformationSchema: GenMessage<InstanceInformation, {jsonType: InstanceInformationJson}>;

/**
 * @generated from message zitadel.analytics.v2beta.ResourceCount
 */
export declare type ResourceCount = Message<"zitadel.analytics.v2beta.ResourceCount"> & {
  /**
   * The ID of the instance for which the resource counts are reported.
   *
   * @generated from field: string instance_id = 3;
   */
  instanceId: string;

  /**
   * The parent type of the resource counts (e.g. organization or instance).
   * For example, reporting the amount of users per organization would use
   * `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
   *
   * @generated from field: zitadel.analytics.v2beta.CountParentType parent_type = 4;
   */
  parentType: CountParentType;

  /**
   * The parent ID of the resource counts (e.g. organization or instance ID).
   * For example, reporting the amount of users per organization would use
   * `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
   *
   * @generated from field: string parent_id = 5;
   */
  parentId: string;

  /**
   * The resource counts to report, e.g. amount of `users`, `organizations`, etc.
   *
   * @generated from field: string resource_name = 6;
   */
  resourceName: string;

  /**
   * The name of the table in the database, which was used to calculate the counts.
   * This can be used to deduplicate counts in case of multiple reports.
   * For example, if the counts were calculated from the `users14` table,
   * the table name would be `users14`, where there could also be a `users15` table
   * reported at the same time as the system is rolling out a new version.
   *
   * @generated from field: string table_name = 7;
   */
  tableName: string;

  /**
   * The timestamp when the count was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: Timestamp;

  /**
   * The actual amount of the resource.
   *
   * @generated from field: uint32 amount = 9;
   */
  amount: number;
};

/**
 * @generated from message zitadel.analytics.v2beta.ResourceCount
 */
export declare type ResourceCountJson = {
  /**
   * The ID of the instance for which the resource counts are reported.
   *
   * @generated from field: string instance_id = 3;
   */
  instanceId?: string;

  /**
   * The parent type of the resource counts (e.g. organization or instance).
   * For example, reporting the amount of users per organization would use
   * `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
   *
   * @generated from field: zitadel.analytics.v2beta.CountParentType parent_type = 4;
   */
  parentType?: CountParentTypeJson;

  /**
   * The parent ID of the resource counts (e.g. organization or instance ID).
   * For example, reporting the amount of users per organization would use
   * `COUNT_PARENT_TYPE_ORGANIZATION` as parent type and the organization ID as parent ID.
   *
   * @generated from field: string parent_id = 5;
   */
  parentId?: string;

  /**
   * The resource counts to report, e.g. amount of `users`, `organizations`, etc.
   *
   * @generated from field: string resource_name = 6;
   */
  resourceName?: string;

  /**
   * The name of the table in the database, which was used to calculate the counts.
   * This can be used to deduplicate counts in case of multiple reports.
   * For example, if the counts were calculated from the `users14` table,
   * the table name would be `users14`, where there could also be a `users15` table
   * reported at the same time as the system is rolling out a new version.
   *
   * @generated from field: string table_name = 7;
   */
  tableName?: string;

  /**
   * The timestamp when the count was last updated.
   *
   * @generated from field: google.protobuf.Timestamp updated_at = 8;
   */
  updatedAt?: TimestampJson;

  /**
   * The actual amount of the resource.
   *
   * @generated from field: uint32 amount = 9;
   */
  amount?: number;
};

/**
 * Describes the message zitadel.analytics.v2beta.ResourceCount.
 * Use `create(ResourceCountSchema)` to create a new message.
 */
export declare const ResourceCountSchema: GenMessage<ResourceCount, {jsonType: ResourceCountJson}>;

/**
 * @generated from enum zitadel.analytics.v2beta.CountParentType
 */
export enum CountParentType {
  /**
   * @generated from enum value: COUNT_PARENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COUNT_PARENT_TYPE_INSTANCE = 1;
   */
  INSTANCE = 1,

  /**
   * @generated from enum value: COUNT_PARENT_TYPE_ORGANIZATION = 2;
   */
  ORGANIZATION = 2,
}

/**
 * @generated from enum zitadel.analytics.v2beta.CountParentType
 */
export declare type CountParentTypeJson = "COUNT_PARENT_TYPE_UNSPECIFIED" | "COUNT_PARENT_TYPE_INSTANCE" | "COUNT_PARENT_TYPE_ORGANIZATION";

/**
 * Describes the enum zitadel.analytics.v2beta.CountParentType.
 */
export declare const CountParentTypeSchema: GenEnum<CountParentType, CountParentTypeJson>;

