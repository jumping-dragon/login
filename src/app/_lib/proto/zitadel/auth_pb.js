// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/auth.proto (package zitadel.auth.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_zitadel_user } from "./user_pb.js";
import { file_zitadel_org } from "./org_pb.js";
import { file_zitadel_change } from "./change_pb.js";
import { file_zitadel_object } from "./object_pb.js";
import { file_zitadel_options } from "./options_pb.js";
import { file_zitadel_policy } from "./policy_pb.js";
import { file_zitadel_idp } from "./idp_pb.js";
import { file_zitadel_metadata } from "./metadata_pb.js";
import { file_validate_validate } from "../validate/validate_pb.js";
import { file_google_api_annotations } from "../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../google/api/field_behavior_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb.js";

/**
 * Describes the file zitadel/auth.proto.
 */
export const file_zitadel_auth = /*@__PURE__*/
  fileDesc("", [file_zitadel_user, file_zitadel_org, file_zitadel_change, file_zitadel_object, file_zitadel_options, file_zitadel_policy, file_zitadel_idp, file_zitadel_metadata, file_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations]);

/**
 * Describes the message zitadel.auth.v1.HealthzRequest.
 * Use `create(HealthzRequestSchema)` to create a new message.
 */
export const HealthzRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 0);

/**
 * Describes the message zitadel.auth.v1.HealthzResponse.
 * Use `create(HealthzResponseSchema)` to create a new message.
 */
export const HealthzResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 1);

/**
 * Describes the message zitadel.auth.v1.GetSupportedLanguagesRequest.
 * Use `create(GetSupportedLanguagesRequestSchema)` to create a new message.
 */
export const GetSupportedLanguagesRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 2);

/**
 * Describes the message zitadel.auth.v1.GetSupportedLanguagesResponse.
 * Use `create(GetSupportedLanguagesResponseSchema)` to create a new message.
 */
export const GetSupportedLanguagesResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 3);

/**
 * Describes the message zitadel.auth.v1.GetMyUserRequest.
 * Use `create(GetMyUserRequestSchema)` to create a new message.
 */
export const GetMyUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 4);

/**
 * Describes the message zitadel.auth.v1.GetMyUserResponse.
 * Use `create(GetMyUserResponseSchema)` to create a new message.
 */
export const GetMyUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 5);

/**
 * Describes the message zitadel.auth.v1.RemoveMyUserRequest.
 * Use `create(RemoveMyUserRequestSchema)` to create a new message.
 */
export const RemoveMyUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 6);

/**
 * Describes the message zitadel.auth.v1.RemoveMyUserResponse.
 * Use `create(RemoveMyUserResponseSchema)` to create a new message.
 */
export const RemoveMyUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 7);

/**
 * Describes the message zitadel.auth.v1.ListMyUserChangesRequest.
 * Use `create(ListMyUserChangesRequestSchema)` to create a new message.
 */
export const ListMyUserChangesRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 8);

/**
 * Describes the message zitadel.auth.v1.ListMyUserChangesResponse.
 * Use `create(ListMyUserChangesResponseSchema)` to create a new message.
 */
export const ListMyUserChangesResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 9);

/**
 * Describes the message zitadel.auth.v1.ListMyUserSessionsRequest.
 * Use `create(ListMyUserSessionsRequestSchema)` to create a new message.
 */
export const ListMyUserSessionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 10);

/**
 * Describes the message zitadel.auth.v1.ListMyUserSessionsResponse.
 * Use `create(ListMyUserSessionsResponseSchema)` to create a new message.
 */
export const ListMyUserSessionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 11);

/**
 * Describes the message zitadel.auth.v1.ListMyMetadataRequest.
 * Use `create(ListMyMetadataRequestSchema)` to create a new message.
 */
export const ListMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 12);

/**
 * Describes the message zitadel.auth.v1.ListMyMetadataResponse.
 * Use `create(ListMyMetadataResponseSchema)` to create a new message.
 */
export const ListMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 13);

/**
 * Describes the message zitadel.auth.v1.GetMyMetadataRequest.
 * Use `create(GetMyMetadataRequestSchema)` to create a new message.
 */
export const GetMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 14);

/**
 * Describes the message zitadel.auth.v1.GetMyMetadataResponse.
 * Use `create(GetMyMetadataResponseSchema)` to create a new message.
 */
export const GetMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 15);

/**
 * Describes the message zitadel.auth.v1.SetMyMetadataRequest.
 * Use `create(SetMyMetadataRequestSchema)` to create a new message.
 */
export const SetMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 16);

/**
 * Describes the message zitadel.auth.v1.SetMyMetadataResponse.
 * Use `create(SetMyMetadataResponseSchema)` to create a new message.
 */
export const SetMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 17);

/**
 * Describes the message zitadel.auth.v1.BulkSetMyMetadataRequest.
 * Use `create(BulkSetMyMetadataRequestSchema)` to create a new message.
 */
export const BulkSetMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 18);

/**
 * Describes the message zitadel.auth.v1.BulkSetMyMetadataRequest.Metadata.
 * Use `create(BulkSetMyMetadataRequest_MetadataSchema)` to create a new message.
 */
export const BulkSetMyMetadataRequest_MetadataSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 18, 0);

/**
 * Describes the message zitadel.auth.v1.BulkSetMyMetadataResponse.
 * Use `create(BulkSetMyMetadataResponseSchema)` to create a new message.
 */
export const BulkSetMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 19);

/**
 * Describes the message zitadel.auth.v1.RemoveMyMetadataRequest.
 * Use `create(RemoveMyMetadataRequestSchema)` to create a new message.
 */
export const RemoveMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 20);

/**
 * Describes the message zitadel.auth.v1.RemoveMyMetadataResponse.
 * Use `create(RemoveMyMetadataResponseSchema)` to create a new message.
 */
export const RemoveMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 21);

/**
 * Describes the message zitadel.auth.v1.BulkRemoveMyMetadataRequest.
 * Use `create(BulkRemoveMyMetadataRequestSchema)` to create a new message.
 */
export const BulkRemoveMyMetadataRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 22);

/**
 * Describes the message zitadel.auth.v1.BulkRemoveMyMetadataResponse.
 * Use `create(BulkRemoveMyMetadataResponseSchema)` to create a new message.
 */
export const BulkRemoveMyMetadataResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 23);

/**
 * Describes the message zitadel.auth.v1.ListMyRefreshTokensRequest.
 * Use `create(ListMyRefreshTokensRequestSchema)` to create a new message.
 */
export const ListMyRefreshTokensRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 24);

/**
 * Describes the message zitadel.auth.v1.ListMyRefreshTokensResponse.
 * Use `create(ListMyRefreshTokensResponseSchema)` to create a new message.
 */
export const ListMyRefreshTokensResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 25);

/**
 * Describes the message zitadel.auth.v1.RevokeMyRefreshTokenRequest.
 * Use `create(RevokeMyRefreshTokenRequestSchema)` to create a new message.
 */
export const RevokeMyRefreshTokenRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 26);

/**
 * Describes the message zitadel.auth.v1.RevokeMyRefreshTokenResponse.
 * Use `create(RevokeMyRefreshTokenResponseSchema)` to create a new message.
 */
export const RevokeMyRefreshTokenResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 27);

/**
 * Describes the message zitadel.auth.v1.RevokeAllMyRefreshTokensRequest.
 * Use `create(RevokeAllMyRefreshTokensRequestSchema)` to create a new message.
 */
export const RevokeAllMyRefreshTokensRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 28);

/**
 * Describes the message zitadel.auth.v1.RevokeAllMyRefreshTokensResponse.
 * Use `create(RevokeAllMyRefreshTokensResponseSchema)` to create a new message.
 */
export const RevokeAllMyRefreshTokensResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 29);

/**
 * Describes the message zitadel.auth.v1.UpdateMyUserNameRequest.
 * Use `create(UpdateMyUserNameRequestSchema)` to create a new message.
 */
export const UpdateMyUserNameRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 30);

/**
 * Describes the message zitadel.auth.v1.UpdateMyUserNameResponse.
 * Use `create(UpdateMyUserNameResponseSchema)` to create a new message.
 */
export const UpdateMyUserNameResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 31);

/**
 * Describes the message zitadel.auth.v1.GetMyPasswordComplexityPolicyRequest.
 * Use `create(GetMyPasswordComplexityPolicyRequestSchema)` to create a new message.
 */
export const GetMyPasswordComplexityPolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 32);

/**
 * Describes the message zitadel.auth.v1.GetMyPasswordComplexityPolicyResponse.
 * Use `create(GetMyPasswordComplexityPolicyResponseSchema)` to create a new message.
 */
export const GetMyPasswordComplexityPolicyResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 33);

/**
 * Describes the message zitadel.auth.v1.UpdateMyPasswordRequest.
 * Use `create(UpdateMyPasswordRequestSchema)` to create a new message.
 */
export const UpdateMyPasswordRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 34);

/**
 * Describes the message zitadel.auth.v1.UpdateMyPasswordResponse.
 * Use `create(UpdateMyPasswordResponseSchema)` to create a new message.
 */
export const UpdateMyPasswordResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 35);

/**
 * Describes the message zitadel.auth.v1.GetMyProfileRequest.
 * Use `create(GetMyProfileRequestSchema)` to create a new message.
 */
export const GetMyProfileRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 36);

/**
 * Describes the message zitadel.auth.v1.GetMyProfileResponse.
 * Use `create(GetMyProfileResponseSchema)` to create a new message.
 */
export const GetMyProfileResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 37);

/**
 * Describes the message zitadel.auth.v1.UpdateMyProfileRequest.
 * Use `create(UpdateMyProfileRequestSchema)` to create a new message.
 */
export const UpdateMyProfileRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 38);

/**
 * Describes the message zitadel.auth.v1.UpdateMyProfileResponse.
 * Use `create(UpdateMyProfileResponseSchema)` to create a new message.
 */
export const UpdateMyProfileResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 39);

/**
 * Describes the message zitadel.auth.v1.GetMyEmailRequest.
 * Use `create(GetMyEmailRequestSchema)` to create a new message.
 */
export const GetMyEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 40);

/**
 * Describes the message zitadel.auth.v1.GetMyEmailResponse.
 * Use `create(GetMyEmailResponseSchema)` to create a new message.
 */
export const GetMyEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 41);

/**
 * Describes the message zitadel.auth.v1.SetMyEmailRequest.
 * Use `create(SetMyEmailRequestSchema)` to create a new message.
 */
export const SetMyEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 42);

/**
 * Describes the message zitadel.auth.v1.SetMyEmailResponse.
 * Use `create(SetMyEmailResponseSchema)` to create a new message.
 */
export const SetMyEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 43);

/**
 * Describes the message zitadel.auth.v1.VerifyMyEmailRequest.
 * Use `create(VerifyMyEmailRequestSchema)` to create a new message.
 */
export const VerifyMyEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 44);

/**
 * Describes the message zitadel.auth.v1.VerifyMyEmailResponse.
 * Use `create(VerifyMyEmailResponseSchema)` to create a new message.
 */
export const VerifyMyEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 45);

/**
 * Describes the message zitadel.auth.v1.ResendMyEmailVerificationRequest.
 * Use `create(ResendMyEmailVerificationRequestSchema)` to create a new message.
 */
export const ResendMyEmailVerificationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 46);

/**
 * Describes the message zitadel.auth.v1.ResendMyEmailVerificationResponse.
 * Use `create(ResendMyEmailVerificationResponseSchema)` to create a new message.
 */
export const ResendMyEmailVerificationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 47);

/**
 * Describes the message zitadel.auth.v1.GetMyPhoneRequest.
 * Use `create(GetMyPhoneRequestSchema)` to create a new message.
 */
export const GetMyPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 48);

/**
 * Describes the message zitadel.auth.v1.GetMyPhoneResponse.
 * Use `create(GetMyPhoneResponseSchema)` to create a new message.
 */
export const GetMyPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 49);

/**
 * Describes the message zitadel.auth.v1.SetMyPhoneRequest.
 * Use `create(SetMyPhoneRequestSchema)` to create a new message.
 */
export const SetMyPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 50);

/**
 * Describes the message zitadel.auth.v1.SetMyPhoneResponse.
 * Use `create(SetMyPhoneResponseSchema)` to create a new message.
 */
export const SetMyPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 51);

/**
 * Describes the message zitadel.auth.v1.VerifyMyPhoneRequest.
 * Use `create(VerifyMyPhoneRequestSchema)` to create a new message.
 */
export const VerifyMyPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 52);

/**
 * Describes the message zitadel.auth.v1.VerifyMyPhoneResponse.
 * Use `create(VerifyMyPhoneResponseSchema)` to create a new message.
 */
export const VerifyMyPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 53);

/**
 * Describes the message zitadel.auth.v1.ResendMyPhoneVerificationRequest.
 * Use `create(ResendMyPhoneVerificationRequestSchema)` to create a new message.
 */
export const ResendMyPhoneVerificationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 54);

/**
 * Describes the message zitadel.auth.v1.ResendMyPhoneVerificationResponse.
 * Use `create(ResendMyPhoneVerificationResponseSchema)` to create a new message.
 */
export const ResendMyPhoneVerificationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 55);

/**
 * Describes the message zitadel.auth.v1.RemoveMyPhoneRequest.
 * Use `create(RemoveMyPhoneRequestSchema)` to create a new message.
 */
export const RemoveMyPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 56);

/**
 * Describes the message zitadel.auth.v1.RemoveMyPhoneResponse.
 * Use `create(RemoveMyPhoneResponseSchema)` to create a new message.
 */
export const RemoveMyPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 57);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAvatarRequest.
 * Use `create(RemoveMyAvatarRequestSchema)` to create a new message.
 */
export const RemoveMyAvatarRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 58);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAvatarResponse.
 * Use `create(RemoveMyAvatarResponseSchema)` to create a new message.
 */
export const RemoveMyAvatarResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 59);

/**
 * Describes the message zitadel.auth.v1.ListMyLinkedIDPsRequest.
 * Use `create(ListMyLinkedIDPsRequestSchema)` to create a new message.
 */
export const ListMyLinkedIDPsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 60);

/**
 * Describes the message zitadel.auth.v1.ListMyLinkedIDPsResponse.
 * Use `create(ListMyLinkedIDPsResponseSchema)` to create a new message.
 */
export const ListMyLinkedIDPsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 61);

/**
 * Describes the message zitadel.auth.v1.RemoveMyLinkedIDPRequest.
 * Use `create(RemoveMyLinkedIDPRequestSchema)` to create a new message.
 */
export const RemoveMyLinkedIDPRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 62);

/**
 * Describes the message zitadel.auth.v1.RemoveMyLinkedIDPResponse.
 * Use `create(RemoveMyLinkedIDPResponseSchema)` to create a new message.
 */
export const RemoveMyLinkedIDPResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 63);

/**
 * Describes the message zitadel.auth.v1.ListMyAuthFactorsRequest.
 * Use `create(ListMyAuthFactorsRequestSchema)` to create a new message.
 */
export const ListMyAuthFactorsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 64);

/**
 * Describes the message zitadel.auth.v1.ListMyAuthFactorsResponse.
 * Use `create(ListMyAuthFactorsResponseSchema)` to create a new message.
 */
export const ListMyAuthFactorsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 65);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorU2FRequest.
 * Use `create(AddMyAuthFactorU2FRequestSchema)` to create a new message.
 */
export const AddMyAuthFactorU2FRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 66);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorU2FResponse.
 * Use `create(AddMyAuthFactorU2FResponseSchema)` to create a new message.
 */
export const AddMyAuthFactorU2FResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 67);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPRequest.
 * Use `create(AddMyAuthFactorOTPRequestSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 68);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPResponse.
 * Use `create(AddMyAuthFactorOTPResponseSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 69);

/**
 * Describes the message zitadel.auth.v1.VerifyMyAuthFactorOTPRequest.
 * Use `create(VerifyMyAuthFactorOTPRequestSchema)` to create a new message.
 */
export const VerifyMyAuthFactorOTPRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 70);

/**
 * Describes the message zitadel.auth.v1.VerifyMyAuthFactorOTPResponse.
 * Use `create(VerifyMyAuthFactorOTPResponseSchema)` to create a new message.
 */
export const VerifyMyAuthFactorOTPResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 71);

/**
 * Describes the message zitadel.auth.v1.VerifyMyAuthFactorU2FRequest.
 * Use `create(VerifyMyAuthFactorU2FRequestSchema)` to create a new message.
 */
export const VerifyMyAuthFactorU2FRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 72);

/**
 * Describes the message zitadel.auth.v1.VerifyMyAuthFactorU2FResponse.
 * Use `create(VerifyMyAuthFactorU2FResponseSchema)` to create a new message.
 */
export const VerifyMyAuthFactorU2FResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 73);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPRequest.
 * Use `create(RemoveMyAuthFactorOTPRequestSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 74);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPResponse.
 * Use `create(RemoveMyAuthFactorOTPResponseSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 75);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPSMSRequest.
 * Use `create(AddMyAuthFactorOTPSMSRequestSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPSMSRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 76);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPSMSResponse.
 * Use `create(AddMyAuthFactorOTPSMSResponseSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPSMSResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 77);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPSMSRequest.
 * Use `create(RemoveMyAuthFactorOTPSMSRequestSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPSMSRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 78);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPSMSResponse.
 * Use `create(RemoveMyAuthFactorOTPSMSResponseSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPSMSResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 79);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPEmailRequest.
 * Use `create(AddMyAuthFactorOTPEmailRequestSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 80);

/**
 * Describes the message zitadel.auth.v1.AddMyAuthFactorOTPEmailResponse.
 * Use `create(AddMyAuthFactorOTPEmailResponseSchema)` to create a new message.
 */
export const AddMyAuthFactorOTPEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 81);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPEmailRequest.
 * Use `create(RemoveMyAuthFactorOTPEmailRequestSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 82);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorOTPEmailResponse.
 * Use `create(RemoveMyAuthFactorOTPEmailResponseSchema)` to create a new message.
 */
export const RemoveMyAuthFactorOTPEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 83);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorU2FRequest.
 * Use `create(RemoveMyAuthFactorU2FRequestSchema)` to create a new message.
 */
export const RemoveMyAuthFactorU2FRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 84);

/**
 * Describes the message zitadel.auth.v1.RemoveMyAuthFactorU2FResponse.
 * Use `create(RemoveMyAuthFactorU2FResponseSchema)` to create a new message.
 */
export const RemoveMyAuthFactorU2FResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 85);

/**
 * Describes the message zitadel.auth.v1.ListMyPasswordlessRequest.
 * Use `create(ListMyPasswordlessRequestSchema)` to create a new message.
 */
export const ListMyPasswordlessRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 86);

/**
 * Describes the message zitadel.auth.v1.ListMyPasswordlessResponse.
 * Use `create(ListMyPasswordlessResponseSchema)` to create a new message.
 */
export const ListMyPasswordlessResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 87);

/**
 * Describes the message zitadel.auth.v1.AddMyPasswordlessRequest.
 * Use `create(AddMyPasswordlessRequestSchema)` to create a new message.
 */
export const AddMyPasswordlessRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 88);

/**
 * Describes the message zitadel.auth.v1.AddMyPasswordlessResponse.
 * Use `create(AddMyPasswordlessResponseSchema)` to create a new message.
 */
export const AddMyPasswordlessResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 89);

/**
 * Describes the message zitadel.auth.v1.AddMyPasswordlessLinkRequest.
 * Use `create(AddMyPasswordlessLinkRequestSchema)` to create a new message.
 */
export const AddMyPasswordlessLinkRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 90);

/**
 * Describes the message zitadel.auth.v1.AddMyPasswordlessLinkResponse.
 * Use `create(AddMyPasswordlessLinkResponseSchema)` to create a new message.
 */
export const AddMyPasswordlessLinkResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 91);

/**
 * Describes the message zitadel.auth.v1.SendMyPasswordlessLinkRequest.
 * Use `create(SendMyPasswordlessLinkRequestSchema)` to create a new message.
 */
export const SendMyPasswordlessLinkRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 92);

/**
 * Describes the message zitadel.auth.v1.SendMyPasswordlessLinkResponse.
 * Use `create(SendMyPasswordlessLinkResponseSchema)` to create a new message.
 */
export const SendMyPasswordlessLinkResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 93);

/**
 * Describes the message zitadel.auth.v1.VerifyMyPasswordlessRequest.
 * Use `create(VerifyMyPasswordlessRequestSchema)` to create a new message.
 */
export const VerifyMyPasswordlessRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 94);

/**
 * Describes the message zitadel.auth.v1.VerifyMyPasswordlessResponse.
 * Use `create(VerifyMyPasswordlessResponseSchema)` to create a new message.
 */
export const VerifyMyPasswordlessResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 95);

/**
 * Describes the message zitadel.auth.v1.RemoveMyPasswordlessRequest.
 * Use `create(RemoveMyPasswordlessRequestSchema)` to create a new message.
 */
export const RemoveMyPasswordlessRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 96);

/**
 * Describes the message zitadel.auth.v1.RemoveMyPasswordlessResponse.
 * Use `create(RemoveMyPasswordlessResponseSchema)` to create a new message.
 */
export const RemoveMyPasswordlessResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 97);

/**
 * Describes the message zitadel.auth.v1.ListMyUserGrantsRequest.
 * Use `create(ListMyUserGrantsRequestSchema)` to create a new message.
 */
export const ListMyUserGrantsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 98);

/**
 * Describes the message zitadel.auth.v1.ListMyUserGrantsResponse.
 * Use `create(ListMyUserGrantsResponseSchema)` to create a new message.
 */
export const ListMyUserGrantsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 99);

/**
 * Describes the message zitadel.auth.v1.UserGrant.
 * Use `create(UserGrantSchema)` to create a new message.
 */
export const UserGrantSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 100);

/**
 * Describes the message zitadel.auth.v1.ListMyProjectOrgsRequest.
 * Use `create(ListMyProjectOrgsRequestSchema)` to create a new message.
 */
export const ListMyProjectOrgsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 101);

/**
 * Describes the message zitadel.auth.v1.ListMyProjectOrgsResponse.
 * Use `create(ListMyProjectOrgsResponseSchema)` to create a new message.
 */
export const ListMyProjectOrgsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 102);

/**
 * Describes the message zitadel.auth.v1.ListMyZitadelPermissionsRequest.
 * Use `create(ListMyZitadelPermissionsRequestSchema)` to create a new message.
 */
export const ListMyZitadelPermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 103);

/**
 * Describes the message zitadel.auth.v1.ListMyZitadelPermissionsResponse.
 * Use `create(ListMyZitadelPermissionsResponseSchema)` to create a new message.
 */
export const ListMyZitadelPermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 104);

/**
 * Describes the message zitadel.auth.v1.ListMyProjectPermissionsRequest.
 * Use `create(ListMyProjectPermissionsRequestSchema)` to create a new message.
 */
export const ListMyProjectPermissionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 105);

/**
 * Describes the message zitadel.auth.v1.ListMyProjectPermissionsResponse.
 * Use `create(ListMyProjectPermissionsResponseSchema)` to create a new message.
 */
export const ListMyProjectPermissionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 106);

/**
 * Describes the message zitadel.auth.v1.ListMyMembershipsRequest.
 * Use `create(ListMyMembershipsRequestSchema)` to create a new message.
 */
export const ListMyMembershipsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 107);

/**
 * Describes the message zitadel.auth.v1.ListMyMembershipsResponse.
 * Use `create(ListMyMembershipsResponseSchema)` to create a new message.
 */
export const ListMyMembershipsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 108);

/**
 * Describes the message zitadel.auth.v1.GetMyLabelPolicyRequest.
 * Use `create(GetMyLabelPolicyRequestSchema)` to create a new message.
 */
export const GetMyLabelPolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 109);

/**
 * Describes the message zitadel.auth.v1.GetMyLabelPolicyResponse.
 * Use `create(GetMyLabelPolicyResponseSchema)` to create a new message.
 */
export const GetMyLabelPolicyResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 110);

/**
 * Describes the message zitadel.auth.v1.GetMyPrivacyPolicyRequest.
 * Use `create(GetMyPrivacyPolicyRequestSchema)` to create a new message.
 */
export const GetMyPrivacyPolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 111);

/**
 * Describes the message zitadel.auth.v1.GetMyPrivacyPolicyResponse.
 * Use `create(GetMyPrivacyPolicyResponseSchema)` to create a new message.
 */
export const GetMyPrivacyPolicyResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 112);

/**
 * Describes the message zitadel.auth.v1.GetMyLoginPolicyRequest.
 * Use `create(GetMyLoginPolicyRequestSchema)` to create a new message.
 */
export const GetMyLoginPolicyRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 113);

/**
 * Describes the message zitadel.auth.v1.GetMyLoginPolicyResponse.
 * Use `create(GetMyLoginPolicyResponseSchema)` to create a new message.
 */
export const GetMyLoginPolicyResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_auth, 114);

/**
 * @generated from service zitadel.auth.v1.AuthService
 */
export const AuthService = /*@__PURE__*/
  serviceDesc(file_zitadel_auth, 0);

