// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/event.proto (package zitadel.event.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { StructJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { LocalizedMessage, LocalizedMessageJson } from "./message_pb.js";

/**
 * Describes the file zitadel/event.proto.
 */
export declare const file_zitadel_event: GenFile;

/**
 * @generated from message zitadel.event.v1.Event
 */
export declare type Event = Message<"zitadel.event.v1.Event"> & {
  /**
   * @generated from field: zitadel.event.v1.Editor editor = 1;
   */
  editor?: Editor;

  /**
   * @generated from field: zitadel.event.v1.Aggregate aggregate = 2;
   */
  aggregate?: Aggregate;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 4;
   */
  creationDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Struct payload = 5;
   */
  payload?: JsonObject;

  /**
   * @generated from field: zitadel.event.v1.EventType type = 6;
   */
  type?: EventType;
};

/**
 * @generated from message zitadel.event.v1.Event
 */
export declare type EventJson = {
  /**
   * @generated from field: zitadel.event.v1.Editor editor = 1;
   */
  editor?: EditorJson;

  /**
   * @generated from field: zitadel.event.v1.Aggregate aggregate = 2;
   */
  aggregate?: AggregateJson;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence?: string;

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 4;
   */
  creationDate?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Struct payload = 5;
   */
  payload?: StructJson;

  /**
   * @generated from field: zitadel.event.v1.EventType type = 6;
   */
  type?: EventTypeJson;
};

/**
 * Describes the message zitadel.event.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 */
export declare const EventSchema: GenMessage<Event, {jsonType: EventJson}>;

/**
 * @generated from message zitadel.event.v1.Editor
 */
export declare type Editor = Message<"zitadel.event.v1.Editor"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: string service = 3;
   */
  service: string;
};

/**
 * @generated from message zitadel.event.v1.Editor
 */
export declare type EditorJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName?: string;

  /**
   * @generated from field: string service = 3;
   */
  service?: string;
};

/**
 * Describes the message zitadel.event.v1.Editor.
 * Use `create(EditorSchema)` to create a new message.
 */
export declare const EditorSchema: GenMessage<Editor, {jsonType: EditorJson}>;

/**
 * @generated from message zitadel.event.v1.Aggregate
 */
export declare type Aggregate = Message<"zitadel.event.v1.Aggregate"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.event.v1.AggregateType type = 2;
   */
  type?: AggregateType;

  /**
   * @generated from field: string resource_owner = 3;
   */
  resourceOwner: string;
};

/**
 * @generated from message zitadel.event.v1.Aggregate
 */
export declare type AggregateJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.event.v1.AggregateType type = 2;
   */
  type?: AggregateTypeJson;

  /**
   * @generated from field: string resource_owner = 3;
   */
  resourceOwner?: string;
};

/**
 * Describes the message zitadel.event.v1.Aggregate.
 * Use `create(AggregateSchema)` to create a new message.
 */
export declare const AggregateSchema: GenMessage<Aggregate, {jsonType: AggregateJson}>;

/**
 * @generated from message zitadel.event.v1.EventType
 */
export declare type EventType = Message<"zitadel.event.v1.EventType"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: zitadel.v1.LocalizedMessage localized = 2;
   */
  localized?: LocalizedMessage;
};

/**
 * @generated from message zitadel.event.v1.EventType
 */
export declare type EventTypeJson = {
  /**
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * @generated from field: zitadel.v1.LocalizedMessage localized = 2;
   */
  localized?: LocalizedMessageJson;
};

/**
 * Describes the message zitadel.event.v1.EventType.
 * Use `create(EventTypeSchema)` to create a new message.
 */
export declare const EventTypeSchema: GenMessage<EventType, {jsonType: EventTypeJson}>;

/**
 * @generated from message zitadel.event.v1.AggregateType
 */
export declare type AggregateType = Message<"zitadel.event.v1.AggregateType"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;

  /**
   * @generated from field: zitadel.v1.LocalizedMessage localized = 2;
   */
  localized?: LocalizedMessage;
};

/**
 * @generated from message zitadel.event.v1.AggregateType
 */
export declare type AggregateTypeJson = {
  /**
   * @generated from field: string type = 1;
   */
  type?: string;

  /**
   * @generated from field: zitadel.v1.LocalizedMessage localized = 2;
   */
  localized?: LocalizedMessageJson;
};

/**
 * Describes the message zitadel.event.v1.AggregateType.
 * Use `create(AggregateTypeSchema)` to create a new message.
 */
export declare const AggregateTypeSchema: GenMessage<AggregateType, {jsonType: AggregateTypeJson}>;

