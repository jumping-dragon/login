// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/feature/v2/feature.proto (package zitadel.feature.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/feature/v2/feature.proto.
 */
export declare const file_zitadel_feature_v2_feature: GenFile;

/**
 * FeatureFlag is a simple boolean Feature setting, without further payload.
 *
 * @generated from message zitadel.feature.v2.FeatureFlag
 */
export declare type FeatureFlag = Message<"zitadel.feature.v2.FeatureFlag"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: zitadel.feature.v2.Source source = 2;
   */
  source: Source;
};

/**
 * FeatureFlag is a simple boolean Feature setting, without further payload.
 *
 * @generated from message zitadel.feature.v2.FeatureFlag
 */
export declare type FeatureFlagJson = {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled?: boolean;

  /**
   * @generated from field: zitadel.feature.v2.Source source = 2;
   */
  source?: SourceJson;
};

/**
 * Describes the message zitadel.feature.v2.FeatureFlag.
 * Use `create(FeatureFlagSchema)` to create a new message.
 */
export declare const FeatureFlagSchema: GenMessage<FeatureFlag, {jsonType: FeatureFlagJson}>;

/**
 * @generated from message zitadel.feature.v2.ImprovedPerformanceFeatureFlag
 */
export declare type ImprovedPerformanceFeatureFlag = Message<"zitadel.feature.v2.ImprovedPerformanceFeatureFlag"> & {
  /**
   * @generated from field: repeated zitadel.feature.v2.ImprovedPerformance execution_paths = 1;
   */
  executionPaths: ImprovedPerformance[];

  /**
   * @generated from field: zitadel.feature.v2.Source source = 2;
   */
  source: Source;
};

/**
 * @generated from message zitadel.feature.v2.ImprovedPerformanceFeatureFlag
 */
export declare type ImprovedPerformanceFeatureFlagJson = {
  /**
   * @generated from field: repeated zitadel.feature.v2.ImprovedPerformance execution_paths = 1;
   */
  executionPaths?: ImprovedPerformanceJson[];

  /**
   * @generated from field: zitadel.feature.v2.Source source = 2;
   */
  source?: SourceJson;
};

/**
 * Describes the message zitadel.feature.v2.ImprovedPerformanceFeatureFlag.
 * Use `create(ImprovedPerformanceFeatureFlagSchema)` to create a new message.
 */
export declare const ImprovedPerformanceFeatureFlagSchema: GenMessage<ImprovedPerformanceFeatureFlag, {jsonType: ImprovedPerformanceFeatureFlagJson}>;

/**
 * @generated from message zitadel.feature.v2.LoginV2FeatureFlag
 */
export declare type LoginV2FeatureFlag = Message<"zitadel.feature.v2.LoginV2FeatureFlag"> & {
  /**
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * @generated from field: optional string base_uri = 2;
   */
  baseUri?: string;

  /**
   * @generated from field: zitadel.feature.v2.Source source = 3;
   */
  source: Source;
};

/**
 * @generated from message zitadel.feature.v2.LoginV2FeatureFlag
 */
export declare type LoginV2FeatureFlagJson = {
  /**
   * @generated from field: bool required = 1;
   */
  required?: boolean;

  /**
   * @generated from field: optional string base_uri = 2;
   */
  baseUri?: string;

  /**
   * @generated from field: zitadel.feature.v2.Source source = 3;
   */
  source?: SourceJson;
};

/**
 * Describes the message zitadel.feature.v2.LoginV2FeatureFlag.
 * Use `create(LoginV2FeatureFlagSchema)` to create a new message.
 */
export declare const LoginV2FeatureFlagSchema: GenMessage<LoginV2FeatureFlag, {jsonType: LoginV2FeatureFlagJson}>;

/**
 * @generated from message zitadel.feature.v2.LoginV2
 */
export declare type LoginV2 = Message<"zitadel.feature.v2.LoginV2"> & {
  /**
   * Require that all users must use the new login UI. If enabled, all users will be redirected to the login V2 regardless of the application's preference.
   *
   * @generated from field: bool required = 1;
   */
  required: boolean;

  /**
   * Optionally specify a base uri of the login UI. If unspecified the default URI will be used.
   *
   * @generated from field: optional string base_uri = 2;
   */
  baseUri?: string;
};

/**
 * @generated from message zitadel.feature.v2.LoginV2
 */
export declare type LoginV2Json = {
  /**
   * Require that all users must use the new login UI. If enabled, all users will be redirected to the login V2 regardless of the application's preference.
   *
   * @generated from field: bool required = 1;
   */
  required?: boolean;

  /**
   * Optionally specify a base uri of the login UI. If unspecified the default URI will be used.
   *
   * @generated from field: optional string base_uri = 2;
   */
  baseUri?: string;
};

/**
 * Describes the message zitadel.feature.v2.LoginV2.
 * Use `create(LoginV2Schema)` to create a new message.
 */
export declare const LoginV2Schema: GenMessage<LoginV2, {jsonType: LoginV2Json}>;

/**
 * @generated from enum zitadel.feature.v2.Source
 */
export enum Source {
  /**
   * @generated from enum value: SOURCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SOURCE_SYSTEM = 2;
   */
  SYSTEM = 2,

  /**
   * @generated from enum value: SOURCE_INSTANCE = 3;
   */
  INSTANCE = 3,

  /**
   * @generated from enum value: SOURCE_ORGANIZATION = 4;
   */
  ORGANIZATION = 4,

  /**
   * reserved for future use
   *
   * @generated from enum value: SOURCE_PROJECT = 5;
   */
  PROJECT = 5,

  /**
   * reserved for future use
   *
   * @generated from enum value: SOURCE_APP = 6;
   */
  APP = 6,

  /**
   * @generated from enum value: SOURCE_USER = 7;
   */
  USER = 7,
}

/**
 * @generated from enum zitadel.feature.v2.Source
 */
export declare type SourceJson = "SOURCE_UNSPECIFIED" | "SOURCE_SYSTEM" | "SOURCE_INSTANCE" | "SOURCE_ORGANIZATION" | "SOURCE_PROJECT" | "SOURCE_APP" | "SOURCE_USER";

/**
 * Describes the enum zitadel.feature.v2.Source.
 */
export declare const SourceSchema: GenEnum<Source, SourceJson>;

/**
 * @generated from enum zitadel.feature.v2.ImprovedPerformance
 */
export enum ImprovedPerformance {
  /**
   * @generated from enum value: IMPROVED_PERFORMANCE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Uses the eventstore to query the org by id
   * instead of the sql table.
   *
   * @generated from enum value: IMPROVED_PERFORMANCE_ORG_BY_ID = 1;
   */
  ORG_BY_ID = 1,

  /**
   * Improves performance on write side by using
   * optimized processes to query data to determine
   * correctnes of data.
   *
   * @generated from enum value: IMPROVED_PERFORMANCE_PROJECT_GRANT = 2;
   */
  PROJECT_GRANT = 2,

  /**
   * @generated from enum value: IMPROVED_PERFORMANCE_PROJECT = 3;
   */
  PROJECT = 3,

  /**
   * @generated from enum value: IMPROVED_PERFORMANCE_USER_GRANT = 4;
   */
  USER_GRANT = 4,

  /**
   * Improve performance on write side when
   * users are checked against verified domains
   * from other organizations.
   *
   * @generated from enum value: IMPROVED_PERFORMANCE_ORG_DOMAIN_VERIFIED = 5;
   */
  ORG_DOMAIN_VERIFIED = 5,
}

/**
 * @generated from enum zitadel.feature.v2.ImprovedPerformance
 */
export declare type ImprovedPerformanceJson = "IMPROVED_PERFORMANCE_UNSPECIFIED" | "IMPROVED_PERFORMANCE_ORG_BY_ID" | "IMPROVED_PERFORMANCE_PROJECT_GRANT" | "IMPROVED_PERFORMANCE_PROJECT" | "IMPROVED_PERFORMANCE_USER_GRANT" | "IMPROVED_PERFORMANCE_ORG_DOMAIN_VERIFIED";

/**
 * Describes the enum zitadel.feature.v2.ImprovedPerformance.
 */
export declare const ImprovedPerformanceSchema: GenEnum<ImprovedPerformance, ImprovedPerformanceJson>;

