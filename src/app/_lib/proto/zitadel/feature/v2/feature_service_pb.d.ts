// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/feature/v2/feature_service.proto (package zitadel.feature.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv2";
import type { GetSystemFeaturesRequestSchema, GetSystemFeaturesResponseSchema, ResetSystemFeaturesRequestSchema, ResetSystemFeaturesResponseSchema, SetSystemFeaturesRequestSchema, SetSystemFeaturesResponseSchema } from "./system_pb.js";
import type { GetInstanceFeaturesRequestSchema, GetInstanceFeaturesResponseSchema, ResetInstanceFeaturesRequestSchema, ResetInstanceFeaturesResponseSchema, SetInstanceFeaturesRequestSchema, SetInstanceFeaturesResponseSchema } from "./instance_pb.js";
import type { GetOrganizationFeaturesRequestSchema, GetOrganizationFeaturesResponseSchema, ResetOrganizationFeaturesRequestSchema, ResetOrganizationFeaturesResponseSchema, SetOrganizationFeaturesRequestSchema, SetOrganizationFeaturesResponseSchema } from "./organization_pb.js";
import type { GetUserFeaturesRequestSchema, GetUserFeaturesResponseSchema, ResetUserFeaturesRequestSchema, ResetUserFeaturesResponseSchema, SetUserFeatureRequestSchema, SetUserFeaturesResponseSchema } from "./user_pb.js";

/**
 * Describes the file zitadel/feature/v2/feature_service.proto.
 */
export declare const file_zitadel_feature_v2_feature_service: GenFile;

/**
 * FeatureService is intended to manage features for ZITADEL.
 *
 * Feature settings that are available on multiple "levels", such as instance and organization.
 * The higher level (instance) acts as a default for the lower level (organization).
 * When a feature is set on multiple levels, the lower level takes precedence.
 *
 * Features can be experimental where ZITADEL will assume a sane default, such as disabled.
 * When over time confidence in such a feature grows, ZITADEL can default to enabling the feature.
 * As a final step we might choose to always enable a feature and remove the setting from this API,
 * reserving the proto field number. Such removal is not considered a breaking change.
 * Setting a removed field will effectively result in a no-op.
 *
 * @generated from service zitadel.feature.v2.FeatureService
 */
export declare const FeatureService: GenService<{
  /**
   * Set System Features
   *
   * Configure and set features that apply to the complete system. Only fields present in the request are set or unset.
   *
   * Required permissions:
   *  - system.feature.write
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.SetSystemFeatures
   */
  setSystemFeatures: {
    methodKind: "unary";
    input: typeof SetSystemFeaturesRequestSchema;
    output: typeof SetSystemFeaturesResponseSchema;
  },
  /**
   * Reset System Features
   *
   * Deletes ALL configured features for the system, reverting the behaviors to system defaults.
   *
   * Required permissions:
   *  - system.feature.delete
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetSystemFeatures
   */
  resetSystemFeatures: {
    methodKind: "unary";
    input: typeof ResetSystemFeaturesRequestSchema;
    output: typeof ResetSystemFeaturesResponseSchema;
  },
  /**
   * Get System Features
   *
   * Returns all configured features for the system. Unset fields mean the feature is the current system default.
   *
   * Required permissions:
   *  - none
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.GetSystemFeatures
   */
  getSystemFeatures: {
    methodKind: "unary";
    input: typeof GetSystemFeaturesRequestSchema;
    output: typeof GetSystemFeaturesResponseSchema;
  },
  /**
   * Set Instance Features
   *
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   *
   * Required permissions:
   *  - iam.feature.write
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.SetInstanceFeatures
   */
  setInstanceFeatures: {
    methodKind: "unary";
    input: typeof SetInstanceFeaturesRequestSchema;
    output: typeof SetInstanceFeaturesResponseSchema;
  },
  /**
   * Reset Instance Features
   *
   * Deletes ALL configured features for an instance, reverting the behaviors to system defaults.
   *
   * Required permissions:
   *  - iam.feature.delete
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetInstanceFeatures
   */
  resetInstanceFeatures: {
    methodKind: "unary";
    input: typeof ResetInstanceFeaturesRequestSchema;
    output: typeof ResetInstanceFeaturesResponseSchema;
  },
  /**
   * Get Instance Features
   *
   * Returns all configured features for an instance. Unset fields mean the feature is the current system default.
   *
   * Required permissions:
   *  - none
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.GetInstanceFeatures
   */
  getInstanceFeatures: {
    methodKind: "unary";
    input: typeof GetInstanceFeaturesRequestSchema;
    output: typeof GetInstanceFeaturesResponseSchema;
  },
  /**
   * Set Organization Features
   *
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   *
   * Required permissions:
   *  - org.feature.write
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.SetOrganizationFeatures
   */
  setOrganizationFeatures: {
    methodKind: "unary";
    input: typeof SetOrganizationFeaturesRequestSchema;
    output: typeof SetOrganizationFeaturesResponseSchema;
  },
  /**
   * Reset Organization Features
   *
   * Deletes ALL configured features for an organization, reverting the behaviors to instance defaults.
   *
   * Required permissions:
   *  - org.feature.delete
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetOrganizationFeatures
   */
  resetOrganizationFeatures: {
    methodKind: "unary";
    input: typeof ResetOrganizationFeaturesRequestSchema;
    output: typeof ResetOrganizationFeaturesResponseSchema;
  },
  /**
   * Get Organization Features
   *
   * Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
   *
   * Required permissions:
   *  - org.feature.read
   *  - no permission required for the organization the user belongs to
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.GetOrganizationFeatures
   */
  getOrganizationFeatures: {
    methodKind: "unary";
    input: typeof GetOrganizationFeaturesRequestSchema;
    output: typeof GetOrganizationFeaturesResponseSchema;
  },
  /**
   * Set User Features
   *
   * Configure and set features that apply to an user. Only fields present in the request are set or unset.
   *
   * Required permissions:
   *  - user.feature.write
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.SetUserFeatures
   */
  setUserFeatures: {
    methodKind: "unary";
    input: typeof SetUserFeatureRequestSchema;
    output: typeof SetUserFeaturesResponseSchema;
  },
  /**
   * Reset User Features
   *
   * Deletes ALL configured features for a user, reverting the behaviors to organization defaults.
   *
   * Required permissions:
   *  - user.feature.delete
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.ResetUserFeatures
   */
  resetUserFeatures: {
    methodKind: "unary";
    input: typeof ResetUserFeaturesRequestSchema;
    output: typeof ResetUserFeaturesResponseSchema;
  },
  /**
   * Get User Features
   *
   * Returns all configured features for a user. Unset fields mean the feature is the current organization default.
   *
   * Required permissions:
   *  - user.feature.read
   *  - no permission required for the own user
   *
   * @generated from rpc zitadel.feature.v2.FeatureService.GetUserFeatures
   */
  getUserFeatures: {
    methodKind: "unary";
    input: typeof GetUserFeaturesRequestSchema;
    output: typeof GetUserFeaturesResponseSchema;
  },
}>;

