// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/feature/v2/feature_service.proto (package zitadel.feature.v2, syntax proto3)
/* eslint-disable */

import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.js";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_zitadel_feature_v2_system } from "./system_pb.js";
import { file_zitadel_feature_v2_instance } from "./instance_pb.js";
import { file_zitadel_feature_v2_organization } from "./organization_pb.js";
import { file_zitadel_feature_v2_user } from "./user_pb.js";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb.js";

/**
 * Describes the file zitadel/feature/v2/feature_service.proto.
 */
export const file_zitadel_feature_v2_feature_service = /*@__PURE__*/
  fileDesc("Cih6aXRhZGVsL2ZlYXR1cmUvdjIvZmVhdHVyZV9zZXJ2aWNlLnByb3RvEhJ6aXRhZGVsLmZlYXR1cmUudjIy9xIKDkZlYXR1cmVTZXJ2aWNlErwBChFTZXRTeXN0ZW1GZWF0dXJlcxIsLnppdGFkZWwuZmVhdHVyZS52Mi5TZXRTeXN0ZW1GZWF0dXJlc1JlcXVlc3QaLS56aXRhZGVsLmZlYXR1cmUudjIuU2V0U3lzdGVtRmVhdHVyZXNSZXNwb25zZSJKkkENSgsKAzIwMBIECgJPS4q1GBgKFgoUc3lzdGVtLmZlYXR1cmUud3JpdGWC0+STAhg6ASoaEy92Mi9mZWF0dXJlcy9zeXN0ZW0SwAEKE1Jlc2V0U3lzdGVtRmVhdHVyZXMSLi56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRTeXN0ZW1GZWF0dXJlc1JlcXVlc3QaLy56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRTeXN0ZW1GZWF0dXJlc1Jlc3BvbnNlIkiSQQ1KCwoDMjAwEgQKAk9LirUYGQoXChVzeXN0ZW0uZmVhdHVyZS5kZWxldGWC0+STAhUqEy92Mi9mZWF0dXJlcy9zeXN0ZW0SsgEKEUdldFN5c3RlbUZlYXR1cmVzEiwueml0YWRlbC5mZWF0dXJlLnYyLkdldFN5c3RlbUZlYXR1cmVzUmVxdWVzdBotLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRTeXN0ZW1GZWF0dXJlc1Jlc3BvbnNlIkCSQQ1KCwoDMjAwEgQKAk9LirUYEQoPCg1hdXRoZW50aWNhdGVkgtPkkwIVEhMvdjIvZmVhdHVyZXMvc3lzdGVtEsEBChNTZXRJbnN0YW5jZUZlYXR1cmVzEi4ueml0YWRlbC5mZWF0dXJlLnYyLlNldEluc3RhbmNlRmVhdHVyZXNSZXF1ZXN0Gi8ueml0YWRlbC5mZWF0dXJlLnYyLlNldEluc3RhbmNlRmVhdHVyZXNSZXNwb25zZSJJkkENSgsKAzIwMBIECgJPS4q1GBUKEwoRaWFtLmZlYXR1cmUud3JpdGWC0+STAho6ASoaFS92Mi9mZWF0dXJlcy9pbnN0YW5jZRLFAQoVUmVzZXRJbnN0YW5jZUZlYXR1cmVzEjAueml0YWRlbC5mZWF0dXJlLnYyLlJlc2V0SW5zdGFuY2VGZWF0dXJlc1JlcXVlc3QaMS56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRJbnN0YW5jZUZlYXR1cmVzUmVzcG9uc2UiR5JBDUoLCgMyMDASBAoCT0uKtRgWChQKEmlhbS5mZWF0dXJlLmRlbGV0ZYLT5JMCFyoVL3YyL2ZlYXR1cmVzL2luc3RhbmNlEroBChNHZXRJbnN0YW5jZUZlYXR1cmVzEi4ueml0YWRlbC5mZWF0dXJlLnYyLkdldEluc3RhbmNlRmVhdHVyZXNSZXF1ZXN0Gi8ueml0YWRlbC5mZWF0dXJlLnYyLkdldEluc3RhbmNlRmVhdHVyZXNSZXNwb25zZSJCkkENSgsKAzIwMBIECgJPS4q1GBEKDwoNYXV0aGVudGljYXRlZILT5JMCFxIVL3YyL2ZlYXR1cmVzL2luc3RhbmNlEuMBChdTZXRPcmdhbml6YXRpb25GZWF0dXJlcxIyLnppdGFkZWwuZmVhdHVyZS52Mi5TZXRPcmdhbml6YXRpb25GZWF0dXJlc1JlcXVlc3QaMy56aXRhZGVsLmZlYXR1cmUudjIuU2V0T3JnYW5pemF0aW9uRmVhdHVyZXNSZXNwb25zZSJfkkENSgsKAzIwMBIECgJPS4q1GBUKEwoRb3JnLmZlYXR1cmUud3JpdGWC0+STAjA6ASoaKy92Mi9mZWF0dXJlcy9vcmdhbml6YXRpb24ve29yZ2FuaXphdGlvbl9pZH0S5wEKGVJlc2V0T3JnYW5pemF0aW9uRmVhdHVyZXMSNC56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRPcmdhbml6YXRpb25GZWF0dXJlc1JlcXVlc3QaNS56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRPcmdhbml6YXRpb25GZWF0dXJlc1Jlc3BvbnNlIl2SQQ1KCwoDMjAwEgQKAk9LirUYFgoUChJvcmcuZmVhdHVyZS5kZWxldGWC0+STAi0qKy92Mi9mZWF0dXJlcy9vcmdhbml6YXRpb24ve29yZ2FuaXphdGlvbl9pZH0S3AEKF0dldE9yZ2FuaXphdGlvbkZlYXR1cmVzEjIueml0YWRlbC5mZWF0dXJlLnYyLkdldE9yZ2FuaXphdGlvbkZlYXR1cmVzUmVxdWVzdBozLnppdGFkZWwuZmVhdHVyZS52Mi5HZXRPcmdhbml6YXRpb25GZWF0dXJlc1Jlc3BvbnNlIliSQQ1KCwoDMjAwEgQKAk9LirUYEQoPCg1hdXRoZW50aWNhdGVkgtPkkwItEisvdjIvZmVhdHVyZXMvb3JnYW5pemF0aW9uL3tvcmdhbml6YXRpb25faWR9ErsBCg9TZXRVc2VyRmVhdHVyZXMSKS56aXRhZGVsLmZlYXR1cmUudjIuU2V0VXNlckZlYXR1cmVSZXF1ZXN0Gisueml0YWRlbC5mZWF0dXJlLnYyLlNldFVzZXJGZWF0dXJlc1Jlc3BvbnNlIlCSQQ1KCwoDMjAwEgQKAk9LirUYFgoUChJ1c2VyLmZlYXR1cmUud3JpdGWC0+STAiA6ASoaGy92Mi9mZWF0dXJlcy91c2VyL3t1c2VyX2lkfRLAAQoRUmVzZXRVc2VyRmVhdHVyZXMSLC56aXRhZGVsLmZlYXR1cmUudjIuUmVzZXRVc2VyRmVhdHVyZXNSZXF1ZXN0Gi0ueml0YWRlbC5mZWF0dXJlLnYyLlJlc2V0VXNlckZlYXR1cmVzUmVzcG9uc2UiTpJBDUoLCgMyMDASBAoCT0uKtRgXChUKE3VzZXIuZmVhdHVyZS5kZWxldGWC0+STAh0qGy92Mi9mZWF0dXJlcy91c2VyL3t1c2VyX2lkfRK0AQoPR2V0VXNlckZlYXR1cmVzEioueml0YWRlbC5mZWF0dXJlLnYyLkdldFVzZXJGZWF0dXJlc1JlcXVlc3QaKy56aXRhZGVsLmZlYXR1cmUudjIuR2V0VXNlckZlYXR1cmVzUmVzcG9uc2UiSJJBDUoLCgMyMDASBAoCT0uKtRgRCg8KDWF1dGhlbnRpY2F0ZWSC0+STAh0SGy92Mi9mZWF0dXJlcy91c2VyL3t1c2VyX2lkfUKLDgoWY29tLnppdGFkZWwuZmVhdHVyZS52MkITRmVhdHVyZVNlcnZpY2VQcm90b1ABWjZnaXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9wa2cvZ3JwYy9mZWF0dXJlL3YyO2ZlYXR1cmWiAgNaRliqAhJaaXRhZGVsLkZlYXR1cmUuVjLKAhJaaXRhZGVsXEZlYXR1cmVcVjLiAh5aaXRhZGVsXEZlYXR1cmVcVjJcR1BCTWV0YWRhdGHqAhRaaXRhZGVsOjpGZWF0dXJlOjpWMpJBuAwS2gYKD0ZlYXR1cmUgU2VydmljZRLIBVRoaXMgQVBJIGlzIGludGVuZGVkIHRvIG1hbmFnZSBmZWF0dXJlcyBmb3IgWklUQURFTC4gRmVhdHVyZSBzZXR0aW5ncyB0aGF0IGFyZSBhdmFpbGFibGUgb24gbXVsdGlwbGUgImxldmVscyIsIHN1Y2ggYXMgaW5zdGFuY2UgYW5kIG9yZ2FuaXphdGlvbi4gVGhlIGhpZ2hlciBsZXZlbCBpbnN0YW5jZSBhY3RzIGFzIGEgZGVmYXVsdCBmb3IgdGhlIGxvd2VyIGxldmVsLiBXaGVuIGEgZmVhdHVyZSBpcyBzZXQgb24gbXVsdGlwbGUgbGV2ZWxzLCB0aGUgbG93ZXIgbGV2ZWwgdGFrZXMgcHJlY2VkZW5jZS4gRmVhdHVyZXMgY2FuIGJlIGV4cGVyaW1lbnRhbCB3aGVyZSBaSVRBREVMIHdpbGwgYXNzdW1lIGEgc2FuZSBkZWZhdWx0LCBzdWNoIGFzIGRpc2FibGVkLiBXaGVuIG92ZXIgdGltZSBjb25maWRlbmNlIGluIHN1Y2ggYSBmZWF0dXJlIGdyb3dzLCBaSVRBREVMIGNhbiBkZWZhdWx0IHRvIGVuYWJsaW5nIHRoZSBmZWF0dXJlLiBBcyBhIGZpbmFsIHN0ZXAgd2UgbWlnaHQgY2hvb3NlIHRvIGFsd2F5cyBlbmFibGUgYSBmZWF0dXJlIGFuZCByZW1vdmUgdGhlIHNldHRpbmcgZnJvbSB0aGlzIEFQSSwgcmVzZXJ2aW5nIHRoZSBwcm90byBmaWVsZCBudW1iZXIuIFN1Y2ggcmVtb3ZhbCBpcyBub3QgY29uc2lkZXJlZCBhIGJyZWFraW5nIGNoYW5nZS4gU2V0dGluZyBhIHJlbW92ZWQgZmllbGQgd2lsbCBlZmZlY3RpdmVseSByZXN1bHQgaW4gYSBuby1vcC4iLgoHWklUQURFTBITaHR0cHM6Ly96aXRhZGVsLmNvbRoOaGlAeml0YWRlbC5jb20qRwoKQXBhY2hlIDIuMBI5aHR0cHM6Ly9naXRodWIuY29tL3ppdGFkZWwveml0YWRlbC9ibG9iL21haW4vTElDRU5TSU5HLm1kMgMyLjAaDiRDVVNUT00tRE9NQUlOIgEvKgICATIQYXBwbGljYXRpb24vanNvbjIQYXBwbGljYXRpb24vZ3JwYzIaYXBwbGljYXRpb24vZ3JwYy13ZWIrcHJvdG86EGFwcGxpY2F0aW9uL2pzb246EGFwcGxpY2F0aW9uL2dycGM6GmFwcGxpY2F0aW9uL2dycGMtd2ViK3Byb3RvUm0KAzQwMxJmCkdSZXR1cm5lZCB3aGVuIHRoZSB1c2VyIGRvZXMgbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgdGhlIHJlc291cmNlLhIbChkaFyMvZGVmaW5pdGlvbnMvcnBjU3RhdHVzUosBCgM0MDQSgwEKZFJldHVybmVkIHdoZW4gdGhlIHJlc291cmNlIGhhcyBubyBmZWF0dXJlIGZsYWcgc2V0dGluZ3MgYW5kIGluaGVyaXRhbmNlIGZyb20gdGhlIHBhcmVudCBpcyBkaXNhYmxlZC4SGwoZGhcjL2RlZmluaXRpb25zL3JwY1N0YXR1c1rCAQq/AQoGT0F1dGgyErQBCAMoBDIhJENVU1RPTS1ET01BSU4vb2F1dGgvdjIvYXV0aG9yaXplOh0kQ1VTVE9NLURPTUFJTi9vYXV0aC92Mi90b2tlbkJsChAKBm9wZW5pZBIGb3BlbmlkClgKKnVybjp6aXRhZGVsOmlhbTpvcmc6cHJvamVjdDppZDp6aXRhZGVsOmF1ZBIqdXJuOnppdGFkZWw6aWFtOm9yZzpwcm9qZWN0OmlkOnppdGFkZWw6YXVkYkAKPgoGT0F1dGgyEjQKBm9wZW5pZAoqdXJuOnppdGFkZWw6aWFtOm9yZzpwcm9qZWN0OmlkOnppdGFkZWw6YXVkcj4KIkRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IFpJVEFERUwSGGh0dHBzOi8veml0YWRlbC5jb20vZG9jc2IGcHJvdG8z", [file_google_api_annotations, file_protoc_gen_openapiv2_options_annotations, file_zitadel_feature_v2_system, file_zitadel_feature_v2_instance, file_zitadel_feature_v2_organization, file_zitadel_feature_v2_user, file_zitadel_protoc_gen_zitadel_v2_options]);

/**
 * FeatureService is intended to manage features for ZITADEL.
 *
 * Feature settings that are available on multiple "levels", such as instance and organization.
 * The higher level (instance) acts as a default for the lower level (organization).
 * When a feature is set on multiple levels, the lower level takes precedence.
 *
 * Features can be experimental where ZITADEL will assume a sane default, such as disabled.
 * When over time confidence in such a feature grows, ZITADEL can default to enabling the feature.
 * As a final step we might choose to always enable a feature and remove the setting from this API,
 * reserving the proto field number. Such removal is not considered a breaking change.
 * Setting a removed field will effectively result in a no-op.
 *
 * @generated from service zitadel.feature.v2.FeatureService
 */
export const FeatureService = /*@__PURE__*/
  serviceDesc(file_zitadel_feature_v2_feature_service, 0);

