// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/idp.proto (package zitadel.idp.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_zitadel_object } from "./object_pb.js";
import { file_validate_validate } from "../validate/validate_pb.js";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/idp.proto.
 */
export const file_zitadel_idp = /*@__PURE__*/
  fileDesc("", [file_zitadel_object, file_validate_validate, file_protoc_gen_openapiv2_options_annotations, file_google_protobuf_duration]);

/**
 * Describes the message zitadel.idp.v1.IDP.
 * Use `create(IDPSchema)` to create a new message.
 */
export const IDPSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 0);

/**
 * Describes the message zitadel.idp.v1.IDPUserLink.
 * Use `create(IDPUserLinkSchema)` to create a new message.
 */
export const IDPUserLinkSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 1);

/**
 * Describes the message zitadel.idp.v1.IDPLoginPolicyLink.
 * Use `create(IDPLoginPolicyLinkSchema)` to create a new message.
 */
export const IDPLoginPolicyLinkSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 2);

/**
 * Describes the message zitadel.idp.v1.OIDCConfig.
 * Use `create(OIDCConfigSchema)` to create a new message.
 */
export const OIDCConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 3);

/**
 * Describes the message zitadel.idp.v1.JWTConfig.
 * Use `create(JWTConfigSchema)` to create a new message.
 */
export const JWTConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 4);

/**
 * Describes the message zitadel.idp.v1.IDPIDQuery.
 * Use `create(IDPIDQuerySchema)` to create a new message.
 */
export const IDPIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 5);

/**
 * Describes the message zitadel.idp.v1.IDPNameQuery.
 * Use `create(IDPNameQuerySchema)` to create a new message.
 */
export const IDPNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 6);

/**
 * Describes the message zitadel.idp.v1.IDPOwnerTypeQuery.
 * Use `create(IDPOwnerTypeQuerySchema)` to create a new message.
 */
export const IDPOwnerTypeQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 7);

/**
 * Describes the message zitadel.idp.v1.Provider.
 * Use `create(ProviderSchema)` to create a new message.
 */
export const ProviderSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 8);

/**
 * Describes the message zitadel.idp.v1.ProviderConfig.
 * Use `create(ProviderConfigSchema)` to create a new message.
 */
export const ProviderConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 9);

/**
 * Describes the message zitadel.idp.v1.OAuthConfig.
 * Use `create(OAuthConfigSchema)` to create a new message.
 */
export const OAuthConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 10);

/**
 * Describes the message zitadel.idp.v1.GenericOIDCConfig.
 * Use `create(GenericOIDCConfigSchema)` to create a new message.
 */
export const GenericOIDCConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 11);

/**
 * Describes the message zitadel.idp.v1.GitHubConfig.
 * Use `create(GitHubConfigSchema)` to create a new message.
 */
export const GitHubConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 12);

/**
 * Describes the message zitadel.idp.v1.GitHubEnterpriseServerConfig.
 * Use `create(GitHubEnterpriseServerConfigSchema)` to create a new message.
 */
export const GitHubEnterpriseServerConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 13);

/**
 * Describes the message zitadel.idp.v1.GoogleConfig.
 * Use `create(GoogleConfigSchema)` to create a new message.
 */
export const GoogleConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 14);

/**
 * Describes the message zitadel.idp.v1.GitLabConfig.
 * Use `create(GitLabConfigSchema)` to create a new message.
 */
export const GitLabConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 15);

/**
 * Describes the message zitadel.idp.v1.GitLabSelfHostedConfig.
 * Use `create(GitLabSelfHostedConfigSchema)` to create a new message.
 */
export const GitLabSelfHostedConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 16);

/**
 * Describes the message zitadel.idp.v1.LDAPConfig.
 * Use `create(LDAPConfigSchema)` to create a new message.
 */
export const LDAPConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 17);

/**
 * Describes the message zitadel.idp.v1.SAMLConfig.
 * Use `create(SAMLConfigSchema)` to create a new message.
 */
export const SAMLConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 18);

/**
 * Describes the message zitadel.idp.v1.AzureADConfig.
 * Use `create(AzureADConfigSchema)` to create a new message.
 */
export const AzureADConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 19);

/**
 * Describes the message zitadel.idp.v1.Options.
 * Use `create(OptionsSchema)` to create a new message.
 */
export const OptionsSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 20);

/**
 * Describes the message zitadel.idp.v1.LDAPAttributes.
 * Use `create(LDAPAttributesSchema)` to create a new message.
 */
export const LDAPAttributesSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 21);

/**
 * Describes the message zitadel.idp.v1.AzureADTenant.
 * Use `create(AzureADTenantSchema)` to create a new message.
 */
export const AzureADTenantSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 22);

/**
 * Describes the message zitadel.idp.v1.AppleConfig.
 * Use `create(AppleConfigSchema)` to create a new message.
 */
export const AppleConfigSchema = /*@__PURE__*/
  messageDesc(file_zitadel_idp, 23);

/**
 * Describes the enum zitadel.idp.v1.IDPState.
 */
export const IDPStateSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 0);

/**
 * @generated from enum zitadel.idp.v1.IDPState
 */
export const IDPState = /*@__PURE__*/
  tsEnum(IDPStateSchema);

/**
 * Describes the enum zitadel.idp.v1.IDPStylingType.
 */
export const IDPStylingTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 1);

/**
 * @generated from enum zitadel.idp.v1.IDPStylingType
 */
export const IDPStylingType = /*@__PURE__*/
  tsEnum(IDPStylingTypeSchema);

/**
 * Describes the enum zitadel.idp.v1.IDPType.
 */
export const IDPTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 2);

/**
 * authorization framework of the identity provider
 *
 * @generated from enum zitadel.idp.v1.IDPType
 */
export const IDPType = /*@__PURE__*/
  tsEnum(IDPTypeSchema);

/**
 * Describes the enum zitadel.idp.v1.IDPOwnerType.
 */
export const IDPOwnerTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 3);

/**
 * the owner of the identity provider.
 *
 * @generated from enum zitadel.idp.v1.IDPOwnerType
 */
export const IDPOwnerType = /*@__PURE__*/
  tsEnum(IDPOwnerTypeSchema);

/**
 * Describes the enum zitadel.idp.v1.OIDCMappingField.
 */
export const OIDCMappingFieldSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 4);

/**
 * @generated from enum zitadel.idp.v1.OIDCMappingField
 */
export const OIDCMappingField = /*@__PURE__*/
  tsEnum(OIDCMappingFieldSchema);

/**
 * Describes the enum zitadel.idp.v1.IDPFieldName.
 */
export const IDPFieldNameSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 5);

/**
 * @generated from enum zitadel.idp.v1.IDPFieldName
 */
export const IDPFieldName = /*@__PURE__*/
  tsEnum(IDPFieldNameSchema);

/**
 * Describes the enum zitadel.idp.v1.ProviderType.
 */
export const ProviderTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 6);

/**
 * @generated from enum zitadel.idp.v1.ProviderType
 */
export const ProviderType = /*@__PURE__*/
  tsEnum(ProviderTypeSchema);

/**
 * Describes the enum zitadel.idp.v1.SAMLBinding.
 */
export const SAMLBindingSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 7);

/**
 * @generated from enum zitadel.idp.v1.SAMLBinding
 */
export const SAMLBinding = /*@__PURE__*/
  tsEnum(SAMLBindingSchema);

/**
 * Describes the enum zitadel.idp.v1.SAMLNameIDFormat.
 */
export const SAMLNameIDFormatSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 8);

/**
 * @generated from enum zitadel.idp.v1.SAMLNameIDFormat
 */
export const SAMLNameIDFormat = /*@__PURE__*/
  tsEnum(SAMLNameIDFormatSchema);

/**
 * Describes the enum zitadel.idp.v1.AutoLinkingOption.
 */
export const AutoLinkingOptionSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 9);

/**
 * @generated from enum zitadel.idp.v1.AutoLinkingOption
 */
export const AutoLinkingOption = /*@__PURE__*/
  tsEnum(AutoLinkingOptionSchema);

/**
 * Describes the enum zitadel.idp.v1.AzureADTenantType.
 */
export const AzureADTenantTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_idp, 10);

/**
 * @generated from enum zitadel.idp.v1.AzureADTenantType
 */
export const AzureADTenantType = /*@__PURE__*/
  tsEnum(AzureADTenantTypeSchema);

