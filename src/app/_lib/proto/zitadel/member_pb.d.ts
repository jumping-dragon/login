// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/member.proto (package zitadel.member.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson, TextQueryMethod, TextQueryMethodJson } from "./object_pb.js";
import type { Type, TypeJson } from "./user_pb.js";

/**
 * Describes the file zitadel/member.proto.
 */
export declare const file_zitadel_member: GenFile;

/**
 * @generated from message zitadel.member.v1.Member
 */
export declare type Member = Message<"zitadel.member.v1.Member"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];

  /**
   * @generated from field: string preferred_login_name = 4;
   */
  preferredLoginName: string;

  /**
   * @generated from field: string email = 5;
   */
  email: string;

  /**
   * @generated from field: string first_name = 6;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 7;
   */
  lastName: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName: string;

  /**
   * @generated from field: string avatar_url = 9;
   */
  avatarUrl: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 10;
   */
  userType: Type;

  /**
   * The organization the user belong to.  
   *
   * @generated from field: string user_resource_owner = 11;
   */
  userResourceOwner: string;
};

/**
 * @generated from message zitadel.member.v1.Member
 */
export declare type MemberJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles?: string[];

  /**
   * @generated from field: string preferred_login_name = 4;
   */
  preferredLoginName?: string;

  /**
   * @generated from field: string email = 5;
   */
  email?: string;

  /**
   * @generated from field: string first_name = 6;
   */
  firstName?: string;

  /**
   * @generated from field: string last_name = 7;
   */
  lastName?: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName?: string;

  /**
   * @generated from field: string avatar_url = 9;
   */
  avatarUrl?: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 10;
   */
  userType?: TypeJson;

  /**
   * The organization the user belong to.  
   *
   * @generated from field: string user_resource_owner = 11;
   */
  userResourceOwner?: string;
};

/**
 * Describes the message zitadel.member.v1.Member.
 * Use `create(MemberSchema)` to create a new message.
 */
export declare const MemberSchema: GenMessage<Member, {jsonType: MemberJson}>;

/**
 * @generated from message zitadel.member.v1.SearchQuery
 */
export declare type SearchQuery = Message<"zitadel.member.v1.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.member.v1.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.member.v1.FirstNameQuery first_name_query = 1;
     */
    value: FirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.member.v1.LastNameQuery last_name_query = 2;
     */
    value: LastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.member.v1.EmailQuery email_query = 3;
     */
    value: EmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.member.v1.UserIDQuery user_id_query = 4;
     */
    value: UserIDQuery;
    case: "userIdQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.member.v1.SearchQuery
 */
export declare type SearchQueryJson = {
  /**
   * @generated from field: zitadel.member.v1.FirstNameQuery first_name_query = 1;
   */
  firstNameQuery?: FirstNameQueryJson;

  /**
   * @generated from field: zitadel.member.v1.LastNameQuery last_name_query = 2;
   */
  lastNameQuery?: LastNameQueryJson;

  /**
   * @generated from field: zitadel.member.v1.EmailQuery email_query = 3;
   */
  emailQuery?: EmailQueryJson;

  /**
   * @generated from field: zitadel.member.v1.UserIDQuery user_id_query = 4;
   */
  userIdQuery?: UserIDQueryJson;
};

/**
 * Describes the message zitadel.member.v1.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export declare const SearchQuerySchema: GenMessage<SearchQuery, {jsonType: SearchQueryJson}>;

/**
 * @generated from message zitadel.member.v1.FirstNameQuery
 */
export declare type FirstNameQuery = Message<"zitadel.member.v1.FirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.member.v1.FirstNameQuery
 */
export declare type FirstNameQueryJson = {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.member.v1.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export declare const FirstNameQuerySchema: GenMessage<FirstNameQuery, {jsonType: FirstNameQueryJson}>;

/**
 * @generated from message zitadel.member.v1.LastNameQuery
 */
export declare type LastNameQuery = Message<"zitadel.member.v1.LastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.member.v1.LastNameQuery
 */
export declare type LastNameQueryJson = {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.member.v1.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export declare const LastNameQuerySchema: GenMessage<LastNameQuery, {jsonType: LastNameQueryJson}>;

/**
 * @generated from message zitadel.member.v1.EmailQuery
 */
export declare type EmailQuery = Message<"zitadel.member.v1.EmailQuery"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.member.v1.EmailQuery
 */
export declare type EmailQueryJson = {
  /**
   * @generated from field: string email = 1;
   */
  email?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.member.v1.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export declare const EmailQuerySchema: GenMessage<EmailQuery, {jsonType: EmailQueryJson}>;

/**
 * @generated from message zitadel.member.v1.UserIDQuery
 */
export declare type UserIDQuery = Message<"zitadel.member.v1.UserIDQuery"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.member.v1.UserIDQuery
 */
export declare type UserIDQueryJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.member.v1.UserIDQuery.
 * Use `create(UserIDQuerySchema)` to create a new message.
 */
export declare const UserIDQuerySchema: GenMessage<UserIDQuery, {jsonType: UserIDQueryJson}>;

/**
 * @generated from enum zitadel.member.v1.MemberFieldColumnName
 */
export enum MemberFieldColumnName {
  /**
   * @generated from enum value: MEMBER_FIELD_NAME_UNSPECIFIED = 0;
   */
  MEMBER_FIELD_NAME_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_FIELD_NAME_USER_ID = 1;
   */
  MEMBER_FIELD_NAME_USER_ID = 1,

  /**
   * @generated from enum value: MEMBER_FIELD_NAME_CREATION_DATE = 2;
   */
  MEMBER_FIELD_NAME_CREATION_DATE = 2,

  /**
   * @generated from enum value: MEMBER_FIELD_NAME_CHANGE_DATE = 3;
   */
  MEMBER_FIELD_NAME_CHANGE_DATE = 3,

  /**
   * @generated from enum value: MEMBER_FIELD_NAME_USER_RESOURCE_OWNER = 4;
   */
  MEMBER_FIELD_NAME_USER_RESOURCE_OWNER = 4,
}

/**
 * @generated from enum zitadel.member.v1.MemberFieldColumnName
 */
export declare type MemberFieldColumnNameJson = "MEMBER_FIELD_NAME_UNSPECIFIED" | "MEMBER_FIELD_NAME_USER_ID" | "MEMBER_FIELD_NAME_CREATION_DATE" | "MEMBER_FIELD_NAME_CHANGE_DATE" | "MEMBER_FIELD_NAME_USER_RESOURCE_OWNER";

/**
 * Describes the enum zitadel.member.v1.MemberFieldColumnName.
 */
export declare const MemberFieldColumnNameSchema: GenEnum<MemberFieldColumnName, MemberFieldColumnNameJson>;

