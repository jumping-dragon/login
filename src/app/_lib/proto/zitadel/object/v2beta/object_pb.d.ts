// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/object/v2beta/object.proto (package zitadel.object.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/object/v2beta/object.proto.
 */
export declare const file_zitadel_object_v2beta_object: GenFile;

/**
 * Deprecated: use Organization
 *
 * @generated from message zitadel.object.v2beta.Organisation
 */
export declare type Organisation = Message<"zitadel.object.v2beta.Organisation"> & {
  /**
   * @generated from oneof zitadel.object.v2beta.Organisation.org
   */
  org: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string org_domain = 2;
     */
    value: string;
    case: "orgDomain";
  } | { case: undefined; value?: undefined };
};

/**
 * Deprecated: use Organization
 *
 * @generated from message zitadel.object.v2beta.Organisation
 */
export declare type OrganisationJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;

  /**
   * @generated from field: string org_domain = 2;
   */
  orgDomain?: string;
};

/**
 * Describes the message zitadel.object.v2beta.Organisation.
 * Use `create(OrganisationSchema)` to create a new message.
 */
export declare const OrganisationSchema: GenMessage<Organisation, {jsonType: OrganisationJson}>;

/**
 * @generated from message zitadel.object.v2beta.Organization
 */
export declare type Organization = Message<"zitadel.object.v2beta.Organization"> & {
  /**
   * @generated from oneof zitadel.object.v2beta.Organization.org
   */
  org: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string org_domain = 2;
     */
    value: string;
    case: "orgDomain";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.object.v2beta.Organization
 */
export declare type OrganizationJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;

  /**
   * @generated from field: string org_domain = 2;
   */
  orgDomain?: string;
};

/**
 * Describes the message zitadel.object.v2beta.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export declare const OrganizationSchema: GenMessage<Organization, {jsonType: OrganizationJson}>;

/**
 * @generated from message zitadel.object.v2beta.RequestContext
 */
export declare type RequestContext = Message<"zitadel.object.v2beta.RequestContext"> & {
  /**
   * @generated from oneof zitadel.object.v2beta.RequestContext.resource_owner
   */
  resourceOwner: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: bool instance = 2;
     */
    value: boolean;
    case: "instance";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.object.v2beta.RequestContext
 */
export declare type RequestContextJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;

  /**
   * @generated from field: bool instance = 2;
   */
  instance?: boolean;
};

/**
 * Describes the message zitadel.object.v2beta.RequestContext.
 * Use `create(RequestContextSchema)` to create a new message.
 */
export declare const RequestContextSchema: GenMessage<RequestContext, {jsonType: RequestContextJson}>;

/**
 * @generated from message zitadel.object.v2beta.ListQuery
 */
export declare type ListQuery = Message<"zitadel.object.v2beta.ListQuery"> & {
  /**
   * @generated from field: uint64 offset = 1;
   */
  offset: bigint;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit: number;

  /**
   * @generated from field: bool asc = 3;
   */
  asc: boolean;
};

/**
 * @generated from message zitadel.object.v2beta.ListQuery
 */
export declare type ListQueryJson = {
  /**
   * @generated from field: uint64 offset = 1;
   */
  offset?: string;

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit?: number;

  /**
   * @generated from field: bool asc = 3;
   */
  asc?: boolean;
};

/**
 * Describes the message zitadel.object.v2beta.ListQuery.
 * Use `create(ListQuerySchema)` to create a new message.
 */
export declare const ListQuerySchema: GenMessage<ListQuery, {jsonType: ListQueryJson}>;

/**
 * @generated from message zitadel.object.v2beta.Details
 */
export declare type Details = Message<"zitadel.object.v2beta.Details"> & {
  /**
   * sequence represents the order of events. It's always counting
   *
   * on read: the sequence of the last event reduced by the projection
   *
   * on manipulation: the timestamp of the event(s) added by the manipulation
   *
   * @generated from field: uint64 sequence = 1;
   */
  sequence: bigint;

  /**
   * change_date is the timestamp when the object was changed
   *
   * on read: the timestamp of the last event reduced by the projection
   *
   * on manipulation: the timestamp of the event(s) added by the manipulation
   *
   * @generated from field: google.protobuf.Timestamp change_date = 2;
   */
  changeDate?: Timestamp;

  /**
   * resource_owner is the organization or instance_id an object belongs to
   *
   * @generated from field: string resource_owner = 3;
   */
  resourceOwner: string;

  /**
   * creation_date is the timestamp where the first operation on the object was made
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 4;
   */
  creationDate?: Timestamp;
};

/**
 * @generated from message zitadel.object.v2beta.Details
 */
export declare type DetailsJson = {
  /**
   * sequence represents the order of events. It's always counting
   *
   * on read: the sequence of the last event reduced by the projection
   *
   * on manipulation: the timestamp of the event(s) added by the manipulation
   *
   * @generated from field: uint64 sequence = 1;
   */
  sequence?: string;

  /**
   * change_date is the timestamp when the object was changed
   *
   * on read: the timestamp of the last event reduced by the projection
   *
   * on manipulation: the timestamp of the event(s) added by the manipulation
   *
   * @generated from field: google.protobuf.Timestamp change_date = 2;
   */
  changeDate?: TimestampJson;

  /**
   * resource_owner is the organization or instance_id an object belongs to
   *
   * @generated from field: string resource_owner = 3;
   */
  resourceOwner?: string;

  /**
   * creation_date is the timestamp where the first operation on the object was made
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 4;
   */
  creationDate?: TimestampJson;
};

/**
 * Describes the message zitadel.object.v2beta.Details.
 * Use `create(DetailsSchema)` to create a new message.
 */
export declare const DetailsSchema: GenMessage<Details, {jsonType: DetailsJson}>;

/**
 * @generated from message zitadel.object.v2beta.ListDetails
 */
export declare type ListDetails = Message<"zitadel.object.v2beta.ListDetails"> & {
  /**
   * @generated from field: uint64 total_result = 1;
   */
  totalResult: bigint;

  /**
   * @generated from field: uint64 processed_sequence = 2;
   */
  processedSequence: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;
};

/**
 * @generated from message zitadel.object.v2beta.ListDetails
 */
export declare type ListDetailsJson = {
  /**
   * @generated from field: uint64 total_result = 1;
   */
  totalResult?: string;

  /**
   * @generated from field: uint64 processed_sequence = 2;
   */
  processedSequence?: string;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: TimestampJson;
};

/**
 * Describes the message zitadel.object.v2beta.ListDetails.
 * Use `create(ListDetailsSchema)` to create a new message.
 */
export declare const ListDetailsSchema: GenMessage<ListDetails, {jsonType: ListDetailsJson}>;

/**
 * @generated from enum zitadel.object.v2beta.TextQueryMethod
 */
export enum TextQueryMethod {
  /**
   * @generated from enum value: TEXT_QUERY_METHOD_EQUALS = 0;
   */
  EQUALS = 0,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE = 1;
   */
  EQUALS_IGNORE_CASE = 1,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_STARTS_WITH = 2;
   */
  STARTS_WITH = 2,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE = 3;
   */
  STARTS_WITH_IGNORE_CASE = 3,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_CONTAINS = 4;
   */
  CONTAINS = 4,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE = 5;
   */
  CONTAINS_IGNORE_CASE = 5,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_ENDS_WITH = 6;
   */
  ENDS_WITH = 6,

  /**
   * @generated from enum value: TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE = 7;
   */
  ENDS_WITH_IGNORE_CASE = 7,
}

/**
 * @generated from enum zitadel.object.v2beta.TextQueryMethod
 */
export declare type TextQueryMethodJson = "TEXT_QUERY_METHOD_EQUALS" | "TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE" | "TEXT_QUERY_METHOD_STARTS_WITH" | "TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE" | "TEXT_QUERY_METHOD_CONTAINS" | "TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE" | "TEXT_QUERY_METHOD_ENDS_WITH" | "TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE";

/**
 * Describes the enum zitadel.object.v2beta.TextQueryMethod.
 */
export declare const TextQueryMethodSchema: GenEnum<TextQueryMethod, TextQueryMethodJson>;

/**
 * @generated from enum zitadel.object.v2beta.ListQueryMethod
 */
export enum ListQueryMethod {
  /**
   * @generated from enum value: LIST_QUERY_METHOD_IN = 0;
   */
  IN = 0,
}

/**
 * @generated from enum zitadel.object.v2beta.ListQueryMethod
 */
export declare type ListQueryMethodJson = "LIST_QUERY_METHOD_IN";

/**
 * Describes the enum zitadel.object.v2beta.ListQueryMethod.
 */
export declare const ListQueryMethodSchema: GenEnum<ListQueryMethod, ListQueryMethodJson>;

/**
 * @generated from enum zitadel.object.v2beta.TimestampQueryMethod
 */
export enum TimestampQueryMethod {
  /**
   * @generated from enum value: TIMESTAMP_QUERY_METHOD_EQUALS = 0;
   */
  EQUALS = 0,

  /**
   * @generated from enum value: TIMESTAMP_QUERY_METHOD_GREATER = 1;
   */
  GREATER = 1,

  /**
   * @generated from enum value: TIMESTAMP_QUERY_METHOD_GREATER_OR_EQUALS = 2;
   */
  GREATER_OR_EQUALS = 2,

  /**
   * @generated from enum value: TIMESTAMP_QUERY_METHOD_LESS = 3;
   */
  LESS = 3,

  /**
   * @generated from enum value: TIMESTAMP_QUERY_METHOD_LESS_OR_EQUALS = 4;
   */
  LESS_OR_EQUALS = 4,
}

/**
 * @generated from enum zitadel.object.v2beta.TimestampQueryMethod
 */
export declare type TimestampQueryMethodJson = "TIMESTAMP_QUERY_METHOD_EQUALS" | "TIMESTAMP_QUERY_METHOD_GREATER" | "TIMESTAMP_QUERY_METHOD_GREATER_OR_EQUALS" | "TIMESTAMP_QUERY_METHOD_LESS" | "TIMESTAMP_QUERY_METHOD_LESS_OR_EQUALS";

/**
 * Describes the enum zitadel.object.v2beta.TimestampQueryMethod.
 */
export declare const TimestampQueryMethodSchema: GenEnum<TimestampQueryMethod, TimestampQueryMethodJson>;

