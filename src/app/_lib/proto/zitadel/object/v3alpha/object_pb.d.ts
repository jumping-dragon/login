// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/object/v3alpha/object.proto (package zitadel.object.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/object/v3alpha/object.proto.
 */
export declare const file_zitadel_object_v3alpha_object: GenFile;

/**
 * @generated from message zitadel.object.v3alpha.Owner
 */
export declare type Owner = Message<"zitadel.object.v3alpha.Owner"> & {
  /**
   * @generated from field: zitadel.object.v3alpha.OwnerType type = 1;
   */
  type: OwnerType;

  /**
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * @generated from message zitadel.object.v3alpha.Owner
 */
export declare type OwnerJson = {
  /**
   * @generated from field: zitadel.object.v3alpha.OwnerType type = 1;
   */
  type?: OwnerTypeJson;

  /**
   * @generated from field: string id = 2;
   */
  id?: string;
};

/**
 * Describes the message zitadel.object.v3alpha.Owner.
 * Use `create(OwnerSchema)` to create a new message.
 */
export declare const OwnerSchema: GenMessage<Owner, {jsonType: OwnerJson}>;

/**
 * @generated from message zitadel.object.v3alpha.Instance
 */
export declare type Instance = Message<"zitadel.object.v3alpha.Instance"> & {
  /**
   * @generated from oneof zitadel.object.v3alpha.Instance.property
   */
  property: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string domain = 2;
     */
    value: string;
    case: "domain";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.object.v3alpha.Instance
 */
export declare type InstanceJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string domain = 2;
   */
  domain?: string;
};

/**
 * Describes the message zitadel.object.v3alpha.Instance.
 * Use `create(InstanceSchema)` to create a new message.
 */
export declare const InstanceSchema: GenMessage<Instance, {jsonType: InstanceJson}>;

/**
 * @generated from message zitadel.object.v3alpha.Organization
 */
export declare type Organization = Message<"zitadel.object.v3alpha.Organization"> & {
  /**
   * @generated from oneof zitadel.object.v3alpha.Organization.property
   */
  property: {
    /**
     * @generated from field: string org_id = 1;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string org_domain = 2;
     */
    value: string;
    case: "orgDomain";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.object.v3alpha.Organization
 */
export declare type OrganizationJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;

  /**
   * @generated from field: string org_domain = 2;
   */
  orgDomain?: string;
};

/**
 * Describes the message zitadel.object.v3alpha.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export declare const OrganizationSchema: GenMessage<Organization, {jsonType: OrganizationJson}>;

/**
 * @generated from enum zitadel.object.v3alpha.OwnerType
 */
export enum OwnerType {
  /**
   * @generated from enum value: OWNER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: OWNER_TYPE_SYSTEM = 1;
   */
  SYSTEM = 1,

  /**
   * @generated from enum value: OWNER_TYPE_INSTANCE = 2;
   */
  INSTANCE = 2,

  /**
   * @generated from enum value: OWNER_TYPE_ORG = 3;
   */
  ORG = 3,
}

/**
 * @generated from enum zitadel.object.v3alpha.OwnerType
 */
export declare type OwnerTypeJson = "OWNER_TYPE_UNSPECIFIED" | "OWNER_TYPE_SYSTEM" | "OWNER_TYPE_INSTANCE" | "OWNER_TYPE_ORG";

/**
 * Describes the enum zitadel.object.v3alpha.OwnerType.
 */
export declare const OwnerTypeSchema: GenEnum<OwnerType, OwnerTypeJson>;

