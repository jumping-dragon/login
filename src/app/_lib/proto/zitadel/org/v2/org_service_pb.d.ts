// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/org/v2/org_service.proto (package zitadel.org.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { AddHumanUserRequest, AddHumanUserRequestJson } from "../../user/v2/user_service_pb.js";
import type { Details, DetailsJson, ListDetails, ListDetailsJson, ListQuery, ListQueryJson } from "../../object/v2/object_pb.js";
import type { OrganizationFieldName, OrganizationFieldNameJson, SearchQuery, SearchQueryJson } from "./query_pb.js";
import type { Organization, OrganizationJson } from "./org_pb.js";

/**
 * Describes the file zitadel/org/v2/org_service.proto.
 */
export declare const file_zitadel_org_v2_org_service: GenFile;

/**
 * @generated from message zitadel.org.v2.AddOrganizationRequest
 */
export declare type AddOrganizationRequest = Message<"zitadel.org.v2.AddOrganizationRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: repeated zitadel.org.v2.AddOrganizationRequest.Admin admins = 2;
   */
  admins: AddOrganizationRequest_Admin[];

  /**
   * optionally set your own id unique for the organization.
   *
   * @generated from field: optional string org_id = 3;
   */
  orgId?: string;
};

/**
 * @generated from message zitadel.org.v2.AddOrganizationRequest
 */
export declare type AddOrganizationRequestJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: repeated zitadel.org.v2.AddOrganizationRequest.Admin admins = 2;
   */
  admins?: AddOrganizationRequest_AdminJson[];

  /**
   * optionally set your own id unique for the organization.
   *
   * @generated from field: optional string org_id = 3;
   */
  orgId?: string;
};

/**
 * Describes the message zitadel.org.v2.AddOrganizationRequest.
 * Use `create(AddOrganizationRequestSchema)` to create a new message.
 */
export declare const AddOrganizationRequestSchema: GenMessage<AddOrganizationRequest, {jsonType: AddOrganizationRequestJson}>;

/**
 * @generated from message zitadel.org.v2.AddOrganizationRequest.Admin
 */
export declare type AddOrganizationRequest_Admin = Message<"zitadel.org.v2.AddOrganizationRequest.Admin"> & {
  /**
   * @generated from oneof zitadel.org.v2.AddOrganizationRequest.Admin.user_type
   */
  userType: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: zitadel.user.v2.AddHumanUserRequest human = 2;
     */
    value: AddHumanUserRequest;
    case: "human";
  } | { case: undefined; value?: undefined };

  /**
   * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
   *
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];
};

/**
 * @generated from message zitadel.org.v2.AddOrganizationRequest.Admin
 */
export declare type AddOrganizationRequest_AdminJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.AddHumanUserRequest human = 2;
   */
  human?: AddHumanUserRequestJson;

  /**
   * specify Org Member Roles for the provided user (default is ORG_OWNER if roles are empty)
   *
   * @generated from field: repeated string roles = 3;
   */
  roles?: string[];
};

/**
 * Describes the message zitadel.org.v2.AddOrganizationRequest.Admin.
 * Use `create(AddOrganizationRequest_AdminSchema)` to create a new message.
 */
export declare const AddOrganizationRequest_AdminSchema: GenMessage<AddOrganizationRequest_Admin, {jsonType: AddOrganizationRequest_AdminJson}>;

/**
 * @generated from message zitadel.org.v2.AddOrganizationResponse
 */
export declare type AddOrganizationResponse = Message<"zitadel.org.v2.AddOrganizationResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: repeated zitadel.org.v2.AddOrganizationResponse.CreatedAdmin created_admins = 3;
   */
  createdAdmins: AddOrganizationResponse_CreatedAdmin[];
};

/**
 * @generated from message zitadel.org.v2.AddOrganizationResponse
 */
export declare type AddOrganizationResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId?: string;

  /**
   * @generated from field: repeated zitadel.org.v2.AddOrganizationResponse.CreatedAdmin created_admins = 3;
   */
  createdAdmins?: AddOrganizationResponse_CreatedAdminJson[];
};

/**
 * Describes the message zitadel.org.v2.AddOrganizationResponse.
 * Use `create(AddOrganizationResponseSchema)` to create a new message.
 */
export declare const AddOrganizationResponseSchema: GenMessage<AddOrganizationResponse, {jsonType: AddOrganizationResponseJson}>;

/**
 * @generated from message zitadel.org.v2.AddOrganizationResponse.CreatedAdmin
 */
export declare type AddOrganizationResponse_CreatedAdmin = Message<"zitadel.org.v2.AddOrganizationResponse.CreatedAdmin"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.org.v2.AddOrganizationResponse.CreatedAdmin
 */
export declare type AddOrganizationResponse_CreatedAdminJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.org.v2.AddOrganizationResponse.CreatedAdmin.
 * Use `create(AddOrganizationResponse_CreatedAdminSchema)` to create a new message.
 */
export declare const AddOrganizationResponse_CreatedAdminSchema: GenMessage<AddOrganizationResponse_CreatedAdmin, {jsonType: AddOrganizationResponse_CreatedAdminJson}>;

/**
 * @generated from message zitadel.org.v2.ListOrganizationsRequest
 */
export declare type ListOrganizationsRequest = Message<"zitadel.org.v2.ListOrganizationsRequest"> & {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.org.v2.OrganizationFieldName sorting_column = 2;
   */
  sortingColumn: OrganizationFieldName;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.org.v2.SearchQuery queries = 3;
   */
  queries: SearchQuery[];
};

/**
 * @generated from message zitadel.org.v2.ListOrganizationsRequest
 */
export declare type ListOrganizationsRequestJson = {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 1;
   */
  query?: ListQueryJson;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.org.v2.OrganizationFieldName sorting_column = 2;
   */
  sortingColumn?: OrganizationFieldNameJson;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.org.v2.SearchQuery queries = 3;
   */
  queries?: SearchQueryJson[];
};

/**
 * Describes the message zitadel.org.v2.ListOrganizationsRequest.
 * Use `create(ListOrganizationsRequestSchema)` to create a new message.
 */
export declare const ListOrganizationsRequestSchema: GenMessage<ListOrganizationsRequest, {jsonType: ListOrganizationsRequestJson}>;

/**
 * @generated from message zitadel.org.v2.ListOrganizationsResponse
 */
export declare type ListOrganizationsResponse = Message<"zitadel.org.v2.ListOrganizationsResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.org.v2.OrganizationFieldName sorting_column = 2;
   */
  sortingColumn: OrganizationFieldName;

  /**
   * @generated from field: repeated zitadel.org.v2.Organization result = 3;
   */
  result: Organization[];
};

/**
 * @generated from message zitadel.org.v2.ListOrganizationsResponse
 */
export declare type ListOrganizationsResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: zitadel.org.v2.OrganizationFieldName sorting_column = 2;
   */
  sortingColumn?: OrganizationFieldNameJson;

  /**
   * @generated from field: repeated zitadel.org.v2.Organization result = 3;
   */
  result?: OrganizationJson[];
};

/**
 * Describes the message zitadel.org.v2.ListOrganizationsResponse.
 * Use `create(ListOrganizationsResponseSchema)` to create a new message.
 */
export declare const ListOrganizationsResponseSchema: GenMessage<ListOrganizationsResponse, {jsonType: ListOrganizationsResponseJson}>;

/**
 * @generated from service zitadel.org.v2.OrganizationService
 */
export declare const OrganizationService: GenService<{
  /**
   * Create an Organization
   *
   * Create a new organization with an administrative user. If no specific roles are sent for the users, they will be granted the role ORG_OWNER.
   *
   * @generated from rpc zitadel.org.v2.OrganizationService.AddOrganization
   */
  addOrganization: {
    methodKind: "unary";
    input: typeof AddOrganizationRequestSchema;
    output: typeof AddOrganizationResponseSchema;
  },
  /**
   * Search Organizations
   *
   * Search for Organizations. By default, we will return all organization of the instance. Make sure to include a limit and sorting for pagination..
   *
   * @generated from rpc zitadel.org.v2.OrganizationService.ListOrganizations
   */
  listOrganizations: {
    methodKind: "unary";
    input: typeof ListOrganizationsRequestSchema;
    output: typeof ListOrganizationsResponseSchema;
  },
}>;

