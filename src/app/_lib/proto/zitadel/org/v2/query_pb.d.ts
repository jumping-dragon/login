// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/org/v2/query.proto (package zitadel.org.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { TextQueryMethod, TextQueryMethodJson } from "../../object/v2/object_pb.js";
import type { OrganizationState, OrganizationStateJson } from "./org_pb.js";

/**
 * Describes the file zitadel/org/v2/query.proto.
 */
export declare const file_zitadel_org_v2_query: GenFile;

/**
 * @generated from message zitadel.org.v2.SearchQuery
 */
export declare type SearchQuery = Message<"zitadel.org.v2.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.org.v2.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.org.v2.OrganizationNameQuery name_query = 1;
     */
    value: OrganizationNameQuery;
    case: "nameQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v2.OrganizationDomainQuery domain_query = 2;
     */
    value: OrganizationDomainQuery;
    case: "domainQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v2.OrganizationStateQuery state_query = 3;
     */
    value: OrganizationStateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v2.OrganizationIDQuery id_query = 4;
     */
    value: OrganizationIDQuery;
    case: "idQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v2.DefaultOrganizationQuery default_query = 5;
     */
    value: DefaultOrganizationQuery;
    case: "defaultQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.org.v2.SearchQuery
 */
export declare type SearchQueryJson = {
  /**
   * @generated from field: zitadel.org.v2.OrganizationNameQuery name_query = 1;
   */
  nameQuery?: OrganizationNameQueryJson;

  /**
   * @generated from field: zitadel.org.v2.OrganizationDomainQuery domain_query = 2;
   */
  domainQuery?: OrganizationDomainQueryJson;

  /**
   * @generated from field: zitadel.org.v2.OrganizationStateQuery state_query = 3;
   */
  stateQuery?: OrganizationStateQueryJson;

  /**
   * @generated from field: zitadel.org.v2.OrganizationIDQuery id_query = 4;
   */
  idQuery?: OrganizationIDQueryJson;

  /**
   * @generated from field: zitadel.org.v2.DefaultOrganizationQuery default_query = 5;
   */
  defaultQuery?: DefaultOrganizationQueryJson;
};

/**
 * Describes the message zitadel.org.v2.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export declare const SearchQuerySchema: GenMessage<SearchQuery, {jsonType: SearchQueryJson}>;

/**
 * @generated from message zitadel.org.v2.OrganizationNameQuery
 */
export declare type OrganizationNameQuery = Message<"zitadel.org.v2.OrganizationNameQuery"> & {
  /**
   * Name of the organization.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v2.OrganizationNameQuery
 */
export declare type OrganizationNameQueryJson = {
  /**
   * Name of the organization.
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v2.OrganizationNameQuery.
 * Use `create(OrganizationNameQuerySchema)` to create a new message.
 */
export declare const OrganizationNameQuerySchema: GenMessage<OrganizationNameQuery, {jsonType: OrganizationNameQueryJson}>;

/**
 * @generated from message zitadel.org.v2.OrganizationDomainQuery
 */
export declare type OrganizationDomainQuery = Message<"zitadel.org.v2.OrganizationDomainQuery"> & {
  /**
   * Domain used in organization, not necessary primary domain.
   *
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v2.OrganizationDomainQuery
 */
export declare type OrganizationDomainQueryJson = {
  /**
   * Domain used in organization, not necessary primary domain.
   *
   * @generated from field: string domain = 1;
   */
  domain?: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v2.OrganizationDomainQuery.
 * Use `create(OrganizationDomainQuerySchema)` to create a new message.
 */
export declare const OrganizationDomainQuerySchema: GenMessage<OrganizationDomainQuery, {jsonType: OrganizationDomainQueryJson}>;

/**
 * @generated from message zitadel.org.v2.OrganizationStateQuery
 */
export declare type OrganizationStateQuery = Message<"zitadel.org.v2.OrganizationStateQuery"> & {
  /**
   * Current state of the organization.
   *
   * @generated from field: zitadel.org.v2.OrganizationState state = 1;
   */
  state: OrganizationState;
};

/**
 * @generated from message zitadel.org.v2.OrganizationStateQuery
 */
export declare type OrganizationStateQueryJson = {
  /**
   * Current state of the organization.
   *
   * @generated from field: zitadel.org.v2.OrganizationState state = 1;
   */
  state?: OrganizationStateJson;
};

/**
 * Describes the message zitadel.org.v2.OrganizationStateQuery.
 * Use `create(OrganizationStateQuerySchema)` to create a new message.
 */
export declare const OrganizationStateQuerySchema: GenMessage<OrganizationStateQuery, {jsonType: OrganizationStateQueryJson}>;

/**
 * @generated from message zitadel.org.v2.OrganizationIDQuery
 */
export declare type OrganizationIDQuery = Message<"zitadel.org.v2.OrganizationIDQuery"> & {
  /**
   * Unique identifier of the organization.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * @generated from message zitadel.org.v2.OrganizationIDQuery
 */
export declare type OrganizationIDQueryJson = {
  /**
   * Unique identifier of the organization.
   *
   * @generated from field: string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.org.v2.OrganizationIDQuery.
 * Use `create(OrganizationIDQuerySchema)` to create a new message.
 */
export declare const OrganizationIDQuerySchema: GenMessage<OrganizationIDQuery, {jsonType: OrganizationIDQueryJson}>;

/**
 * @generated from message zitadel.org.v2.DefaultOrganizationQuery
 */
export declare type DefaultOrganizationQuery = Message<"zitadel.org.v2.DefaultOrganizationQuery"> & {
};

/**
 * @generated from message zitadel.org.v2.DefaultOrganizationQuery
 */
export declare type DefaultOrganizationQueryJson = {
};

/**
 * Describes the message zitadel.org.v2.DefaultOrganizationQuery.
 * Use `create(DefaultOrganizationQuerySchema)` to create a new message.
 */
export declare const DefaultOrganizationQuerySchema: GenMessage<DefaultOrganizationQuery, {jsonType: DefaultOrganizationQueryJson}>;

/**
 * @generated from enum zitadel.org.v2.OrganizationFieldName
 */
export enum OrganizationFieldName {
  /**
   * @generated from enum value: ORGANIZATION_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORGANIZATION_FIELD_NAME_NAME = 1;
   */
  NAME = 1,
}

/**
 * @generated from enum zitadel.org.v2.OrganizationFieldName
 */
export declare type OrganizationFieldNameJson = "ORGANIZATION_FIELD_NAME_UNSPECIFIED" | "ORGANIZATION_FIELD_NAME_NAME";

/**
 * Describes the enum zitadel.org.v2.OrganizationFieldName.
 */
export declare const OrganizationFieldNameSchema: GenEnum<OrganizationFieldName, OrganizationFieldNameJson>;

