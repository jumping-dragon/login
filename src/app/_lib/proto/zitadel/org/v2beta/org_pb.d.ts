// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/org/v2beta/org.proto (package zitadel.org.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { TextQueryMethod, TextQueryMethodJson } from "../../object/v2beta/object_pb.js";

/**
 * Describes the file zitadel/org/v2beta/org.proto.
 */
export declare const file_zitadel_org_v2beta_org: GenFile;

/**
 * @generated from message zitadel.org.v2beta.Organization
 */
export declare type Organization = Message<"zitadel.org.v2beta.Organization"> & {
  /**
   * Unique identifier of the organization.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp of the organization was created.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: Timestamp;

  /**
   *  The timestamp of the verification of the organization domain.
   *
   * @generated from field: google.protobuf.Timestamp changed_date = 3;
   */
  changedDate?: Timestamp;

  /**
   * Current state of the organization, for example active, inactive and deleted.
   *
   * @generated from field: zitadel.org.v2beta.OrgState state = 4;
   */
  state: OrgState;

  /**
   * Name of the organization.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * Primary domain used in the organization.
   *
   * @generated from field: string primary_domain = 6;
   */
  primaryDomain: string;
};

/**
 * @generated from message zitadel.org.v2beta.Organization
 */
export declare type OrganizationJson = {
  /**
   * Unique identifier of the organization.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The timestamp of the organization was created.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: TimestampJson;

  /**
   *  The timestamp of the verification of the organization domain.
   *
   * @generated from field: google.protobuf.Timestamp changed_date = 3;
   */
  changedDate?: TimestampJson;

  /**
   * Current state of the organization, for example active, inactive and deleted.
   *
   * @generated from field: zitadel.org.v2beta.OrgState state = 4;
   */
  state?: OrgStateJson;

  /**
   * Name of the organization.
   *
   * @generated from field: string name = 5;
   */
  name?: string;

  /**
   * Primary domain used in the organization.
   *
   * @generated from field: string primary_domain = 6;
   */
  primaryDomain?: string;
};

/**
 * Describes the message zitadel.org.v2beta.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export declare const OrganizationSchema: GenMessage<Organization, {jsonType: OrganizationJson}>;

/**
 * @generated from message zitadel.org.v2beta.OrganizationSearchFilter
 */
export declare type OrganizationSearchFilter = Message<"zitadel.org.v2beta.OrganizationSearchFilter"> & {
  /**
   * @generated from oneof zitadel.org.v2beta.OrganizationSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.org.v2beta.OrgNameFilter name_filter = 1;
     */
    value: OrgNameFilter;
    case: "nameFilter";
  } | {
    /**
     * @generated from field: zitadel.org.v2beta.OrgDomainFilter domain_filter = 2;
     */
    value: OrgDomainFilter;
    case: "domainFilter";
  } | {
    /**
     * @generated from field: zitadel.org.v2beta.OrgStateFilter state_filter = 3;
     */
    value: OrgStateFilter;
    case: "stateFilter";
  } | {
    /**
     * @generated from field: zitadel.org.v2beta.OrgIDFilter id_filter = 4;
     */
    value: OrgIDFilter;
    case: "idFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.org.v2beta.OrganizationSearchFilter
 */
export declare type OrganizationSearchFilterJson = {
  /**
   * @generated from field: zitadel.org.v2beta.OrgNameFilter name_filter = 1;
   */
  nameFilter?: OrgNameFilterJson;

  /**
   * @generated from field: zitadel.org.v2beta.OrgDomainFilter domain_filter = 2;
   */
  domainFilter?: OrgDomainFilterJson;

  /**
   * @generated from field: zitadel.org.v2beta.OrgStateFilter state_filter = 3;
   */
  stateFilter?: OrgStateFilterJson;

  /**
   * @generated from field: zitadel.org.v2beta.OrgIDFilter id_filter = 4;
   */
  idFilter?: OrgIDFilterJson;
};

/**
 * Describes the message zitadel.org.v2beta.OrganizationSearchFilter.
 * Use `create(OrganizationSearchFilterSchema)` to create a new message.
 */
export declare const OrganizationSearchFilterSchema: GenMessage<OrganizationSearchFilter, {jsonType: OrganizationSearchFilterJson}>;

/**
 * @generated from message zitadel.org.v2beta.OrgNameFilter
 */
export declare type OrgNameFilter = Message<"zitadel.org.v2beta.OrgNameFilter"> & {
  /**
   * Organization name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v2beta.OrgNameFilter
 */
export declare type OrgNameFilterJson = {
  /**
   * Organization name.
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v2beta.OrgNameFilter.
 * Use `create(OrgNameFilterSchema)` to create a new message.
 */
export declare const OrgNameFilterSchema: GenMessage<OrgNameFilter, {jsonType: OrgNameFilterJson}>;

/**
 * @generated from message zitadel.org.v2beta.OrgDomainFilter
 */
export declare type OrgDomainFilter = Message<"zitadel.org.v2beta.OrgDomainFilter"> & {
  /**
   * The domain.
   *
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v2beta.OrgDomainFilter
 */
export declare type OrgDomainFilterJson = {
  /**
   * The domain.
   *
   * @generated from field: string domain = 1;
   */
  domain?: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v2beta.OrgDomainFilter.
 * Use `create(OrgDomainFilterSchema)` to create a new message.
 */
export declare const OrgDomainFilterSchema: GenMessage<OrgDomainFilter, {jsonType: OrgDomainFilterJson}>;

/**
 * @generated from message zitadel.org.v2beta.OrgStateFilter
 */
export declare type OrgStateFilter = Message<"zitadel.org.v2beta.OrgStateFilter"> & {
  /**
   * Current state of the organization.
   *
   * @generated from field: zitadel.org.v2beta.OrgState state = 1;
   */
  state: OrgState;
};

/**
 * @generated from message zitadel.org.v2beta.OrgStateFilter
 */
export declare type OrgStateFilterJson = {
  /**
   * Current state of the organization.
   *
   * @generated from field: zitadel.org.v2beta.OrgState state = 1;
   */
  state?: OrgStateJson;
};

/**
 * Describes the message zitadel.org.v2beta.OrgStateFilter.
 * Use `create(OrgStateFilterSchema)` to create a new message.
 */
export declare const OrgStateFilterSchema: GenMessage<OrgStateFilter, {jsonType: OrgStateFilterJson}>;

/**
 * @generated from message zitadel.org.v2beta.OrgIDFilter
 */
export declare type OrgIDFilter = Message<"zitadel.org.v2beta.OrgIDFilter"> & {
  /**
   * The Organization id.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * @generated from message zitadel.org.v2beta.OrgIDFilter
 */
export declare type OrgIDFilterJson = {
  /**
   * The Organization id.
   *
   * @generated from field: string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.org.v2beta.OrgIDFilter.
 * Use `create(OrgIDFilterSchema)` to create a new message.
 */
export declare const OrgIDFilterSchema: GenMessage<OrgIDFilter, {jsonType: OrgIDFilterJson}>;

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.DomainSearchFilter
 */
export declare type DomainSearchFilter = Message<"zitadel.org.v2beta.DomainSearchFilter"> & {
  /**
   * @generated from oneof zitadel.org.v2beta.DomainSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.org.v2beta.DomainNameFilter domain_name_filter = 1;
     */
    value: DomainNameFilter;
    case: "domainNameFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.DomainSearchFilter
 */
export declare type DomainSearchFilterJson = {
  /**
   * @generated from field: zitadel.org.v2beta.DomainNameFilter domain_name_filter = 1;
   */
  domainNameFilter?: DomainNameFilterJson;
};

/**
 * Describes the message zitadel.org.v2beta.DomainSearchFilter.
 * Use `create(DomainSearchFilterSchema)` to create a new message.
 */
export declare const DomainSearchFilterSchema: GenMessage<DomainSearchFilter, {jsonType: DomainSearchFilterJson}>;

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.DomainNameFilter
 */
export declare type DomainNameFilter = Message<"zitadel.org.v2beta.DomainNameFilter"> & {
  /**
   * The domain.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.DomainNameFilter
 */
export declare type DomainNameFilterJson = {
  /**
   * The domain.
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * Defines which text equality method is used.
   *
   * @generated from field: zitadel.object.v2beta.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v2beta.DomainNameFilter.
 * Use `create(DomainNameFilterSchema)` to create a new message.
 */
export declare const DomainNameFilterSchema: GenMessage<DomainNameFilter, {jsonType: DomainNameFilterJson}>;

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.Domain
 */
export declare type Domain = Message<"zitadel.org.v2beta.Domain"> & {
  /**
   * The Organization id.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * The domain name.
   *
   * @generated from field: string domain_name = 2;
   */
  domainName: string;

  /**
   * Defines if the domain is verified.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified: boolean;

  /**
   * Defines if the domain is the primary domain.
   *
   * @generated from field: bool is_primary = 4;
   */
  isPrimary: boolean;

  /**
   * Defines the protocol the domain was validated with.
   *
   * @generated from field: zitadel.org.v2beta.DomainValidationType validation_type = 5;
   */
  validationType: DomainValidationType;
};

/**
 * from proto/zitadel/org.proto
 *
 * @generated from message zitadel.org.v2beta.Domain
 */
export declare type DomainJson = {
  /**
   * The Organization id.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId?: string;

  /**
   * The domain name.
   *
   * @generated from field: string domain_name = 2;
   */
  domainName?: string;

  /**
   * Defines if the domain is verified.
   *
   * @generated from field: bool is_verified = 3;
   */
  isVerified?: boolean;

  /**
   * Defines if the domain is the primary domain.
   *
   * @generated from field: bool is_primary = 4;
   */
  isPrimary?: boolean;

  /**
   * Defines the protocol the domain was validated with.
   *
   * @generated from field: zitadel.org.v2beta.DomainValidationType validation_type = 5;
   */
  validationType?: DomainValidationTypeJson;
};

/**
 * Describes the message zitadel.org.v2beta.Domain.
 * Use `create(DomainSchema)` to create a new message.
 */
export declare const DomainSchema: GenMessage<Domain, {jsonType: DomainJson}>;

/**
 * @generated from enum zitadel.org.v2beta.OrgState
 */
export enum OrgState {
  /**
   * @generated from enum value: ORG_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORG_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ORG_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ORG_STATE_REMOVED = 3;
   */
  REMOVED = 3,
}

/**
 * @generated from enum zitadel.org.v2beta.OrgState
 */
export declare type OrgStateJson = "ORG_STATE_UNSPECIFIED" | "ORG_STATE_ACTIVE" | "ORG_STATE_INACTIVE" | "ORG_STATE_REMOVED";

/**
 * Describes the enum zitadel.org.v2beta.OrgState.
 */
export declare const OrgStateSchema: GenEnum<OrgState, OrgStateJson>;

/**
 * @generated from enum zitadel.org.v2beta.OrgFieldName
 */
export enum OrgFieldName {
  /**
   * @generated from enum value: ORG_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORG_FIELD_NAME_NAME = 1;
   */
  NAME = 1,

  /**
   * @generated from enum value: ORG_FIELD_NAME_CREATION_DATE = 2;
   */
  CREATION_DATE = 2,
}

/**
 * @generated from enum zitadel.org.v2beta.OrgFieldName
 */
export declare type OrgFieldNameJson = "ORG_FIELD_NAME_UNSPECIFIED" | "ORG_FIELD_NAME_NAME" | "ORG_FIELD_NAME_CREATION_DATE";

/**
 * Describes the enum zitadel.org.v2beta.OrgFieldName.
 */
export declare const OrgFieldNameSchema: GenEnum<OrgFieldName, OrgFieldNameJson>;

/**
 * from proto/zitadel/org.proto
 *
 * @generated from enum zitadel.org.v2beta.DomainValidationType
 */
export enum DomainValidationType {
  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_HTTP = 1;
   */
  HTTP = 1,

  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_DNS = 2;
   */
  DNS = 2,
}

/**
 * from proto/zitadel/org.proto
 *
 * @generated from enum zitadel.org.v2beta.DomainValidationType
 */
export declare type DomainValidationTypeJson = "DOMAIN_VALIDATION_TYPE_UNSPECIFIED" | "DOMAIN_VALIDATION_TYPE_HTTP" | "DOMAIN_VALIDATION_TYPE_DNS";

/**
 * Describes the enum zitadel.org.v2beta.DomainValidationType.
 */
export declare const DomainValidationTypeSchema: GenEnum<DomainValidationType, DomainValidationTypeJson>;

