// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/org.proto (package zitadel.org.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson, TextQueryMethod, TextQueryMethodJson } from "./object_pb.js";

/**
 * Describes the file zitadel/org.proto.
 */
export declare const file_zitadel_org: GenFile;

/**
 * @generated from message zitadel.org.v1.Org
 */
export declare type Org = Message<"zitadel.org.v1.Org"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.org.v1.OrgState state = 3;
   */
  state: OrgState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string primary_domain = 5;
   */
  primaryDomain: string;
};

/**
 * @generated from message zitadel.org.v1.Org
 */
export declare type OrgJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: zitadel.org.v1.OrgState state = 3;
   */
  state?: OrgStateJson;

  /**
   * @generated from field: string name = 4;
   */
  name?: string;

  /**
   * @generated from field: string primary_domain = 5;
   */
  primaryDomain?: string;
};

/**
 * Describes the message zitadel.org.v1.Org.
 * Use `create(OrgSchema)` to create a new message.
 */
export declare const OrgSchema: GenMessage<Org, {jsonType: OrgJson}>;

/**
 * @generated from message zitadel.org.v1.Domain
 */
export declare type Domain = Message<"zitadel.org.v1.Domain"> & {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string domain_name = 3;
   */
  domainName: string;

  /**
   * @generated from field: bool is_verified = 4;
   */
  isVerified: boolean;

  /**
   * @generated from field: bool is_primary = 5;
   */
  isPrimary: boolean;

  /**
   * @generated from field: zitadel.org.v1.DomainValidationType validation_type = 6;
   */
  validationType: DomainValidationType;
};

/**
 * @generated from message zitadel.org.v1.Domain
 */
export declare type DomainJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string domain_name = 3;
   */
  domainName?: string;

  /**
   * @generated from field: bool is_verified = 4;
   */
  isVerified?: boolean;

  /**
   * @generated from field: bool is_primary = 5;
   */
  isPrimary?: boolean;

  /**
   * @generated from field: zitadel.org.v1.DomainValidationType validation_type = 6;
   */
  validationType?: DomainValidationTypeJson;
};

/**
 * Describes the message zitadel.org.v1.Domain.
 * Use `create(DomainSchema)` to create a new message.
 */
export declare const DomainSchema: GenMessage<Domain, {jsonType: DomainJson}>;

/**
 * @generated from message zitadel.org.v1.OrgQuery
 */
export declare type OrgQuery = Message<"zitadel.org.v1.OrgQuery"> & {
  /**
   * @generated from oneof zitadel.org.v1.OrgQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.org.v1.OrgNameQuery name_query = 1;
     */
    value: OrgNameQuery;
    case: "nameQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v1.OrgDomainQuery domain_query = 2;
     */
    value: OrgDomainQuery;
    case: "domainQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v1.OrgStateQuery state_query = 3;
     */
    value: OrgStateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.org.v1.OrgIDQuery id_query = 4;
     */
    value: OrgIDQuery;
    case: "idQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.org.v1.OrgQuery
 */
export declare type OrgQueryJson = {
  /**
   * @generated from field: zitadel.org.v1.OrgNameQuery name_query = 1;
   */
  nameQuery?: OrgNameQueryJson;

  /**
   * @generated from field: zitadel.org.v1.OrgDomainQuery domain_query = 2;
   */
  domainQuery?: OrgDomainQueryJson;

  /**
   * @generated from field: zitadel.org.v1.OrgStateQuery state_query = 3;
   */
  stateQuery?: OrgStateQueryJson;

  /**
   * @generated from field: zitadel.org.v1.OrgIDQuery id_query = 4;
   */
  idQuery?: OrgIDQueryJson;
};

/**
 * Describes the message zitadel.org.v1.OrgQuery.
 * Use `create(OrgQuerySchema)` to create a new message.
 */
export declare const OrgQuerySchema: GenMessage<OrgQuery, {jsonType: OrgQueryJson}>;

/**
 * @generated from message zitadel.org.v1.OrgNameQuery
 */
export declare type OrgNameQuery = Message<"zitadel.org.v1.OrgNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v1.OrgNameQuery
 */
export declare type OrgNameQueryJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v1.OrgNameQuery.
 * Use `create(OrgNameQuerySchema)` to create a new message.
 */
export declare const OrgNameQuerySchema: GenMessage<OrgNameQuery, {jsonType: OrgNameQueryJson}>;

/**
 * @generated from message zitadel.org.v1.OrgDomainQuery
 */
export declare type OrgDomainQuery = Message<"zitadel.org.v1.OrgDomainQuery"> & {
  /**
   * @generated from field: string domain = 1;
   */
  domain: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v1.OrgDomainQuery
 */
export declare type OrgDomainQueryJson = {
  /**
   * @generated from field: string domain = 1;
   */
  domain?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v1.OrgDomainQuery.
 * Use `create(OrgDomainQuerySchema)` to create a new message.
 */
export declare const OrgDomainQuerySchema: GenMessage<OrgDomainQuery, {jsonType: OrgDomainQueryJson}>;

/**
 * @generated from message zitadel.org.v1.OrgStateQuery
 */
export declare type OrgStateQuery = Message<"zitadel.org.v1.OrgStateQuery"> & {
  /**
   * @generated from field: zitadel.org.v1.OrgState state = 1;
   */
  state: OrgState;
};

/**
 * @generated from message zitadel.org.v1.OrgStateQuery
 */
export declare type OrgStateQueryJson = {
  /**
   * @generated from field: zitadel.org.v1.OrgState state = 1;
   */
  state?: OrgStateJson;
};

/**
 * Describes the message zitadel.org.v1.OrgStateQuery.
 * Use `create(OrgStateQuerySchema)` to create a new message.
 */
export declare const OrgStateQuerySchema: GenMessage<OrgStateQuery, {jsonType: OrgStateQueryJson}>;

/**
 * @generated from message zitadel.org.v1.OrgIDQuery
 */
export declare type OrgIDQuery = Message<"zitadel.org.v1.OrgIDQuery"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * @generated from message zitadel.org.v1.OrgIDQuery
 */
export declare type OrgIDQueryJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.org.v1.OrgIDQuery.
 * Use `create(OrgIDQuerySchema)` to create a new message.
 */
export declare const OrgIDQuerySchema: GenMessage<OrgIDQuery, {jsonType: OrgIDQueryJson}>;

/**
 * @generated from message zitadel.org.v1.DomainSearchQuery
 */
export declare type DomainSearchQuery = Message<"zitadel.org.v1.DomainSearchQuery"> & {
  /**
   * @generated from oneof zitadel.org.v1.DomainSearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.org.v1.DomainNameQuery domain_name_query = 1;
     */
    value: DomainNameQuery;
    case: "domainNameQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.org.v1.DomainSearchQuery
 */
export declare type DomainSearchQueryJson = {
  /**
   * @generated from field: zitadel.org.v1.DomainNameQuery domain_name_query = 1;
   */
  domainNameQuery?: DomainNameQueryJson;
};

/**
 * Describes the message zitadel.org.v1.DomainSearchQuery.
 * Use `create(DomainSearchQuerySchema)` to create a new message.
 */
export declare const DomainSearchQuerySchema: GenMessage<DomainSearchQuery, {jsonType: DomainSearchQueryJson}>;

/**
 * @generated from message zitadel.org.v1.DomainNameQuery
 */
export declare type DomainNameQuery = Message<"zitadel.org.v1.DomainNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.org.v1.DomainNameQuery
 */
export declare type DomainNameQueryJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.org.v1.DomainNameQuery.
 * Use `create(DomainNameQuerySchema)` to create a new message.
 */
export declare const DomainNameQuerySchema: GenMessage<DomainNameQuery, {jsonType: DomainNameQueryJson}>;

/**
 * @generated from enum zitadel.org.v1.OrgState
 */
export enum OrgState {
  /**
   * @generated from enum value: ORG_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORG_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: ORG_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: ORG_STATE_REMOVED = 3;
   */
  REMOVED = 3,
}

/**
 * @generated from enum zitadel.org.v1.OrgState
 */
export declare type OrgStateJson = "ORG_STATE_UNSPECIFIED" | "ORG_STATE_ACTIVE" | "ORG_STATE_INACTIVE" | "ORG_STATE_REMOVED";

/**
 * Describes the enum zitadel.org.v1.OrgState.
 */
export declare const OrgStateSchema: GenEnum<OrgState, OrgStateJson>;

/**
 * @generated from enum zitadel.org.v1.DomainValidationType
 */
export enum DomainValidationType {
  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_HTTP = 1;
   */
  HTTP = 1,

  /**
   * @generated from enum value: DOMAIN_VALIDATION_TYPE_DNS = 2;
   */
  DNS = 2,
}

/**
 * @generated from enum zitadel.org.v1.DomainValidationType
 */
export declare type DomainValidationTypeJson = "DOMAIN_VALIDATION_TYPE_UNSPECIFIED" | "DOMAIN_VALIDATION_TYPE_HTTP" | "DOMAIN_VALIDATION_TYPE_DNS";

/**
 * Describes the enum zitadel.org.v1.DomainValidationType.
 */
export declare const DomainValidationTypeSchema: GenEnum<DomainValidationType, DomainValidationTypeJson>;

/**
 * @generated from enum zitadel.org.v1.OrgFieldName
 */
export enum OrgFieldName {
  /**
   * @generated from enum value: ORG_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ORG_FIELD_NAME_NAME = 1;
   */
  NAME = 1,
}

/**
 * @generated from enum zitadel.org.v1.OrgFieldName
 */
export declare type OrgFieldNameJson = "ORG_FIELD_NAME_UNSPECIFIED" | "ORG_FIELD_NAME_NAME";

/**
 * Describes the enum zitadel.org.v1.OrgFieldName.
 */
export declare const OrgFieldNameSchema: GenEnum<OrgFieldName, OrgFieldNameJson>;

