// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/project/v2beta/project_service.proto (package zitadel.project.v2beta, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../validate/validate_pb.js";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb.js";
import { file_zitadel_project_v2beta_query } from "./query_pb.js";
import { file_zitadel_filter_v2beta_filter } from "../../filter/v2beta/filter_pb.js";

/**
 * Describes the file zitadel/project/v2beta/project_service.proto.
 */
export const file_zitadel_project_v2beta_project_service = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_struct, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_project_v2beta_query, file_google_protobuf_timestamp, file_zitadel_filter_v2beta_filter]);

/**
 * Describes the message zitadel.project.v2beta.CreateProjectRequest.
 * Use `create(CreateProjectRequestSchema)` to create a new message.
 */
export const CreateProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 0);

/**
 * Describes the message zitadel.project.v2beta.CreateProjectResponse.
 * Use `create(CreateProjectResponseSchema)` to create a new message.
 */
export const CreateProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 1);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectRequest.
 * Use `create(UpdateProjectRequestSchema)` to create a new message.
 */
export const UpdateProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 2);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectResponse.
 * Use `create(UpdateProjectResponseSchema)` to create a new message.
 */
export const UpdateProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 3);

/**
 * Describes the message zitadel.project.v2beta.DeleteProjectRequest.
 * Use `create(DeleteProjectRequestSchema)` to create a new message.
 */
export const DeleteProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 4);

/**
 * Describes the message zitadel.project.v2beta.DeleteProjectResponse.
 * Use `create(DeleteProjectResponseSchema)` to create a new message.
 */
export const DeleteProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 5);

/**
 * Describes the message zitadel.project.v2beta.GetProjectRequest.
 * Use `create(GetProjectRequestSchema)` to create a new message.
 */
export const GetProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 6);

/**
 * Describes the message zitadel.project.v2beta.GetProjectResponse.
 * Use `create(GetProjectResponseSchema)` to create a new message.
 */
export const GetProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 7);

/**
 * Describes the message zitadel.project.v2beta.ListProjectsRequest.
 * Use `create(ListProjectsRequestSchema)` to create a new message.
 */
export const ListProjectsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 8);

/**
 * Describes the message zitadel.project.v2beta.ListProjectsResponse.
 * Use `create(ListProjectsResponseSchema)` to create a new message.
 */
export const ListProjectsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 9);

/**
 * Describes the message zitadel.project.v2beta.DeactivateProjectRequest.
 * Use `create(DeactivateProjectRequestSchema)` to create a new message.
 */
export const DeactivateProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 10);

/**
 * Describes the message zitadel.project.v2beta.DeactivateProjectResponse.
 * Use `create(DeactivateProjectResponseSchema)` to create a new message.
 */
export const DeactivateProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 11);

/**
 * Describes the message zitadel.project.v2beta.ActivateProjectRequest.
 * Use `create(ActivateProjectRequestSchema)` to create a new message.
 */
export const ActivateProjectRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 12);

/**
 * Describes the message zitadel.project.v2beta.ActivateProjectResponse.
 * Use `create(ActivateProjectResponseSchema)` to create a new message.
 */
export const ActivateProjectResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 13);

/**
 * Describes the message zitadel.project.v2beta.AddProjectRoleRequest.
 * Use `create(AddProjectRoleRequestSchema)` to create a new message.
 */
export const AddProjectRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 14);

/**
 * Describes the message zitadel.project.v2beta.AddProjectRoleResponse.
 * Use `create(AddProjectRoleResponseSchema)` to create a new message.
 */
export const AddProjectRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 15);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectRoleRequest.
 * Use `create(UpdateProjectRoleRequestSchema)` to create a new message.
 */
export const UpdateProjectRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 16);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectRoleResponse.
 * Use `create(UpdateProjectRoleResponseSchema)` to create a new message.
 */
export const UpdateProjectRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 17);

/**
 * Describes the message zitadel.project.v2beta.RemoveProjectRoleRequest.
 * Use `create(RemoveProjectRoleRequestSchema)` to create a new message.
 */
export const RemoveProjectRoleRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 18);

/**
 * Describes the message zitadel.project.v2beta.RemoveProjectRoleResponse.
 * Use `create(RemoveProjectRoleResponseSchema)` to create a new message.
 */
export const RemoveProjectRoleResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 19);

/**
 * Describes the message zitadel.project.v2beta.ListProjectRolesRequest.
 * Use `create(ListProjectRolesRequestSchema)` to create a new message.
 */
export const ListProjectRolesRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 20);

/**
 * Describes the message zitadel.project.v2beta.ListProjectRolesResponse.
 * Use `create(ListProjectRolesResponseSchema)` to create a new message.
 */
export const ListProjectRolesResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 21);

/**
 * Describes the message zitadel.project.v2beta.CreateProjectGrantRequest.
 * Use `create(CreateProjectGrantRequestSchema)` to create a new message.
 */
export const CreateProjectGrantRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 22);

/**
 * Describes the message zitadel.project.v2beta.CreateProjectGrantResponse.
 * Use `create(CreateProjectGrantResponseSchema)` to create a new message.
 */
export const CreateProjectGrantResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 23);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectGrantRequest.
 * Use `create(UpdateProjectGrantRequestSchema)` to create a new message.
 */
export const UpdateProjectGrantRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 24);

/**
 * Describes the message zitadel.project.v2beta.UpdateProjectGrantResponse.
 * Use `create(UpdateProjectGrantResponseSchema)` to create a new message.
 */
export const UpdateProjectGrantResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 25);

/**
 * Describes the message zitadel.project.v2beta.DeleteProjectGrantRequest.
 * Use `create(DeleteProjectGrantRequestSchema)` to create a new message.
 */
export const DeleteProjectGrantRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 26);

/**
 * Describes the message zitadel.project.v2beta.DeleteProjectGrantResponse.
 * Use `create(DeleteProjectGrantResponseSchema)` to create a new message.
 */
export const DeleteProjectGrantResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 27);

/**
 * Describes the message zitadel.project.v2beta.DeactivateProjectGrantRequest.
 * Use `create(DeactivateProjectGrantRequestSchema)` to create a new message.
 */
export const DeactivateProjectGrantRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 28);

/**
 * Describes the message zitadel.project.v2beta.DeactivateProjectGrantResponse.
 * Use `create(DeactivateProjectGrantResponseSchema)` to create a new message.
 */
export const DeactivateProjectGrantResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 29);

/**
 * Describes the message zitadel.project.v2beta.ActivateProjectGrantRequest.
 * Use `create(ActivateProjectGrantRequestSchema)` to create a new message.
 */
export const ActivateProjectGrantRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 30);

/**
 * Describes the message zitadel.project.v2beta.ActivateProjectGrantResponse.
 * Use `create(ActivateProjectGrantResponseSchema)` to create a new message.
 */
export const ActivateProjectGrantResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 31);

/**
 * Describes the message zitadel.project.v2beta.ListProjectGrantsRequest.
 * Use `create(ListProjectGrantsRequestSchema)` to create a new message.
 */
export const ListProjectGrantsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 32);

/**
 * Describes the message zitadel.project.v2beta.ListProjectGrantsResponse.
 * Use `create(ListProjectGrantsResponseSchema)` to create a new message.
 */
export const ListProjectGrantsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_project_v2beta_project_service, 33);

/**
 * Service to manage projects.
 *
 * @generated from service zitadel.project.v2beta.ProjectService
 */
export const ProjectService = /*@__PURE__*/
  serviceDesc(file_zitadel_project_v2beta_project_service, 0);

