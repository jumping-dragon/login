// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/project/v2beta/query.proto (package zitadel.project.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { IDFilter, IDFilterJson, InIDsFilter, InIDsFilterJson, TextFilterMethod, TextFilterMethodJson } from "../../filter/v2beta/filter_pb.js";

/**
 * Describes the file zitadel/project/v2beta/query.proto.
 */
export declare const file_zitadel_project_v2beta_query: GenFile;

/**
 * @generated from message zitadel.project.v2beta.ProjectGrant
 */
export declare type ProjectGrant = Message<"zitadel.project.v2beta.ProjectGrant"> & {
  /**
   * The unique identifier of the organization which granted the project to the granted_organization_id.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * The timestamp of the granted project creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: Timestamp;

  /**
   * The timestamp of the last change to the granted project (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: Timestamp;

  /**
   * The ID of the organization the project is granted to.
   *
   * @generated from field: string granted_organization_id = 5;
   */
  grantedOrganizationId: string;

  /**
   * The name of the organization the project is granted to.
   *
   * @generated from field: string granted_organization_name = 6;
   */
  grantedOrganizationName: string;

  /**
   * The roles of the granted project.
   *
   * @generated from field: repeated string granted_role_keys = 7;
   */
  grantedRoleKeys: string[];

  /**
   * The ID of the granted project.
   *
   * @generated from field: string project_id = 8;
   */
  projectId: string;

  /**
   * The name of the granted project.
   *
   * @generated from field: string project_name = 9;
   */
  projectName: string;

  /**
   * Describes the current state of the granted project.
   *
   * @generated from field: zitadel.project.v2beta.ProjectGrantState state = 10;
   */
  state: ProjectGrantState;
};

/**
 * @generated from message zitadel.project.v2beta.ProjectGrant
 */
export declare type ProjectGrantJson = {
  /**
   * The unique identifier of the organization which granted the project to the granted_organization_id.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId?: string;

  /**
   * The timestamp of the granted project creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: TimestampJson;

  /**
   * The timestamp of the last change to the granted project (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: TimestampJson;

  /**
   * The ID of the organization the project is granted to.
   *
   * @generated from field: string granted_organization_id = 5;
   */
  grantedOrganizationId?: string;

  /**
   * The name of the organization the project is granted to.
   *
   * @generated from field: string granted_organization_name = 6;
   */
  grantedOrganizationName?: string;

  /**
   * The roles of the granted project.
   *
   * @generated from field: repeated string granted_role_keys = 7;
   */
  grantedRoleKeys?: string[];

  /**
   * The ID of the granted project.
   *
   * @generated from field: string project_id = 8;
   */
  projectId?: string;

  /**
   * The name of the granted project.
   *
   * @generated from field: string project_name = 9;
   */
  projectName?: string;

  /**
   * Describes the current state of the granted project.
   *
   * @generated from field: zitadel.project.v2beta.ProjectGrantState state = 10;
   */
  state?: ProjectGrantStateJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectGrant.
 * Use `create(ProjectGrantSchema)` to create a new message.
 */
export declare const ProjectGrantSchema: GenMessage<ProjectGrant, {jsonType: ProjectGrantJson}>;

/**
 * @generated from message zitadel.project.v2beta.Project
 */
export declare type Project = Message<"zitadel.project.v2beta.Project"> & {
  /**
   * The unique identifier of the project.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The unique identifier of the organization the project belongs to.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * The timestamp of the project creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: Timestamp;

  /**
   * The timestamp of the last change to the project (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: Timestamp;

  /**
   * The name of the project.
   *
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * Describes the current state of the project.
   *
   * @generated from field: zitadel.project.v2beta.ProjectState state = 6;
   */
  state: ProjectState;

  /**
   * Describes if the roles of the user should be added to the token.
   *
   * @generated from field: bool project_role_assertion = 7;
   */
  projectRoleAssertion: boolean;

  /**
   * When enabled ZITADEL will check if a user has an authorization to use this project assigned when login into an application of this project.
   *
   * @generated from field: bool authorization_required = 8;
   */
  authorizationRequired: boolean;

  /**
   * When enabled ZITADEL will check if the organization of the user, that is trying to log in, has access to this project (either owns the project or is granted).
   *
   * @generated from field: bool project_access_required = 9;
   */
  projectAccessRequired: boolean;

  /**
   * Defines from where the private labeling should be triggered.
   *
   * @generated from field: zitadel.project.v2beta.PrivateLabelingSetting private_labeling_setting = 10;
   */
  privateLabelingSetting: PrivateLabelingSetting;

  /**
   * The ID of the organization the project is granted to.
   *
   * @generated from field: optional string granted_organization_id = 12;
   */
  grantedOrganizationId?: string;

  /**
   * The name of the organization the project is granted to.
   *
   * @generated from field: optional string granted_organization_name = 13;
   */
  grantedOrganizationName?: string;

  /**
   * Describes the current state of the granted project.
   *
   * @generated from field: zitadel.project.v2beta.GrantedProjectState granted_state = 14;
   */
  grantedState: GrantedProjectState;
};

/**
 * @generated from message zitadel.project.v2beta.Project
 */
export declare type ProjectJson = {
  /**
   * The unique identifier of the project.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The unique identifier of the organization the project belongs to.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId?: string;

  /**
   * The timestamp of the project creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: TimestampJson;

  /**
   * The timestamp of the last change to the project (e.g. creation, activation, deactivation).
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: TimestampJson;

  /**
   * The name of the project.
   *
   * @generated from field: string name = 5;
   */
  name?: string;

  /**
   * Describes the current state of the project.
   *
   * @generated from field: zitadel.project.v2beta.ProjectState state = 6;
   */
  state?: ProjectStateJson;

  /**
   * Describes if the roles of the user should be added to the token.
   *
   * @generated from field: bool project_role_assertion = 7;
   */
  projectRoleAssertion?: boolean;

  /**
   * When enabled ZITADEL will check if a user has an authorization to use this project assigned when login into an application of this project.
   *
   * @generated from field: bool authorization_required = 8;
   */
  authorizationRequired?: boolean;

  /**
   * When enabled ZITADEL will check if the organization of the user, that is trying to log in, has access to this project (either owns the project or is granted).
   *
   * @generated from field: bool project_access_required = 9;
   */
  projectAccessRequired?: boolean;

  /**
   * Defines from where the private labeling should be triggered.
   *
   * @generated from field: zitadel.project.v2beta.PrivateLabelingSetting private_labeling_setting = 10;
   */
  privateLabelingSetting?: PrivateLabelingSettingJson;

  /**
   * The ID of the organization the project is granted to.
   *
   * @generated from field: optional string granted_organization_id = 12;
   */
  grantedOrganizationId?: string;

  /**
   * The name of the organization the project is granted to.
   *
   * @generated from field: optional string granted_organization_name = 13;
   */
  grantedOrganizationName?: string;

  /**
   * Describes the current state of the granted project.
   *
   * @generated from field: zitadel.project.v2beta.GrantedProjectState granted_state = 14;
   */
  grantedState?: GrantedProjectStateJson;
};

/**
 * Describes the message zitadel.project.v2beta.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export declare const ProjectSchema: GenMessage<Project, {jsonType: ProjectJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectSearchFilter
 */
export declare type ProjectSearchFilter = Message<"zitadel.project.v2beta.ProjectSearchFilter"> & {
  /**
   * @generated from oneof zitadel.project.v2beta.ProjectSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.project.v2beta.ProjectNameFilter project_name_filter = 1;
     */
    value: ProjectNameFilter;
    case: "projectNameFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.InIDsFilter in_project_ids_filter = 2;
     */
    value: InIDsFilter;
    case: "inProjectIdsFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.IDFilter project_resource_owner_filter = 3;
     */
    value: IDFilter;
    case: "projectResourceOwnerFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.IDFilter project_grant_resource_owner_filter = 4;
     */
    value: IDFilter;
    case: "projectGrantResourceOwnerFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.IDFilter project_organization_id_filter = 5;
     */
    value: IDFilter;
    case: "projectOrganizationIdFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v2beta.ProjectSearchFilter
 */
export declare type ProjectSearchFilterJson = {
  /**
   * @generated from field: zitadel.project.v2beta.ProjectNameFilter project_name_filter = 1;
   */
  projectNameFilter?: ProjectNameFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.InIDsFilter in_project_ids_filter = 2;
   */
  inProjectIdsFilter?: InIDsFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.IDFilter project_resource_owner_filter = 3;
   */
  projectResourceOwnerFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.IDFilter project_grant_resource_owner_filter = 4;
   */
  projectGrantResourceOwnerFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.IDFilter project_organization_id_filter = 5;
   */
  projectOrganizationIdFilter?: IDFilterJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectSearchFilter.
 * Use `create(ProjectSearchFilterSchema)` to create a new message.
 */
export declare const ProjectSearchFilterSchema: GenMessage<ProjectSearchFilter, {jsonType: ProjectSearchFilterJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectNameFilter
 */
export declare type ProjectNameFilter = Message<"zitadel.project.v2beta.ProjectNameFilter"> & {
  /**
   * Defines the name of the project to query for.
   *
   * @generated from field: string project_name = 1;
   */
  projectName: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * @generated from message zitadel.project.v2beta.ProjectNameFilter
 */
export declare type ProjectNameFilterJson = {
  /**
   * Defines the name of the project to query for.
   *
   * @generated from field: string project_name = 1;
   */
  projectName?: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method?: TextFilterMethodJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectNameFilter.
 * Use `create(ProjectNameFilterSchema)` to create a new message.
 */
export declare const ProjectNameFilterSchema: GenMessage<ProjectNameFilter, {jsonType: ProjectNameFilterJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectGrantSearchFilter
 */
export declare type ProjectGrantSearchFilter = Message<"zitadel.project.v2beta.ProjectGrantSearchFilter"> & {
  /**
   * @generated from oneof zitadel.project.v2beta.ProjectGrantSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.project.v2beta.ProjectNameFilter project_name_filter = 1;
     */
    value: ProjectNameFilter;
    case: "projectNameFilter";
  } | {
    /**
     * @generated from field: zitadel.project.v2beta.ProjectRoleKeyFilter role_key_filter = 2;
     */
    value: ProjectRoleKeyFilter;
    case: "roleKeyFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.InIDsFilter in_project_ids_filter = 3;
     */
    value: InIDsFilter;
    case: "inProjectIdsFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.IDFilter project_resource_owner_filter = 4;
     */
    value: IDFilter;
    case: "projectResourceOwnerFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2beta.IDFilter project_grant_resource_owner_filter = 5;
     */
    value: IDFilter;
    case: "projectGrantResourceOwnerFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v2beta.ProjectGrantSearchFilter
 */
export declare type ProjectGrantSearchFilterJson = {
  /**
   * @generated from field: zitadel.project.v2beta.ProjectNameFilter project_name_filter = 1;
   */
  projectNameFilter?: ProjectNameFilterJson;

  /**
   * @generated from field: zitadel.project.v2beta.ProjectRoleKeyFilter role_key_filter = 2;
   */
  roleKeyFilter?: ProjectRoleKeyFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.InIDsFilter in_project_ids_filter = 3;
   */
  inProjectIdsFilter?: InIDsFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.IDFilter project_resource_owner_filter = 4;
   */
  projectResourceOwnerFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2beta.IDFilter project_grant_resource_owner_filter = 5;
   */
  projectGrantResourceOwnerFilter?: IDFilterJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectGrantSearchFilter.
 * Use `create(ProjectGrantSearchFilterSchema)` to create a new message.
 */
export declare const ProjectGrantSearchFilterSchema: GenMessage<ProjectGrantSearchFilter, {jsonType: ProjectGrantSearchFilterJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectRole
 */
export declare type ProjectRole = Message<"zitadel.project.v2beta.ProjectRole"> & {
  /**
   * ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * Key of the project role.
   *
   * @generated from field: string key = 2;
   */
  key: string;

  /**
   * The timestamp of the project role creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: Timestamp;

  /**
   * The timestamp of the last change to the project role.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: Timestamp;

  /**
   * Display name of the project role.
   *
   * @generated from field: string display_name = 5;
   */
  displayName: string;

  /**
   * Group of the project role.
   *
   * @generated from field: string group = 6;
   */
  group: string;
};

/**
 * @generated from message zitadel.project.v2beta.ProjectRole
 */
export declare type ProjectRoleJson = {
  /**
   * ID of the project.
   *
   * @generated from field: string project_id = 1;
   */
  projectId?: string;

  /**
   * Key of the project role.
   *
   * @generated from field: string key = 2;
   */
  key?: string;

  /**
   * The timestamp of the project role creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 3;
   */
  creationDate?: TimestampJson;

  /**
   * The timestamp of the last change to the project role.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 4;
   */
  changeDate?: TimestampJson;

  /**
   * Display name of the project role.
   *
   * @generated from field: string display_name = 5;
   */
  displayName?: string;

  /**
   * Group of the project role.
   *
   * @generated from field: string group = 6;
   */
  group?: string;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectRole.
 * Use `create(ProjectRoleSchema)` to create a new message.
 */
export declare const ProjectRoleSchema: GenMessage<ProjectRole, {jsonType: ProjectRoleJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleSearchFilter
 */
export declare type ProjectRoleSearchFilter = Message<"zitadel.project.v2beta.ProjectRoleSearchFilter"> & {
  /**
   * @generated from oneof zitadel.project.v2beta.ProjectRoleSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.project.v2beta.ProjectRoleKeyFilter role_key_filter = 1;
     */
    value: ProjectRoleKeyFilter;
    case: "roleKeyFilter";
  } | {
    /**
     * @generated from field: zitadel.project.v2beta.ProjectRoleDisplayNameFilter display_name_filter = 2;
     */
    value: ProjectRoleDisplayNameFilter;
    case: "displayNameFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleSearchFilter
 */
export declare type ProjectRoleSearchFilterJson = {
  /**
   * @generated from field: zitadel.project.v2beta.ProjectRoleKeyFilter role_key_filter = 1;
   */
  roleKeyFilter?: ProjectRoleKeyFilterJson;

  /**
   * @generated from field: zitadel.project.v2beta.ProjectRoleDisplayNameFilter display_name_filter = 2;
   */
  displayNameFilter?: ProjectRoleDisplayNameFilterJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectRoleSearchFilter.
 * Use `create(ProjectRoleSearchFilterSchema)` to create a new message.
 */
export declare const ProjectRoleSearchFilterSchema: GenMessage<ProjectRoleSearchFilter, {jsonType: ProjectRoleSearchFilterJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleKeyFilter
 */
export declare type ProjectRoleKeyFilter = Message<"zitadel.project.v2beta.ProjectRoleKeyFilter"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleKeyFilter
 */
export declare type ProjectRoleKeyFilterJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method?: TextFilterMethodJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectRoleKeyFilter.
 * Use `create(ProjectRoleKeyFilterSchema)` to create a new message.
 */
export declare const ProjectRoleKeyFilterSchema: GenMessage<ProjectRoleKeyFilter, {jsonType: ProjectRoleKeyFilterJson}>;

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleDisplayNameFilter
 */
export declare type ProjectRoleDisplayNameFilter = Message<"zitadel.project.v2beta.ProjectRoleDisplayNameFilter"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method: TextFilterMethod;
};

/**
 * @generated from message zitadel.project.v2beta.ProjectRoleDisplayNameFilter
 */
export declare type ProjectRoleDisplayNameFilterJson = {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName?: string;

  /**
   * Defines which text comparison method used for the name query.
   *
   * @generated from field: zitadel.filter.v2beta.TextFilterMethod method = 2;
   */
  method?: TextFilterMethodJson;
};

/**
 * Describes the message zitadel.project.v2beta.ProjectRoleDisplayNameFilter.
 * Use `create(ProjectRoleDisplayNameFilterSchema)` to create a new message.
 */
export declare const ProjectRoleDisplayNameFilterSchema: GenMessage<ProjectRoleDisplayNameFilter, {jsonType: ProjectRoleDisplayNameFilterJson}>;

/**
 * @generated from enum zitadel.project.v2beta.ProjectGrantState
 */
export enum ProjectGrantState {
  /**
   * @generated from enum value: PROJECT_GRANT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_GRANT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: PROJECT_GRANT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.project.v2beta.ProjectGrantState
 */
export declare type ProjectGrantStateJson = "PROJECT_GRANT_STATE_UNSPECIFIED" | "PROJECT_GRANT_STATE_ACTIVE" | "PROJECT_GRANT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.project.v2beta.ProjectGrantState.
 */
export declare const ProjectGrantStateSchema: GenEnum<ProjectGrantState, ProjectGrantStateJson>;

/**
 * @generated from enum zitadel.project.v2beta.ProjectState
 */
export enum ProjectState {
  /**
   * @generated from enum value: PROJECT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: PROJECT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.project.v2beta.ProjectState
 */
export declare type ProjectStateJson = "PROJECT_STATE_UNSPECIFIED" | "PROJECT_STATE_ACTIVE" | "PROJECT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.project.v2beta.ProjectState.
 */
export declare const ProjectStateSchema: GenEnum<ProjectState, ProjectStateJson>;

/**
 * @generated from enum zitadel.project.v2beta.GrantedProjectState
 */
export enum GrantedProjectState {
  /**
   * @generated from enum value: GRANTED_PROJECT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GRANTED_PROJECT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: GRANTED_PROJECT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.project.v2beta.GrantedProjectState
 */
export declare type GrantedProjectStateJson = "GRANTED_PROJECT_STATE_UNSPECIFIED" | "GRANTED_PROJECT_STATE_ACTIVE" | "GRANTED_PROJECT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.project.v2beta.GrantedProjectState.
 */
export declare const GrantedProjectStateSchema: GenEnum<GrantedProjectState, GrantedProjectStateJson>;

/**
 * @generated from enum zitadel.project.v2beta.PrivateLabelingSetting
 */
export enum PrivateLabelingSetting {
  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY = 1;
   */
  ENFORCE_PROJECT_RESOURCE_OWNER_POLICY = 1,

  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY = 2;
   */
  ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY = 2,
}

/**
 * @generated from enum zitadel.project.v2beta.PrivateLabelingSetting
 */
export declare type PrivateLabelingSettingJson = "PRIVATE_LABELING_SETTING_UNSPECIFIED" | "PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY" | "PRIVATE_LABELING_SETTING_ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY";

/**
 * Describes the enum zitadel.project.v2beta.PrivateLabelingSetting.
 */
export declare const PrivateLabelingSettingSchema: GenEnum<PrivateLabelingSetting, PrivateLabelingSettingJson>;

/**
 * @generated from enum zitadel.project.v2beta.ProjectFieldName
 */
export enum ProjectFieldName {
  /**
   * @generated from enum value: PROJECT_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_FIELD_NAME_ID = 1;
   */
  ID = 1,

  /**
   * @generated from enum value: PROJECT_FIELD_NAME_CREATION_DATE = 2;
   */
  CREATION_DATE = 2,

  /**
   * @generated from enum value: PROJECT_FIELD_NAME_CHANGE_DATE = 3;
   */
  CHANGE_DATE = 3,

  /**
   * @generated from enum value: PROJECT_FIELD_NAME_NAME = 4;
   */
  NAME = 4,
}

/**
 * @generated from enum zitadel.project.v2beta.ProjectFieldName
 */
export declare type ProjectFieldNameJson = "PROJECT_FIELD_NAME_UNSPECIFIED" | "PROJECT_FIELD_NAME_ID" | "PROJECT_FIELD_NAME_CREATION_DATE" | "PROJECT_FIELD_NAME_CHANGE_DATE" | "PROJECT_FIELD_NAME_NAME";

/**
 * Describes the enum zitadel.project.v2beta.ProjectFieldName.
 */
export declare const ProjectFieldNameSchema: GenEnum<ProjectFieldName, ProjectFieldNameJson>;

/**
 * @generated from enum zitadel.project.v2beta.ProjectGrantFieldName
 */
export enum ProjectGrantFieldName {
  /**
   * @generated from enum value: PROJECT_GRANT_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_GRANT_FIELD_NAME_PROJECT_ID = 1;
   */
  PROJECT_ID = 1,

  /**
   * @generated from enum value: PROJECT_GRANT_FIELD_NAME_CREATION_DATE = 2;
   */
  CREATION_DATE = 2,

  /**
   * @generated from enum value: PROJECT_GRANT_FIELD_NAME_CHANGE_DATE = 3;
   */
  CHANGE_DATE = 3,
}

/**
 * @generated from enum zitadel.project.v2beta.ProjectGrantFieldName
 */
export declare type ProjectGrantFieldNameJson = "PROJECT_GRANT_FIELD_NAME_UNSPECIFIED" | "PROJECT_GRANT_FIELD_NAME_PROJECT_ID" | "PROJECT_GRANT_FIELD_NAME_CREATION_DATE" | "PROJECT_GRANT_FIELD_NAME_CHANGE_DATE";

/**
 * Describes the enum zitadel.project.v2beta.ProjectGrantFieldName.
 */
export declare const ProjectGrantFieldNameSchema: GenEnum<ProjectGrantFieldName, ProjectGrantFieldNameJson>;

/**
 * @generated from enum zitadel.project.v2beta.ProjectRoleFieldName
 */
export enum ProjectRoleFieldName {
  /**
   * @generated from enum value: PROJECT_ROLE_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_ROLE_FIELD_NAME_KEY = 1;
   */
  KEY = 1,

  /**
   * @generated from enum value: PROJECT_ROLE_FIELD_NAME_CREATION_DATE = 2;
   */
  CREATION_DATE = 2,

  /**
   * @generated from enum value: PROJECT_ROLE_FIELD_NAME_CHANGE_DATE = 3;
   */
  CHANGE_DATE = 3,
}

/**
 * @generated from enum zitadel.project.v2beta.ProjectRoleFieldName
 */
export declare type ProjectRoleFieldNameJson = "PROJECT_ROLE_FIELD_NAME_UNSPECIFIED" | "PROJECT_ROLE_FIELD_NAME_KEY" | "PROJECT_ROLE_FIELD_NAME_CREATION_DATE" | "PROJECT_ROLE_FIELD_NAME_CHANGE_DATE";

/**
 * Describes the enum zitadel.project.v2beta.ProjectRoleFieldName.
 */
export declare const ProjectRoleFieldNameSchema: GenEnum<ProjectRoleFieldName, ProjectRoleFieldNameJson>;

