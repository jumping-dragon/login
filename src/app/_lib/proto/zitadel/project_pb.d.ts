// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/project.proto (package zitadel.project.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson, TextQueryMethod, TextQueryMethodJson } from "./object_pb.js";

/**
 * Describes the file zitadel/project.proto.
 */
export declare const file_zitadel_project: GenFile;

/**
 * @generated from message zitadel.project.v1.Project
 */
export declare type Project = Message<"zitadel.project.v1.Project"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: zitadel.project.v1.ProjectState state = 4;
   */
  state: ProjectState;

  /**
   * describes if the roles of the user should be added to the token
   *
   * @generated from field: bool project_role_assertion = 5;
   */
  projectRoleAssertion: boolean;

  /**
   * ZITADEL checks if the user has at least one on this project
   *
   * @generated from field: bool project_role_check = 6;
   */
  projectRoleCheck: boolean;

  /**
   * ZITADEL checks if the org of the user has permission for this project
   *
   * @generated from field: bool has_project_check = 7;
   */
  hasProjectCheck: boolean;

  /**
   * Defines from where the private labeling should be triggered
   *
   * @generated from field: zitadel.project.v1.PrivateLabelingSetting private_labeling_setting = 8;
   */
  privateLabelingSetting: PrivateLabelingSetting;
};

/**
 * @generated from message zitadel.project.v1.Project
 */
export declare type ProjectJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string name = 3;
   */
  name?: string;

  /**
   * @generated from field: zitadel.project.v1.ProjectState state = 4;
   */
  state?: ProjectStateJson;

  /**
   * describes if the roles of the user should be added to the token
   *
   * @generated from field: bool project_role_assertion = 5;
   */
  projectRoleAssertion?: boolean;

  /**
   * ZITADEL checks if the user has at least one on this project
   *
   * @generated from field: bool project_role_check = 6;
   */
  projectRoleCheck?: boolean;

  /**
   * ZITADEL checks if the org of the user has permission for this project
   *
   * @generated from field: bool has_project_check = 7;
   */
  hasProjectCheck?: boolean;

  /**
   * Defines from where the private labeling should be triggered
   *
   * @generated from field: zitadel.project.v1.PrivateLabelingSetting private_labeling_setting = 8;
   */
  privateLabelingSetting?: PrivateLabelingSettingJson;
};

/**
 * Describes the message zitadel.project.v1.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export declare const ProjectSchema: GenMessage<Project, {jsonType: ProjectJson}>;

/**
 * @generated from message zitadel.project.v1.GrantedProject
 */
export declare type GrantedProject = Message<"zitadel.project.v1.GrantedProject"> & {
  /**
   * @generated from field: string grant_id = 1;
   */
  grantId: string;

  /**
   * @generated from field: string granted_org_id = 2;
   */
  grantedOrgId: string;

  /**
   * @generated from field: string granted_org_name = 3;
   */
  grantedOrgName: string;

  /**
   * @generated from field: repeated string granted_role_keys = 4;
   */
  grantedRoleKeys: string[];

  /**
   * @generated from field: zitadel.project.v1.ProjectGrantState state = 5;
   */
  state: ProjectGrantState;

  /**
   * @generated from field: string project_id = 6;
   */
  projectId: string;

  /**
   * @generated from field: string project_name = 7;
   */
  projectName: string;

  /**
   * @generated from field: string project_owner_id = 8;
   */
  projectOwnerId: string;

  /**
   * @generated from field: string project_owner_name = 9;
   */
  projectOwnerName: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 10;
   */
  details?: ObjectDetails;
};

/**
 * @generated from message zitadel.project.v1.GrantedProject
 */
export declare type GrantedProjectJson = {
  /**
   * @generated from field: string grant_id = 1;
   */
  grantId?: string;

  /**
   * @generated from field: string granted_org_id = 2;
   */
  grantedOrgId?: string;

  /**
   * @generated from field: string granted_org_name = 3;
   */
  grantedOrgName?: string;

  /**
   * @generated from field: repeated string granted_role_keys = 4;
   */
  grantedRoleKeys?: string[];

  /**
   * @generated from field: zitadel.project.v1.ProjectGrantState state = 5;
   */
  state?: ProjectGrantStateJson;

  /**
   * @generated from field: string project_id = 6;
   */
  projectId?: string;

  /**
   * @generated from field: string project_name = 7;
   */
  projectName?: string;

  /**
   * @generated from field: string project_owner_id = 8;
   */
  projectOwnerId?: string;

  /**
   * @generated from field: string project_owner_name = 9;
   */
  projectOwnerName?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 10;
   */
  details?: ObjectDetailsJson;
};

/**
 * Describes the message zitadel.project.v1.GrantedProject.
 * Use `create(GrantedProjectSchema)` to create a new message.
 */
export declare const GrantedProjectSchema: GenMessage<GrantedProject, {jsonType: GrantedProjectJson}>;

/**
 * @generated from message zitadel.project.v1.ProjectQuery
 */
export declare type ProjectQuery = Message<"zitadel.project.v1.ProjectQuery"> & {
  /**
   * @generated from oneof zitadel.project.v1.ProjectQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.project.v1.ProjectNameQuery name_query = 1;
     */
    value: ProjectNameQuery;
    case: "nameQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.ProjectResourceOwnerQuery project_resource_owner_query = 2;
     */
    value: ProjectResourceOwnerQuery;
    case: "projectResourceOwnerQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v1.ProjectQuery
 */
export declare type ProjectQueryJson = {
  /**
   * @generated from field: zitadel.project.v1.ProjectNameQuery name_query = 1;
   */
  nameQuery?: ProjectNameQueryJson;

  /**
   * @generated from field: zitadel.project.v1.ProjectResourceOwnerQuery project_resource_owner_query = 2;
   */
  projectResourceOwnerQuery?: ProjectResourceOwnerQueryJson;
};

/**
 * Describes the message zitadel.project.v1.ProjectQuery.
 * Use `create(ProjectQuerySchema)` to create a new message.
 */
export declare const ProjectQuerySchema: GenMessage<ProjectQuery, {jsonType: ProjectQueryJson}>;

/**
 * @generated from message zitadel.project.v1.ProjectNameQuery
 */
export declare type ProjectNameQuery = Message<"zitadel.project.v1.ProjectNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.project.v1.ProjectNameQuery
 */
export declare type ProjectNameQueryJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.project.v1.ProjectNameQuery.
 * Use `create(ProjectNameQuerySchema)` to create a new message.
 */
export declare const ProjectNameQuerySchema: GenMessage<ProjectNameQuery, {jsonType: ProjectNameQueryJson}>;

/**
 * @generated from message zitadel.project.v1.ProjectResourceOwnerQuery
 */
export declare type ProjectResourceOwnerQuery = Message<"zitadel.project.v1.ProjectResourceOwnerQuery"> & {
  /**
   * @generated from field: string resource_owner = 1;
   */
  resourceOwner: string;
};

/**
 * @generated from message zitadel.project.v1.ProjectResourceOwnerQuery
 */
export declare type ProjectResourceOwnerQueryJson = {
  /**
   * @generated from field: string resource_owner = 1;
   */
  resourceOwner?: string;
};

/**
 * Describes the message zitadel.project.v1.ProjectResourceOwnerQuery.
 * Use `create(ProjectResourceOwnerQuerySchema)` to create a new message.
 */
export declare const ProjectResourceOwnerQuerySchema: GenMessage<ProjectResourceOwnerQuery, {jsonType: ProjectResourceOwnerQueryJson}>;

/**
 * @generated from message zitadel.project.v1.Role
 */
export declare type Role = Message<"zitadel.project.v1.Role"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * @generated from field: string group = 4;
   */
  group: string;
};

/**
 * @generated from message zitadel.project.v1.Role
 */
export declare type RoleJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string display_name = 3;
   */
  displayName?: string;

  /**
   * @generated from field: string group = 4;
   */
  group?: string;
};

/**
 * Describes the message zitadel.project.v1.Role.
 * Use `create(RoleSchema)` to create a new message.
 */
export declare const RoleSchema: GenMessage<Role, {jsonType: RoleJson}>;

/**
 * @generated from message zitadel.project.v1.RoleQuery
 */
export declare type RoleQuery = Message<"zitadel.project.v1.RoleQuery"> & {
  /**
   * @generated from oneof zitadel.project.v1.RoleQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.project.v1.RoleKeyQuery key_query = 1;
     */
    value: RoleKeyQuery;
    case: "keyQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.RoleDisplayNameQuery display_name_query = 2;
     */
    value: RoleDisplayNameQuery;
    case: "displayNameQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v1.RoleQuery
 */
export declare type RoleQueryJson = {
  /**
   * @generated from field: zitadel.project.v1.RoleKeyQuery key_query = 1;
   */
  keyQuery?: RoleKeyQueryJson;

  /**
   * @generated from field: zitadel.project.v1.RoleDisplayNameQuery display_name_query = 2;
   */
  displayNameQuery?: RoleDisplayNameQueryJson;
};

/**
 * Describes the message zitadel.project.v1.RoleQuery.
 * Use `create(RoleQuerySchema)` to create a new message.
 */
export declare const RoleQuerySchema: GenMessage<RoleQuery, {jsonType: RoleQueryJson}>;

/**
 * @generated from message zitadel.project.v1.RoleKeyQuery
 */
export declare type RoleKeyQuery = Message<"zitadel.project.v1.RoleKeyQuery"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.project.v1.RoleKeyQuery
 */
export declare type RoleKeyQueryJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.project.v1.RoleKeyQuery.
 * Use `create(RoleKeyQuerySchema)` to create a new message.
 */
export declare const RoleKeyQuerySchema: GenMessage<RoleKeyQuery, {jsonType: RoleKeyQueryJson}>;

/**
 * @generated from message zitadel.project.v1.RoleDisplayNameQuery
 */
export declare type RoleDisplayNameQuery = Message<"zitadel.project.v1.RoleDisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.project.v1.RoleDisplayNameQuery
 */
export declare type RoleDisplayNameQueryJson = {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.project.v1.RoleDisplayNameQuery.
 * Use `create(RoleDisplayNameQuerySchema)` to create a new message.
 */
export declare const RoleDisplayNameQuerySchema: GenMessage<RoleDisplayNameQuery, {jsonType: RoleDisplayNameQueryJson}>;

/**
 * @generated from message zitadel.project.v1.ProjectGrantQuery
 */
export declare type ProjectGrantQuery = Message<"zitadel.project.v1.ProjectGrantQuery"> & {
  /**
   * @generated from oneof zitadel.project.v1.ProjectGrantQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.project.v1.GrantProjectNameQuery project_name_query = 1;
     */
    value: GrantProjectNameQuery;
    case: "projectNameQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.GrantRoleKeyQuery role_key_query = 2;
     */
    value: GrantRoleKeyQuery;
    case: "roleKeyQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v1.ProjectGrantQuery
 */
export declare type ProjectGrantQueryJson = {
  /**
   * @generated from field: zitadel.project.v1.GrantProjectNameQuery project_name_query = 1;
   */
  projectNameQuery?: GrantProjectNameQueryJson;

  /**
   * @generated from field: zitadel.project.v1.GrantRoleKeyQuery role_key_query = 2;
   */
  roleKeyQuery?: GrantRoleKeyQueryJson;
};

/**
 * Describes the message zitadel.project.v1.ProjectGrantQuery.
 * Use `create(ProjectGrantQuerySchema)` to create a new message.
 */
export declare const ProjectGrantQuerySchema: GenMessage<ProjectGrantQuery, {jsonType: ProjectGrantQueryJson}>;

/**
 * @generated from message zitadel.project.v1.AllProjectGrantQuery
 */
export declare type AllProjectGrantQuery = Message<"zitadel.project.v1.AllProjectGrantQuery"> & {
  /**
   * @generated from oneof zitadel.project.v1.AllProjectGrantQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.project.v1.GrantProjectNameQuery project_name_query = 1;
     */
    value: GrantProjectNameQuery;
    case: "projectNameQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.GrantRoleKeyQuery role_key_query = 2;
     */
    value: GrantRoleKeyQuery;
    case: "roleKeyQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.ProjectIDQuery project_id_query = 3;
     */
    value: ProjectIDQuery;
    case: "projectIdQuery";
  } | {
    /**
     * @generated from field: zitadel.project.v1.GrantedOrgIDQuery granted_org_id_query = 4;
     */
    value: GrantedOrgIDQuery;
    case: "grantedOrgIdQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.project.v1.AllProjectGrantQuery
 */
export declare type AllProjectGrantQueryJson = {
  /**
   * @generated from field: zitadel.project.v1.GrantProjectNameQuery project_name_query = 1;
   */
  projectNameQuery?: GrantProjectNameQueryJson;

  /**
   * @generated from field: zitadel.project.v1.GrantRoleKeyQuery role_key_query = 2;
   */
  roleKeyQuery?: GrantRoleKeyQueryJson;

  /**
   * @generated from field: zitadel.project.v1.ProjectIDQuery project_id_query = 3;
   */
  projectIdQuery?: ProjectIDQueryJson;

  /**
   * @generated from field: zitadel.project.v1.GrantedOrgIDQuery granted_org_id_query = 4;
   */
  grantedOrgIdQuery?: GrantedOrgIDQueryJson;
};

/**
 * Describes the message zitadel.project.v1.AllProjectGrantQuery.
 * Use `create(AllProjectGrantQuerySchema)` to create a new message.
 */
export declare const AllProjectGrantQuerySchema: GenMessage<AllProjectGrantQuery, {jsonType: AllProjectGrantQueryJson}>;

/**
 * @generated from message zitadel.project.v1.GrantProjectNameQuery
 */
export declare type GrantProjectNameQuery = Message<"zitadel.project.v1.GrantProjectNameQuery"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.project.v1.GrantProjectNameQuery
 */
export declare type GrantProjectNameQueryJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.project.v1.GrantProjectNameQuery.
 * Use `create(GrantProjectNameQuerySchema)` to create a new message.
 */
export declare const GrantProjectNameQuerySchema: GenMessage<GrantProjectNameQuery, {jsonType: GrantProjectNameQueryJson}>;

/**
 * @generated from message zitadel.project.v1.GrantRoleKeyQuery
 */
export declare type GrantRoleKeyQuery = Message<"zitadel.project.v1.GrantRoleKeyQuery"> & {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.project.v1.GrantRoleKeyQuery
 */
export declare type GrantRoleKeyQueryJson = {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.project.v1.GrantRoleKeyQuery.
 * Use `create(GrantRoleKeyQuerySchema)` to create a new message.
 */
export declare const GrantRoleKeyQuerySchema: GenMessage<GrantRoleKeyQuery, {jsonType: GrantRoleKeyQueryJson}>;

/**
 * @generated from message zitadel.project.v1.ProjectIDQuery
 */
export declare type ProjectIDQuery = Message<"zitadel.project.v1.ProjectIDQuery"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * @generated from message zitadel.project.v1.ProjectIDQuery
 */
export declare type ProjectIDQueryJson = {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId?: string;
};

/**
 * Describes the message zitadel.project.v1.ProjectIDQuery.
 * Use `create(ProjectIDQuerySchema)` to create a new message.
 */
export declare const ProjectIDQuerySchema: GenMessage<ProjectIDQuery, {jsonType: ProjectIDQueryJson}>;

/**
 * @generated from message zitadel.project.v1.GrantedOrgIDQuery
 */
export declare type GrantedOrgIDQuery = Message<"zitadel.project.v1.GrantedOrgIDQuery"> & {
  /**
   * @generated from field: string granted_org_id = 1;
   */
  grantedOrgId: string;
};

/**
 * @generated from message zitadel.project.v1.GrantedOrgIDQuery
 */
export declare type GrantedOrgIDQueryJson = {
  /**
   * @generated from field: string granted_org_id = 1;
   */
  grantedOrgId?: string;
};

/**
 * Describes the message zitadel.project.v1.GrantedOrgIDQuery.
 * Use `create(GrantedOrgIDQuerySchema)` to create a new message.
 */
export declare const GrantedOrgIDQuerySchema: GenMessage<GrantedOrgIDQuery, {jsonType: GrantedOrgIDQueryJson}>;

/**
 * @generated from enum zitadel.project.v1.ProjectState
 */
export enum ProjectState {
  /**
   * @generated from enum value: PROJECT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: PROJECT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.project.v1.ProjectState
 */
export declare type ProjectStateJson = "PROJECT_STATE_UNSPECIFIED" | "PROJECT_STATE_ACTIVE" | "PROJECT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.project.v1.ProjectState.
 */
export declare const ProjectStateSchema: GenEnum<ProjectState, ProjectStateJson>;

/**
 * @generated from enum zitadel.project.v1.PrivateLabelingSetting
 */
export enum PrivateLabelingSetting {
  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY = 1;
   */
  ENFORCE_PROJECT_RESOURCE_OWNER_POLICY = 1,

  /**
   * @generated from enum value: PRIVATE_LABELING_SETTING_ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY = 2;
   */
  ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY = 2,
}

/**
 * @generated from enum zitadel.project.v1.PrivateLabelingSetting
 */
export declare type PrivateLabelingSettingJson = "PRIVATE_LABELING_SETTING_UNSPECIFIED" | "PRIVATE_LABELING_SETTING_ENFORCE_PROJECT_RESOURCE_OWNER_POLICY" | "PRIVATE_LABELING_SETTING_ALLOW_LOGIN_USER_RESOURCE_OWNER_POLICY";

/**
 * Describes the enum zitadel.project.v1.PrivateLabelingSetting.
 */
export declare const PrivateLabelingSettingSchema: GenEnum<PrivateLabelingSetting, PrivateLabelingSettingJson>;

/**
 * @generated from enum zitadel.project.v1.ProjectGrantState
 */
export enum ProjectGrantState {
  /**
   * @generated from enum value: PROJECT_GRANT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROJECT_GRANT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: PROJECT_GRANT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.project.v1.ProjectGrantState
 */
export declare type ProjectGrantStateJson = "PROJECT_GRANT_STATE_UNSPECIFIED" | "PROJECT_GRANT_STATE_ACTIVE" | "PROJECT_GRANT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.project.v1.ProjectGrantState.
 */
export declare const ProjectGrantStateSchema: GenEnum<ProjectGrantState, ProjectGrantStateJson>;

