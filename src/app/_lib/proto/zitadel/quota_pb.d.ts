// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/quota.proto (package zitadel.quota.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file zitadel/quota.proto.
 */
export declare const file_zitadel_quota: GenFile;

/**
 * @generated from message zitadel.quota.v1.Notification
 */
export declare type Notification = Message<"zitadel.quota.v1.Notification"> & {
  /**
   * The percentage relative to the quotas amount on which the call_url should be called.
   *
   * @generated from field: uint32 percent = 1;
   */
  percent: number;

  /**
   * If true, the call_url is called each time a factor of percentage is reached.
   *
   * @generated from field: bool repeat = 2;
   */
  repeat: boolean;

  /**
   * The URL, which is called with HTTP method POST and a JSON payload with the properties "unit", "id" (notification id), "callURL", "periodStart", "threshold" and "usage".
   *
   * @generated from field: string call_url = 3;
   */
  callUrl: string;
};

/**
 * @generated from message zitadel.quota.v1.Notification
 */
export declare type NotificationJson = {
  /**
   * The percentage relative to the quotas amount on which the call_url should be called.
   *
   * @generated from field: uint32 percent = 1;
   */
  percent?: number;

  /**
   * If true, the call_url is called each time a factor of percentage is reached.
   *
   * @generated from field: bool repeat = 2;
   */
  repeat?: boolean;

  /**
   * The URL, which is called with HTTP method POST and a JSON payload with the properties "unit", "id" (notification id), "callURL", "periodStart", "threshold" and "usage".
   *
   * @generated from field: string call_url = 3;
   */
  callUrl?: string;
};

/**
 * Describes the message zitadel.quota.v1.Notification.
 * Use `create(NotificationSchema)` to create a new message.
 */
export declare const NotificationSchema: GenMessage<Notification, {jsonType: NotificationJson}>;

/**
 * @generated from enum zitadel.quota.v1.Unit
 */
export enum Unit {
  /**
   * @generated from enum value: UNIT_UNIMPLEMENTED = 0;
   */
  UNIMPLEMENTED = 0,

  /**
   * The sum of all requests to the ZITADEL API with an authorization header,
   * excluding the following exceptions
   * - Calls to the System API
   * - Calls that cause internal server errors
   * - Failed authorizations
   * - Requests after the quota already exceeded
   *
   * @generated from enum value: UNIT_REQUESTS_ALL_AUTHENTICATED = 1;
   */
  REQUESTS_ALL_AUTHENTICATED = 1,

  /**
   * The sum of all actions run durations in seconds
   *
   * @generated from enum value: UNIT_ACTIONS_ALL_RUN_SECONDS = 2;
   */
  ACTIONS_ALL_RUN_SECONDS = 2,
}

/**
 * @generated from enum zitadel.quota.v1.Unit
 */
export declare type UnitJson = "UNIT_UNIMPLEMENTED" | "UNIT_REQUESTS_ALL_AUTHENTICATED" | "UNIT_ACTIONS_ALL_RUN_SECONDS";

/**
 * Describes the enum zitadel.quota.v1.Unit.
 */
export declare const UnitSchema: GenEnum<Unit, UnitJson>;

