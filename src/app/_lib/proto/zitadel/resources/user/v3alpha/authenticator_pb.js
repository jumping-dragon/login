// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/resources/user/v3alpha/authenticator.proto (package zitadel.resources.user.v3alpha, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb.js";
import { file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../../validate/validate_pb.js";
import { file_zitadel_resources_object_v3alpha_object } from "../../object/v3alpha/object_pb.js";

/**
 * Describes the file zitadel/resources/user/v3alpha/authenticator.proto.
 */
export const file_zitadel_resources_user_v3alpha_authenticator = /*@__PURE__*/
  fileDesc("CjJ6aXRhZGVsL3Jlc291cmNlcy91c2VyL3YzYWxwaGEvYXV0aGVudGljYXRvci5wcm90bxIeeml0YWRlbC5yZXNvdXJjZXMudXNlci52M2FscGhhIpAECg5BdXRoZW50aWNhdG9ycxI7Cgl1c2VybmFtZXMYASADKAsyKC56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuVXNlcm5hbWUSOgoIcGFzc3dvcmQYAiABKAsyKC56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuUGFzc3dvcmQSPAoKd2ViX2F1dGhfbhgDIAMoCzIoLnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYS5XZWJBdXRoThIzCgV0b3RwcxgEIAMoCzIkLnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYS5UT1RQEjcKB290cF9zbXMYBSADKAsyJi56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuT1RQU01TEjsKCW90cF9lbWFpbBgGIAMoCzIoLnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYS5PVFBFbWFpbBJOChNhdXRoZW50aWNhdGlvbl9rZXlzGAcgAygLMjEueml0YWRlbC5yZXNvdXJjZXMudXNlci52M2FscGhhLkF1dGhlbnRpY2F0aW9uS2V5EkwKEmlkZW50aXR5X3Byb3ZpZGVycxgIIAMoCzIwLnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYS5JZGVudGl0eVByb3ZpZGVyImgKCFVzZXJuYW1lEhMKC3VzZXJuYW1lX2lkGAEgASgJEiUKCHVzZXJuYW1lGAIgASgJQhOSQRBKDiJnaWdpLWdpcmFmZmUiEiAKGGlzX29yZ2FuaXphdGlvbl9zcGVjaWZpYxgDIAEoCCJqCgtTZXRVc2VybmFtZRI5Cgh1c2VybmFtZRgBIAEoCUInkkEWSg4iZ2lnaS1naXJhZmZlInjIAYABAeJBAQL6QgdyBRABGMgBEiAKGGlzX29yZ2FuaXphdGlvbl9zcGVjaWZpYxgCIAEoCCJgCghQYXNzd29yZBJUCgxsYXN0X2NoYW5nZWQYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQiKSQR9KHSIyMDE5LTA0LTAxVDA4OjQ1OjAwLjAwMDAwMFoiIoYBCghXZWJBdXRoThIvCg13ZWJfYXV0aF9uX2lkGAEgASgJQhiSQRVKEyI2OTYyOTAyMzkwNjQ4ODMzNCISHQoEbmFtZRgCIAEoCUIPkkEMSgoiZmlkbyBrZXkiEhMKC2lzX3ZlcmlmaWVkGAMgASgIEhUKDXVzZXJfdmVyaWZpZWQYBCABKAgikQIKGVN0YXJ0V2ViQXV0aE5SZWdpc3RyYXRpb24SQgoGZG9tYWluGAEgASgJQjKSQSFKGSJteS1kb21haW4ueml0YWRlbC5jbG91ZCJ4yAGAAQHiQQEC+kIHcgUQARjIARJVChJhdXRoZW50aWNhdG9yX3R5cGUYAiABKA4yOS56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuV2ViQXV0aE5BdXRoZW50aWNhdG9yVHlwZRJQCgRjb2RlGAMgASgLMj0ueml0YWRlbC5yZXNvdXJjZXMudXNlci52M2FscGhhLkF1dGhlbnRpY2F0b3JSZWdpc3RyYXRpb25Db2RlSACIAQFCBwoFX2NvZGUi9wYKGlZlcmlmeVdlYkF1dGhOUmVnaXN0cmF0aW9uEpoGChVwdWJsaWNfa2V5X2NyZWRlbnRpYWwYASABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0QuEFkkHRBUrHBXsidHlwZSI6InB1YmxpYy1rZXkiLCJpZCI6InBhd1ZhckY0eFB4TEZtZkNuUmt3WFdlVHJLR3phYmNBaTkyTEVJMVdDMDAiLCJyYXdJZCI6InBhd1ZhckY0eFB4TEZtZkNuUmt3WFdlVHJLR3phYmNBaTkyTEVJMVdDMDAiLCJyZXNwb25zZSI6eyJhdHRlc3RhdGlvbk9iamVjdCI6Im8yTm1iWFJtY0dGamEyVmtaMkYwZEZOMGJYU2lZMkZzWnlaamMybG5XRWN3UlFJZ1JLUzNWcGVFOXRmRXhYUnprb1VLbkc0clFXUHZ0U1N0NFl0REdnVHgzMm9DSVFEUGV5LTJZSjR1SWctUUNNNGpqNmFFMlUzdGdNRk1fUlA3RWZ4NnhSdTNKR2hoZFhSb1JHRjBZVmlrU1pZTjVZZ09qR2gwTkJjUFpIWmdXNF9rcnJtaWhqTEhtVnp6dW9NZGwyTkZBQUFBQURqdTc2MDg1WWhtbHQxQ0VPSGt3TFFBSUtXc0ZXcXhlTVQ4U3habndwMFpNRjFuazZ5aHMybTNBSXZkaXhDTlZndE5wUUVDQXlZZ0FTRllJTUdVRFNQMkZBUW4yTUlmUE15N2N5Ql9ZMzBWcWl4VmdHVUxUQnRGamZSaUlsZ2dqVUdmUW8zXy1Dck1tSDNTLVpRa0ZLV0tuTkJRRUFNa0Z0Ry05QTR6cVcwIiwiY2xpZW50RGF0YUpTT04iOiJleUowZVhCbElqb2lkMlZpWVhWMGFHNHVZM0psWVhSbElpd2lZMmhoYkd4bGJtZGxJam9pUWxoWGRIaDBXR3hKZUZaWmEwcEhUMWRWYVVWbU0yNXpieTAyYVhaS2RXdzJZbU5tV0hkTVZsRklheUlzSW05eWFXZHBiaUk2SW1oMGRIQnpPaTh2Ykc5allXeG9iM04wT2pnd09EQWlmUSJ9fXiAgECAATfiQQEC+kIFigECEAESPAoPd2ViX2F1dGhfbl9uYW1lGAIgASgJQiOSQRJKCiJmaWRvIGtleSJ4yAGAAQHiQQEC+kIHcgUQARjIASJvCgZPVFBTTVMSLAoKb3RwX3Ntc19pZBgBIAEoCUIYkkEVShMiNjk2MjkwMjM5MDY0ODgzMzQiEiIKBXBob25lGAIgASgJQhOSQRBKDiIrNDE3OTEyMzQ1NjciEhMKC2lzX3ZlcmlmaWVkGAMgASgIIncKCE9UUEVtYWlsEi4KDG90cF9lbWFpbF9pZBgBIAEoCUIYkkEVShMiNjk2MjkwMjM5MDY0ODgzMzQiEiYKB2FkZHJlc3MYAiABKAlCFZJBEkoQIm1pbmlAbW91c2UuY29tIhITCgtpc192ZXJpZmllZBgDIAEoCCJxCgRUT1RQEikKB3RvdHBfaWQYASABKAlCGJJBFUoTIjY5NjI5MDIzOTA2NDg4MzM0IhIpCgRuYW1lGAIgASgJQhuSQRhKFiJHb29nbGUgQXV0aGVudGljYXRvciISEwoLaXNfdmVyaWZpZWQYAyABKAgiswIKEUF1dGhlbnRpY2F0aW9uS2V5EjcKFWF1dGhlbnRpY2F0aW9uX2tleV9pZBgBIAEoCUIYkkEVShMiNjk2MjkwMjM5MDY0ODgzMzQiEjoKB2RldGFpbHMYAiABKAsyKS56aXRhZGVsLnJlc291cmNlcy5vYmplY3QudjNhbHBoYS5EZXRhaWxzElAKBHR5cGUYAyABKA4yLC56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuQXV0aE5LZXlUeXBlQhSSQRFKDyJLRVlfVFlQRV9KU09OIhJXCg9leHBpcmF0aW9uX2RhdGUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQiKSQR9KHSIzMDE5LTA0LTAxVDA4OjQ1OjAwLjAwMDAwMFoiIrUBChBJZGVudGl0eVByb3ZpZGVyEigKBmlkcF9pZBgBIAEoCUIYkkEVShMiNjk2MjkwMjM5MDY0ODgzMzQiEh8KCGlkcF9uYW1lGAMgASgJQg2SQQpKCCJnb29nbGUiEiMKB3VzZXJfaWQYBCABKAlCEpJBD0oNImFzLTEyLWRmLTg5IhIxCgh1c2VybmFtZRgFIAEoCUIfkkEcShoiZ2lnaS5sb25nLW5lY2tAZ21haWwuY29tIiKSAQoRU2V0QXV0aGVudGljYXRvcnMSPgoJdXNlcm5hbWVzGAEgAygLMisueml0YWRlbC5yZXNvdXJjZXMudXNlci52M2FscGhhLlNldFVzZXJuYW1lEj0KCHBhc3N3b3JkGAIgASgLMisueml0YWRlbC5yZXNvdXJjZXMudXNlci52M2FscGhhLlNldFBhc3N3b3JkIu8CCgtTZXRQYXNzd29yZBI+CghwYXNzd29yZBgBIAEoCUIqkkEZShEiU2VjcjN0UDRzc3cwcmQhInjIAYABAeJBAQL6QgdyBRABGMgBSAASZwoEaGFzaBgCIAEoCUJXkkFGSj4iJDJhJDEyJGxKMDhmcVZyOGJGSmlsUlZuRFQ5UWVVTEk3WVcublQzaXdVdjZkeWcwYUNyZm0zVVk4WFIyInjIAYABAeJBAQL6QgdyBRABGMgBSAASFwoPY2hhbmdlX3JlcXVpcmVkGAMgASgIEkYKEGN1cnJlbnRfcGFzc3dvcmQYBCABKAlCKpJBGUoRIlNlY3IzdFA0c3N3MHJkISJ4yAGAAQHiQQEC+kIHcgUQARjIAUgBEj4KEXZlcmlmaWNhdGlvbl9jb2RlGAUgASgJQiGSQRFKCiJTS0pkMzQyayJ4FIABAeJBAQL6QgZyBBABGBRIAUIGCgR0eXBlQg4KDHZlcmlmaWNhdGlvbiK1AQoWU2VuZFBhc3N3b3JkUmVzZXRFbWFpbBKJAQoMdXJsX3RlbXBsYXRlGAIgASgJQm6SQWFKWSJodHRwczovL2V4YW1wbGUuY29tL3Bhc3N3b3JkL2NoYW5nZXk/dXNlcklEPXt7LlVzZXJJRH19JmNvZGU9e3suQ29kZX19Jm9yZ0lEPXt7Lk9yZ0lEfX0ieMgBgAEB+kIHcgUQARjIAUgAiAEBQg8KDV91cmxfdGVtcGxhdGUiFgoUU2VuZFBhc3N3b3JkUmVzZXRTTVMiGQoXUmV0dXJuUGFzc3dvcmRSZXNldENvZGUinwEKHUF1dGhlbnRpY2F0b3JSZWdpc3RyYXRpb25Db2RlEksKAmlkGAEgASgJQj+SQS5KJiJlMmE0OGQ2YS0zNjJiLTRkYjYtYTFmYi0zNGZlYWI4NGRjNjIieMgBgAEB4kEBAvpCB3IFEAEYyAESMQoEY29kZRgCIAEoCUIjkkESSgoiU0tKZDM0MmsieMgBgAEB4kEBAvpCB3IFEAEYyAEizwEKHFNlbmRXZWJBdXRoTlJlZ2lzdHJhdGlvbkxpbmsSnQEKDHVybF90ZW1wbGF0ZRgBIAEoCUKBAZJBdEpsImh0dHBzOi8vZXhhbXBsZS5jb20vcGFzc2tleS9yZWdpc3Rlcj91c2VySUQ9e3suVXNlcklEfX0mb3JnSUQ9e3suT3JnSUR9fSZjb2RlSUQ9e3suQ29kZUlEfX0mY29kZT17ey5Db2RlfX0ieMgBgAEB+kIHcgUQARjIAUgAiAEBQg8KDV91cmxfdGVtcGxhdGUiIAoeUmV0dXJuV2ViQXV0aE5SZWdpc3RyYXRpb25Db2RlIr0BCgxSZWRpcmVjdFVSTHMSVwoLc3VjY2Vzc191cmwYASABKAlCQpJBLkomImh0dHBzOi8vY3VzdG9tLmNvbS9sb2dpbi9pZHAvc3VjY2VzcyJ4gBCAAQHiQQEC+kIKcggQARiAEJABARJUCgtmYWlsdXJlX3VybBgCIAEoCUI/kkErSiMiaHR0cHM6Ly9jdXN0b20uY29tL2xvZ2luL2lkcC9mYWlsIniAEIABAeJBAQL6QgpyCBABGIAQkAEBIocBCg9MREFQQ3JlZGVudGlhbHMSOAoIdXNlcm5hbWUYASABKAlCJpJBEkoKInVzZXJuYW1lInjIAYABAeJBAQL6QgpyCBABGMgBkAEBEjoKCHBhc3N3b3JkGAIgASgJQiiSQRRKDCJQYXNzd29yZDEhInjIAYABAeJBAQL6QgpyCBABGMgBkAEBIswBChZJZGVudGl0eVByb3ZpZGVySW50ZW50EjAKDWlkcF9pbnRlbnRfaWQYASABKAlCGZJBFkoUIjE2Mzg0MDc3NjgzNTQzMjcwNSISQwoQaWRwX2ludGVudF90b2tlbhgCIAEoCUIpkkEmSiQiU0pLTDNpb0lEcG8zNDJpb3F3OThmanAzc2RmMzJ3YWhiPSISLwoHdXNlcl9pZBgDIAEoCUIZkkEWShQiMTYzODQwNzc2ODM1NDMyMzQ1IkgAiAEBQgoKCF91c2VyX2lkIsEDCg5JRFBJbmZvcm1hdGlvbhIoCgZpZHBfaWQYASABKAlCGJJBFUoTIjY5NjI5MDI2ODA2NDg5NDU1IhI8Cgd1c2VyX2lkGAIgASgJQiuSQShKJiJkNjU0ZTZiYS03MGEzLTQ4ZWYtYTk1ZC0zN2M4ZDhhNzkwMWEiEisKCXVzZXJfbmFtZRgDIAEoCUIYkkEVShMidXNlckBleHRlcm5hbC5jb20iEjAKD3Jhd19pbmZvcm1hdGlvbhgEIAEoCzIXLmdvb2dsZS5wcm90b2J1Zi5TdHJ1Y3QSSgoFb2F1dGgYBSABKAsyOS56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuSURQT0F1dGhBY2Nlc3NJbmZvcm1hdGlvbkgAEkgKBGxkYXAYBiABKAsyOC56aXRhZGVsLnJlc291cmNlcy51c2VyLnYzYWxwaGEuSURQTERBUEFjY2Vzc0luZm9ybWF0aW9uSAASSAoEc2FtbBgHIAEoCzI4LnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYS5JRFBTQU1MQWNjZXNzSW5mb3JtYXRpb25IAEIICgZhY2Nlc3MiuwIKGUlEUE9BdXRoQWNjZXNzSW5mb3JtYXRpb24SUgoMYWNjZXNzX3Rva2VuGAEgASgJQjySQTlKNyJKV0xLRlNKbGlqb3JpZmpPSk9JZWhqdDhqT0lFV0pHaDN0Z2lFTjNXSVVHSDhFaGdpZXdoZyISvAEKCGlkX3Rva2VuGAIgASgJQqQBkkGgAUqdASJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKemRXSWlPaUl4TWpNME5UWTNPRGt3SWl3aWJtRnRaU0k2SWtwdmFHNGdSRzlsSWl3aWFXRjBJam94TlRFMk1qTTVNREl5ZlEuU2ZsS3h3UkpTTWVLS0YyUVQ0ZndwTWVKZjM2UE9rNnlKVl9hZFFzc3c1YyJIAIgBAUILCglfaWRfdG9rZW4iRwoYSURQTERBUEFjY2Vzc0luZm9ybWF0aW9uEisKCmF0dHJpYnV0ZXMYASABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0IsYbChhJRFBTQU1MQWNjZXNzSW5mb3JtYXRpb24SqRsKCWFzc2VydGlvbhgBIAEoDEKVG5JBkRtKjhsiUEVGemMyVnlkR2x2YmlCNGJXeHVjejExY200NmIyRnphWE02Ym1GdFpYTTZkR002VTBGTlREb3lMakE2WVhOelpYSjBhVzl1SUVsRVBWOW1OamM1TkRFNU1qbGlaR1k1TVRjeU9UTXlNeUJKYzNOMVpVbHVjM1JoYm5ROU1qQXlOQzB3TWkwd09GUXhNem8xTVRvek55NDVORGRhSUZabGNuTnBiMjQ5TWk0d1BqeEpjM04xWlhJZ2VHMXNibk05ZFhKdU9tOWhjMmx6T201aGJXVnpPblJqT2xOQlRVdzZNaTR3T21GemMyVnlkR2x2YmlCT1lXMWxVWFZoYkdsbWFXVnlQU0JUVUU1aGJXVlJkV0ZzYVdacFpYSTlJRVp2Y20xaGREMTFjbTQ2YjJGemFYTTZibUZ0WlhNNmRHTTZVMEZOVERveUxqQTZibUZ0Wldsa0xXWnZjbTFoZERwbGJuUnBkSGtnVTFCUWNtOTJhV1JsWkVsRVBUNW9kSFJ3Y3pvdkwzTmhiV3d1WlhoaGJYQnNaUzVqYjIwdlpXNTBhWFI1YVdSY1BDOUpjM04xWlhKY1BsdzhVMmxuYm1GMGRYSmxYRDVjUEZOd1lXTmxYRDVjUEM5VGNHRmpaVncrWER4VVlXZGNQbHc4TDFSaFoxdytYRHd2VTJsbmJtRjBkWEpsWEQ1Y1BGTjFZbXBsWTNRZ2VHMXNibk05ZFhKdU9tOWhjMmx6T201aGJXVnpPblJqT2xOQlRVdzZNaTR3T21GemMyVnlkR2x2Ymo0OFRtRnRaVWxFSUU1aGJXVlJkV0ZzYVdacFpYSTlJRk5RVG1GdFpWRjFZV3hwWm1sbGNqMGdSbTl5YldGMFBYVnlianB2WVhOcGN6cHVZVzFsY3pwMFl6cFRRVTFNT2pFdU1UcHVZVzFsYVdRdFptOXliV0YwT21WdFlXbHNRV1JrY21WemN5QlRVRkJ5YjNacFpHVmtTVVE5UG1waFkydHpiMjVBWlhoaGJYQnNaUzVqYjIwOEwwNWhiV1ZKUkQ0OFUzVmlhbVZqZEVOdmJtWnBjbTFoZEdsdmJpQk5aWFJvYjJROWRYSnVPbTloYzJsek9tNWhiV1Z6T25Sak9sTkJUVXc2TWk0d09tTnRPbUpsWVhKbGNqNDhVM1ZpYW1WamRFTnZibVpwY20xaGRHbHZia1JoZEdFZ1RtOTBUMjVQY2tGbWRHVnlQVEl3TWpRdE1ESXRNRGhVTVRNNk5UWTZNemN1T1RRM1dpQk9iM1JDWldadmNtVTlNREF3TVMwd01TMHdNVlF3TURvd01Eb3dNRm9nVW1WamFYQnBaVzUwUFdoMGRIQnpPaTh2WkdWdGJ5NTZhWFJoWkdWc0xtTnNiM1ZrTDJsa2NITXZNalV5T0RNME9UUTNOalU0TnpBNU56WXlMM05oYld3dllXTnpJRWx1VW1WemNHOXVjMlZVYnoxcFpDMHlNR0l4WkdFeU5XVXpOelZoWVdReVltWm1Oakl4T0dZMlptVXpNV1JtTXpZek5UUmpNbUkySUVGa1pISmxjM005UGp3dlUzVmlhbVZqZEVOdmJtWnBjbTFoZEdsdmJrUmhkR0UrUEM5VGRXSnFaV04wUTI5dVptbHliV0YwYVc5dVBqd3ZVM1ZpYW1WamRENDhRMjl1WkdsMGFXOXVjeUJPYjNSQ1pXWnZjbVU5TWpBeU5DMHdNaTB3T0ZReE16bzBOam96Tnk0NU5EZGFJRTV2ZEU5dVQzSkJablJsY2oweU1ESTBMVEF5TFRBNFZERXpPalUyT2pNM0xqazBOMW8rUEVGMVpHbGxibU5sVW1WemRISnBZM1JwYjI0K1BFRjFaR2xsYm1ObFBtaDBkSEJ6T2k4dlpHVnRieTU2YVhSaFpHVnNMbU5zYjNWa0wybGtjSE12TWpVeU9ETTBPVFEzTmpVNE56QTVOell5TDNOaGJXd3ZiV1YwWVdSaGRHRmNQQzlCZFdScFpXNWpaVncrWER3dlFYVmthV1Z1WTJWU1pYTjBjbWxqZEdsdmJsdytYRHd2UTI5dVpHbDBhVzl1YzF3K1hEeEJkWFJvYmxOMFlYUmxiV1Z1ZENCQmRYUm9ia2x1YzNSaGJuUTlNakF5TkMwd01pMHdPRlF4TXpvMU1Ub3pOeTQ1TkRkYUlGTmxjM05wYjI1SmJtUmxlRDFwWkMweU1HSXhaR0V5TldVek56VmhZV1F5WW1abU5qSXhPR1kyWm1Vek1XUm1Nell6TlRSak1tSTJQanhCZFhSb2JrTnZiblJsZUhRK1BFRjFkR2h1UTI5dWRHVjRkRU5zWVhOelVtVm1QblZ5YmpwdllYTnBjenB1WVcxbGN6cDBZenBUUVUxTU9qSXVNRHBoWXpwamJHRnpjMlZ6T2xCaGMzTjNiM0prVUhKdmRHVmpkR1ZrVkhKaGJuTndiM0owUEM5QmRYUm9ia052Ym5SbGVIUkRiR0Z6YzFKbFpqNDhMMEYxZEdodVEyOXVkR1Y0ZEQ0OEwwRjFkR2h1VTNSaGRHVnRaVzUwUGp4QmRIUnlhV0oxZEdWVGRHRjBaVzFsYm5RK1BFRjBkSEpwWW5WMFpTQkdjbWxsYm1Sc2VVNWhiV1U5SUU1aGJXVTlhV1FnVG1GdFpVWnZjbTFoZEQxMWNtNDZiMkZ6YVhNNmJtRnRaWE02ZEdNNlUwRk5URG95TGpBNllYUjBjbTVoYldVdFptOXliV0YwT25WdWMzQmxZMmxtYVdWa1BqeEJkSFJ5YVdKMWRHVldZV3gxWlNCNGJXeHVjenBmV0UxTVUyTm9aVzFoTFdsdWMzUmhibU5sUFdoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01ERXZXRTFNVTJOb1pXMWhMV2x1YzNSaGJtTmxJRjlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlU2ZEhsd1pUMTRjenB6ZEhKcGJtYytNV1JrWVRsbVlqUTVNV1JqTURGaVpESTBaREkwTWpOaVlUSm1NakpoWlRVMk1XWTFObVJrWmpJek56WmlNamxoTVRGak9EQXlPREZrTWpFeU1ERm1PVHd2UVhSMGNtbGlkWFJsVm1Gc2RXVStQQzlCZEhSeWFXSjFkR1UrUEVGMGRISnBZblYwWlNCR2NtbGxibVJzZVU1aGJXVTlJRTVoYldVOVpXMWhhV3dnVG1GdFpVWnZjbTFoZEQxMWNtNDZiMkZ6YVhNNmJtRnRaWE02ZEdNNlUwRk5URG95TGpBNllYUjBjbTVoYldVdFptOXliV0YwT25WdWMzQmxZMmxtYVdWa1BqeEJkSFJ5YVdKMWRHVldZV3gxWlNCNGJXeHVjenBmV0UxTVUyTm9aVzFoTFdsdWMzUmhibU5sUFdoMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01ERXZXRTFNVTJOb1pXMWhMV2x1YzNSaGJtTmxJRjlZVFV4VFkyaGxiV0V0YVc1emRHRnVZMlU2ZEhsd1pUMTRjenB6ZEhKcGJtYythbUZqYTNOdmJrQmxlR0Z0Y0d4bExtTnZiVHd2UVhSMGNtbGlkWFJsVm1Gc2RXVStQQzlCZEhSeWFXSjFkR1UrUEVGMGRISnBZblYwWlNCR2NtbGxibVJzZVU1aGJXVTlJRTVoYldVOVptbHljM1JPWVcxbElFNWhiV1ZHYjNKdFlYUTlkWEp1T205aGMybHpPbTVoYldWek9uUmpPbE5CVFV3Nk1pNHdPbUYwZEhKdVlXMWxMV1p2Y20xaGREcDFibk53WldOcFptbGxaRDQ4UVhSMGNtbGlkWFJsVm1Gc2RXVWdlRzFzYm5NNlgxaE5URk5qYUdWdFlTMXBibk4wWVc1alpUMW9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4TDFoTlRGTmphR1Z0WVMxcGJuTjBZVzVqWlNCZldFMU1VMk5vWlcxaExXbHVjM1JoYm1ObE9uUjVjR1U5ZUhNNmMzUnlhVzVuUG1waFkydHpiMjQ4TDBGMGRISnBZblYwWlZaaGJIVmxQand2UVhSMGNtbGlkWFJsUGp4QmRIUnlhV0oxZEdVZ1JuSnBaVzVrYkhsT1lXMWxQU0JPWVcxbFBXeGhjM1JPWVcxbElFNWhiV1ZHYjNKdFlYUTlkWEp1T205aGMybHpPbTVoYldWek9uUmpPbE5CVFV3Nk1pNHdPbUYwZEhKdVlXMWxMV1p2Y20xaGREcDFibk53WldOcFptbGxaRDQ4UVhSMGNtbGlkWFJsVm1Gc2RXVWdlRzFzYm5NNlgxaE5URk5qYUdWdFlTMXBibk4wWVc1alpUMW9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4TDFoTlRGTmphR1Z0WVMxcGJuTjBZVzVqWlNCZldFMU1VMk5vWlcxaExXbHVjM1JoYm1ObE9uUjVjR1U5ZUhNNmMzUnlhVzVuUG1waFkydHpiMjQ4TDBGMGRISnBZblYwWlZaaGJIVmxQand2UVhSMGNtbGlkWFJsUGp3dlFYUjBjbWxpZFhSbFUzUmhkR1Z0Wlc1MFBqd3ZRWE56WlhKMGFXOXVQZz09IiLjAQoQSURQQXV0aGVudGljYXRvchI8CgZpZHBfaWQYASABKAlCLJJBG0oTIjY5NjI5MDI2ODA2NDg5NDU1InjIAYABAeJBAQL6QgdyBRABGMgBElAKB3VzZXJfaWQYAiABKAlCP5JBLkomImQ2NTRlNmJhLTcwYTMtNDhlZi1hOTVkLTM3YzhkOGE3OTAxYSJ4yAGAAQHiQQEC+kIHcgUQARjIARI/Cgl1c2VyX25hbWUYAyABKAlCLJJBG0oTInVzZXJAZXh0ZXJuYWwuY29tInjIAYABAeJBAQL6QgdyBRABGMgBKkcKDEF1dGhOS2V5VHlwZRIeChpBVVRITl9LRVlfVFlQRV9VTlNQRUNJRklFRBAAEhcKE0FVVEhOX0tFWV9UWVBFX0pTT04QASqZAQoZV2ViQXV0aE5BdXRoZW50aWNhdG9yVHlwZRIoCiRXRUJfQVVUSF9OX0FVVEhFTlRJQ0FUT1JfVU5TUEVDSUZJRUQQABIlCiFXRUJfQVVUSF9OX0FVVEhFTlRJQ0FUT1JfUExBVEZPUk0QARIrCidXRUJfQVVUSF9OX0FVVEhFTlRJQ0FUT1JfQ1JPU1NfUExBVEZPUk0QAkKUAgoiY29tLnppdGFkZWwucmVzb3VyY2VzLnVzZXIudjNhbHBoYUISQXV0aGVudGljYXRvclByb3RvUAFaP2dpdGh1Yi5jb20veml0YWRlbC96aXRhZGVsL3BrZy9ncnBjL3Jlc291cmNlcy91c2VyL3YzYWxwaGE7dXNlcqICA1pSVaoCHlppdGFkZWwuUmVzb3VyY2VzLlVzZXIuVjNhbHBoYcoCHlppdGFkZWxcUmVzb3VyY2VzXFVzZXJcVjNhbHBoYeICKlppdGFkZWxcUmVzb3VyY2VzXFVzZXJcVjNhbHBoYVxHUEJNZXRhZGF0YeoCIVppdGFkZWw6OlJlc291cmNlczo6VXNlcjo6VjNhbHBoYWIGcHJvdG8z", [file_google_api_field_behavior, file_google_protobuf_struct, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_resources_object_v3alpha_object]);

/**
 * Describes the message zitadel.resources.user.v3alpha.Authenticators.
 * Use `create(AuthenticatorsSchema)` to create a new message.
 */
export const AuthenticatorsSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 0);

/**
 * Describes the message zitadel.resources.user.v3alpha.Username.
 * Use `create(UsernameSchema)` to create a new message.
 */
export const UsernameSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 1);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetUsername.
 * Use `create(SetUsernameSchema)` to create a new message.
 */
export const SetUsernameSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 2);

/**
 * Describes the message zitadel.resources.user.v3alpha.Password.
 * Use `create(PasswordSchema)` to create a new message.
 */
export const PasswordSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 3);

/**
 * Describes the message zitadel.resources.user.v3alpha.WebAuthN.
 * Use `create(WebAuthNSchema)` to create a new message.
 */
export const WebAuthNSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 4);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistration.
 * Use `create(StartWebAuthNRegistrationSchema)` to create a new message.
 */
export const StartWebAuthNRegistrationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 5);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration.
 * Use `create(VerifyWebAuthNRegistrationSchema)` to create a new message.
 */
export const VerifyWebAuthNRegistrationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 6);

/**
 * Describes the message zitadel.resources.user.v3alpha.OTPSMS.
 * Use `create(OTPSMSSchema)` to create a new message.
 */
export const OTPSMSSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 7);

/**
 * Describes the message zitadel.resources.user.v3alpha.OTPEmail.
 * Use `create(OTPEmailSchema)` to create a new message.
 */
export const OTPEmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 8);

/**
 * Describes the message zitadel.resources.user.v3alpha.TOTP.
 * Use `create(TOTPSchema)` to create a new message.
 */
export const TOTPSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 9);

/**
 * Describes the message zitadel.resources.user.v3alpha.AuthenticationKey.
 * Use `create(AuthenticationKeySchema)` to create a new message.
 */
export const AuthenticationKeySchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 10);

/**
 * Describes the message zitadel.resources.user.v3alpha.IdentityProvider.
 * Use `create(IdentityProviderSchema)` to create a new message.
 */
export const IdentityProviderSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 11);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetAuthenticators.
 * Use `create(SetAuthenticatorsSchema)` to create a new message.
 */
export const SetAuthenticatorsSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 12);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPassword.
 * Use `create(SetPasswordSchema)` to create a new message.
 */
export const SetPasswordSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 13);

/**
 * Describes the message zitadel.resources.user.v3alpha.SendPasswordResetEmail.
 * Use `create(SendPasswordResetEmailSchema)` to create a new message.
 */
export const SendPasswordResetEmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 14);

/**
 * Describes the message zitadel.resources.user.v3alpha.SendPasswordResetSMS.
 * Use `create(SendPasswordResetSMSSchema)` to create a new message.
 */
export const SendPasswordResetSMSSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 15);

/**
 * Describes the message zitadel.resources.user.v3alpha.ReturnPasswordResetCode.
 * Use `create(ReturnPasswordResetCodeSchema)` to create a new message.
 */
export const ReturnPasswordResetCodeSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 16);

/**
 * Describes the message zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode.
 * Use `create(AuthenticatorRegistrationCodeSchema)` to create a new message.
 */
export const AuthenticatorRegistrationCodeSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 17);

/**
 * Describes the message zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink.
 * Use `create(SendWebAuthNRegistrationLinkSchema)` to create a new message.
 */
export const SendWebAuthNRegistrationLinkSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 18);

/**
 * Describes the message zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode.
 * Use `create(ReturnWebAuthNRegistrationCodeSchema)` to create a new message.
 */
export const ReturnWebAuthNRegistrationCodeSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 19);

/**
 * Describes the message zitadel.resources.user.v3alpha.RedirectURLs.
 * Use `create(RedirectURLsSchema)` to create a new message.
 */
export const RedirectURLsSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 20);

/**
 * Describes the message zitadel.resources.user.v3alpha.LDAPCredentials.
 * Use `create(LDAPCredentialsSchema)` to create a new message.
 */
export const LDAPCredentialsSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 21);

/**
 * Describes the message zitadel.resources.user.v3alpha.IdentityProviderIntent.
 * Use `create(IdentityProviderIntentSchema)` to create a new message.
 */
export const IdentityProviderIntentSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 22);

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPInformation.
 * Use `create(IDPInformationSchema)` to create a new message.
 */
export const IDPInformationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 23);

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPOAuthAccessInformation.
 * Use `create(IDPOAuthAccessInformationSchema)` to create a new message.
 */
export const IDPOAuthAccessInformationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 24);

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPLDAPAccessInformation.
 * Use `create(IDPLDAPAccessInformationSchema)` to create a new message.
 */
export const IDPLDAPAccessInformationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 25);

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPSAMLAccessInformation.
 * Use `create(IDPSAMLAccessInformationSchema)` to create a new message.
 */
export const IDPSAMLAccessInformationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 26);

/**
 * Describes the message zitadel.resources.user.v3alpha.IDPAuthenticator.
 * Use `create(IDPAuthenticatorSchema)` to create a new message.
 */
export const IDPAuthenticatorSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_authenticator, 27);

/**
 * Describes the enum zitadel.resources.user.v3alpha.AuthNKeyType.
 */
export const AuthNKeyTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_resources_user_v3alpha_authenticator, 0);

/**
 * @generated from enum zitadel.resources.user.v3alpha.AuthNKeyType
 */
export const AuthNKeyType = /*@__PURE__*/
  tsEnum(AuthNKeyTypeSchema);

/**
 * Describes the enum zitadel.resources.user.v3alpha.WebAuthNAuthenticatorType.
 */
export const WebAuthNAuthenticatorTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_resources_user_v3alpha_authenticator, 1);

/**
 * @generated from enum zitadel.resources.user.v3alpha.WebAuthNAuthenticatorType
 */
export const WebAuthNAuthenticatorType = /*@__PURE__*/
  tsEnum(WebAuthNAuthenticatorTypeSchema);

