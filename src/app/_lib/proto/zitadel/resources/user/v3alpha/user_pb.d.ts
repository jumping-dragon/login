// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/resources/user/v3alpha/user.proto (package zitadel.resources.user.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Contact, ContactJson, SetContact, SetContactJson } from "./communication_pb.js";
import type { Authenticators, AuthenticatorsJson, SetAuthenticators, SetAuthenticatorsJson } from "./authenticator_pb.js";
import type { StructJson } from "@bufbuild/protobuf/wkt";
import type { Details, DetailsJson } from "../../object/v3alpha/object_pb.js";

/**
 * Describes the file zitadel/resources/user/v3alpha/user.proto.
 */
export declare const file_zitadel_resources_user_v3alpha_user: GenFile;

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUser
 */
export declare type CreateUser = Message<"zitadel.resources.user.v3alpha.CreateUser"> & {
  /**
   * Define the schema the user's data schema by providing it's ID.
   *
   * @generated from field: string schema_id = 1;
   */
  schemaId: string;

  /**
   * @generated from field: google.protobuf.Struct data = 2;
   */
  data?: JsonObject;

  /**
   * Set the contact information (email, phone) for the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetContact contact = 3;
   */
  contact?: SetContact;

  /**
   * Set the initial authenticators of the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetAuthenticators authenticators = 4;
   */
  authenticators?: SetAuthenticators;

  /**
   * Optionally set a unique identifier of the user. If unset, ZITADEL will take care of it.
   *
   * @generated from field: optional string user_id = 5;
   */
  userId?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUser
 */
export declare type CreateUserJson = {
  /**
   * Define the schema the user's data schema by providing it's ID.
   *
   * @generated from field: string schema_id = 1;
   */
  schemaId?: string;

  /**
   * @generated from field: google.protobuf.Struct data = 2;
   */
  data?: StructJson;

  /**
   * Set the contact information (email, phone) for the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetContact contact = 3;
   */
  contact?: SetContactJson;

  /**
   * Set the initial authenticators of the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetAuthenticators authenticators = 4;
   */
  authenticators?: SetAuthenticatorsJson;

  /**
   * Optionally set a unique identifier of the user. If unset, ZITADEL will take care of it.
   *
   * @generated from field: optional string user_id = 5;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateUser.
 * Use `create(CreateUserSchema)` to create a new message.
 */
export declare const CreateUserSchema: GenMessage<CreateUser, {jsonType: CreateUserJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUser
 */
export declare type PatchUser = Message<"zitadel.resources.user.v3alpha.PatchUser"> & {
  /**
   * @generated from field: optional string schema_id = 1;
   */
  schemaId?: string;

  /**
   * @generated from field: optional google.protobuf.Struct data = 2;
   */
  data?: JsonObject;

  /**
   * Set the contact information (email, phone) for the user.
   *
   * TODO: No SetAuthenticators?
   *
   * @generated from field: optional zitadel.resources.user.v3alpha.SetContact contact = 3;
   */
  contact?: SetContact;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUser
 */
export declare type PatchUserJson = {
  /**
   * @generated from field: optional string schema_id = 1;
   */
  schemaId?: string;

  /**
   * @generated from field: optional google.protobuf.Struct data = 2;
   */
  data?: StructJson;

  /**
   * Set the contact information (email, phone) for the user.
   *
   * TODO: No SetAuthenticators?
   *
   * @generated from field: optional zitadel.resources.user.v3alpha.SetContact contact = 3;
   */
  contact?: SetContactJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.PatchUser.
 * Use `create(PatchUserSchema)` to create a new message.
 */
export declare const PatchUserSchema: GenMessage<PatchUser, {jsonType: PatchUserJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUser
 */
export declare type GetUser = Message<"zitadel.resources.user.v3alpha.GetUser"> & {
  /**
   * Details provide some base information (such as the last change date) of the user.
   *
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * The schema the user and it's data is based on.
   *
   * @generated from field: zitadel.resources.user.v3alpha.GetSchema schema = 2;
   */
  schema?: GetSchema;

  /**
   * @generated from field: google.protobuf.Struct data = 3;
   */
  data?: JsonObject;

  /**
   * Contact information for the user. ZITADEL will use this in case of internal notifications.
   *
   * @generated from field: zitadel.resources.user.v3alpha.Contact contact = 4;
   */
  contact?: Contact;

  /**
   * The user's authenticators. They are used to identify and authenticate the user
   * during the authentication process.
   *
   * @generated from field: zitadel.resources.user.v3alpha.Authenticators authenticators = 5;
   */
  authenticators?: Authenticators;

  /**
   * State of the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.State state = 6;
   */
  state: State;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUser
 */
export declare type GetUserJson = {
  /**
   * Details provide some base information (such as the last change date) of the user.
   *
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The schema the user and it's data is based on.
   *
   * @generated from field: zitadel.resources.user.v3alpha.GetSchema schema = 2;
   */
  schema?: GetSchemaJson;

  /**
   * @generated from field: google.protobuf.Struct data = 3;
   */
  data?: StructJson;

  /**
   * Contact information for the user. ZITADEL will use this in case of internal notifications.
   *
   * @generated from field: zitadel.resources.user.v3alpha.Contact contact = 4;
   */
  contact?: ContactJson;

  /**
   * The user's authenticators. They are used to identify and authenticate the user
   * during the authentication process.
   *
   * @generated from field: zitadel.resources.user.v3alpha.Authenticators authenticators = 5;
   */
  authenticators?: AuthenticatorsJson;

  /**
   * State of the user.
   *
   * @generated from field: zitadel.resources.user.v3alpha.State state = 6;
   */
  state?: StateJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetUser.
 * Use `create(GetUserSchema)` to create a new message.
 */
export declare const GetUserSchema: GenMessage<GetUser, {jsonType: GetUserJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetSchema
 */
export declare type GetSchema = Message<"zitadel.resources.user.v3alpha.GetSchema"> & {
  /**
   * The unique identifier of the user schema.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The human readable name of the user schema.
   *
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * The revision the user's data is based on of the revision.
   *
   * @generated from field: uint32 revision = 3;
   */
  revision: number;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetSchema
 */
export declare type GetSchemaJson = {
  /**
   * The unique identifier of the user schema.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The human readable name of the user schema.
   *
   * @generated from field: string type = 2;
   */
  type?: string;

  /**
   * The revision the user's data is based on of the revision.
   *
   * @generated from field: uint32 revision = 3;
   */
  revision?: number;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetSchema.
 * Use `create(GetSchemaSchema)` to create a new message.
 */
export declare const GetSchemaSchema: GenMessage<GetSchema, {jsonType: GetSchemaJson}>;

/**
 * @generated from enum zitadel.resources.user.v3alpha.State
 */
export enum State {
  /**
   * @generated from enum value: USER_STATE_UNSPECIFIED = 0;
   */
  USER_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATE_ACTIVE = 1;
   */
  USER_STATE_ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATE_INACTIVE = 2;
   */
  USER_STATE_INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATE_DELETED = 3;
   */
  USER_STATE_DELETED = 3,

  /**
   * @generated from enum value: USER_STATE_LOCKED = 4;
   */
  USER_STATE_LOCKED = 4,
}

/**
 * @generated from enum zitadel.resources.user.v3alpha.State
 */
export declare type StateJson = "USER_STATE_UNSPECIFIED" | "USER_STATE_ACTIVE" | "USER_STATE_INACTIVE" | "USER_STATE_DELETED" | "USER_STATE_LOCKED";

/**
 * Describes the enum zitadel.resources.user.v3alpha.State.
 */
export declare const StateSchema: GenEnum<State, StateJson>;

