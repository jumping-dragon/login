// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/resources/user/v3alpha/user_service.proto (package zitadel.resources.user.v3alpha, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Instance, InstanceJson, Organization, OrganizationJson } from "../../../object/v3alpha/object_pb.js";
import type { Details, DetailsJson, ListDetails, ListDetailsJson, SearchQuery, SearchQueryJson } from "../../object/v3alpha/object_pb.js";
import type { FieldName, FieldNameJson, SearchFilter, SearchFilterJson } from "./query_pb.js";
import type { CreateUser, CreateUserJson, GetUser, GetUserJson, PatchUser, PatchUserJson } from "./user_pb.js";
import type { ReturnEmailVerificationCode, ReturnEmailVerificationCodeJson, ReturnPhoneVerificationCode, ReturnPhoneVerificationCodeJson, SendEmailVerificationCode, SendEmailVerificationCodeJson, SendPhoneVerificationCode, SendPhoneVerificationCodeJson, SetEmail, SetEmailJson, SetPhone, SetPhoneJson } from "./communication_pb.js";
import type { AuthenticatorRegistrationCode, AuthenticatorRegistrationCodeJson, IdentityProviderIntent, IdentityProviderIntentJson, IDPAuthenticator, IDPAuthenticatorJson, IDPInformation, IDPInformationJson, LDAPCredentials, LDAPCredentialsJson, RedirectURLs, RedirectURLsJson, ReturnPasswordResetCode, ReturnPasswordResetCodeJson, ReturnWebAuthNRegistrationCode, ReturnWebAuthNRegistrationCodeJson, SendPasswordResetEmail, SendPasswordResetEmailJson, SendPasswordResetSMS, SendPasswordResetSMSJson, SendWebAuthNRegistrationLink, SendWebAuthNRegistrationLinkJson, SetPassword, SetPasswordJson, SetUsername, SetUsernameJson, StartWebAuthNRegistration, StartWebAuthNRegistrationJson, VerifyWebAuthNRegistration, VerifyWebAuthNRegistrationJson } from "./authenticator_pb.js";
import type { StructJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/resources/user/v3alpha/user_service.proto.
 */
export declare const file_zitadel_resources_user_v3alpha_user_service: GenFile;

/**
 * @generated from message zitadel.resources.user.v3alpha.SearchUsersRequest
 */
export declare type SearchUsersRequest = Message<"zitadel.resources.user.v3alpha.SearchUsersRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Search limitations and ordering.
   *
   * @generated from field: zitadel.resources.object.v3alpha.SearchQuery query = 2;
   */
  query?: SearchQuery;

  /**
   * the field the result is sorted.
   *
   * @generated from field: zitadel.resources.user.v3alpha.FieldName sorting_column = 3;
   */
  sortingColumn: FieldName;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.SearchFilter filters = 4;
   */
  filters: SearchFilter[];
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SearchUsersRequest
 */
export declare type SearchUsersRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Search limitations and ordering.
   *
   * @generated from field: zitadel.resources.object.v3alpha.SearchQuery query = 2;
   */
  query?: SearchQueryJson;

  /**
   * the field the result is sorted.
   *
   * @generated from field: zitadel.resources.user.v3alpha.FieldName sorting_column = 3;
   */
  sortingColumn?: FieldNameJson;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.SearchFilter filters = 4;
   */
  filters?: SearchFilterJson[];
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SearchUsersRequest.
 * Use `create(SearchUsersRequestSchema)` to create a new message.
 */
export declare const SearchUsersRequestSchema: GenMessage<SearchUsersRequest, {jsonType: SearchUsersRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SearchUsersResponse
 */
export declare type SearchUsersResponse = Message<"zitadel.resources.user.v3alpha.SearchUsersResponse"> & {
  /**
   * Details provides information about the returned result including total amount found.
   *
   * @generated from field: zitadel.resources.object.v3alpha.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * The result contains the user schemas, which matched the queries.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.GetUser result = 2;
   */
  result: GetUser[];
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SearchUsersResponse
 */
export declare type SearchUsersResponseJson = {
  /**
   * Details provides information about the returned result including total amount found.
   *
   * @generated from field: zitadel.resources.object.v3alpha.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * The result contains the user schemas, which matched the queries.
   *
   * @generated from field: repeated zitadel.resources.user.v3alpha.GetUser result = 2;
   */
  result?: GetUserJson[];
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SearchUsersResponse.
 * Use `create(SearchUsersResponseSchema)` to create a new message.
 */
export declare const SearchUsersResponseSchema: GenMessage<SearchUsersResponse, {jsonType: SearchUsersResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUserRequest
 */
export declare type GetUserRequest = Message<"zitadel.resources.user.v3alpha.GetUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 2;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUserRequest
 */
export declare type GetUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 2;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export declare const GetUserRequestSchema: GenMessage<GetUserRequest, {jsonType: GetUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUserResponse
 */
export declare type GetUserResponse = Message<"zitadel.resources.user.v3alpha.GetUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.user.v3alpha.GetUser user = 1;
   */
  user?: GetUser;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetUserResponse
 */
export declare type GetUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.user.v3alpha.GetUser user = 1;
   */
  user?: GetUserJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export declare const GetUserResponseSchema: GenMessage<GetUserResponse, {jsonType: GetUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUserRequest
 */
export declare type CreateUserRequest = Message<"zitadel.resources.user.v3alpha.CreateUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Set the organization the user belongs to.
   *
   * @generated from field: zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.CreateUser user = 3;
   */
  user?: CreateUser;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUserRequest
 */
export declare type CreateUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Set the organization the user belongs to.
   *
   * @generated from field: zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.CreateUser user = 3;
   */
  user?: CreateUserJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export declare const CreateUserRequestSchema: GenMessage<CreateUserRequest, {jsonType: CreateUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUserResponse
 */
export declare type CreateUserResponse = Message<"zitadel.resources.user.v3alpha.CreateUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * The email code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * The phone code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateUserResponse
 */
export declare type CreateUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The email code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * The phone code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export declare const CreateUserResponseSchema: GenMessage<CreateUserResponse, {jsonType: CreateUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUserRequest
 */
export declare type PatchUserRequest = Message<"zitadel.resources.user.v3alpha.PatchUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   *  unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.PatchUser user = 4;
   */
  user?: PatchUser;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUserRequest
 */
export declare type PatchUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   *  unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.PatchUser user = 4;
   */
  user?: PatchUserJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.PatchUserRequest.
 * Use `create(PatchUserRequestSchema)` to create a new message.
 */
export declare const PatchUserRequestSchema: GenMessage<PatchUserRequest, {jsonType: PatchUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUserResponse
 */
export declare type PatchUserResponse = Message<"zitadel.resources.user.v3alpha.PatchUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * The email code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * The phone code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.PatchUserResponse
 */
export declare type PatchUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The email code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * The phone code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.PatchUserResponse.
 * Use `create(PatchUserResponseSchema)` to create a new message.
 */
export declare const PatchUserResponseSchema: GenMessage<PatchUserResponse, {jsonType: PatchUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.DeactivateUserRequest
 */
export declare type DeactivateUserRequest = Message<"zitadel.resources.user.v3alpha.DeactivateUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.DeactivateUserRequest
 */
export declare type DeactivateUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.DeactivateUserRequest.
 * Use `create(DeactivateUserRequestSchema)` to create a new message.
 */
export declare const DeactivateUserRequestSchema: GenMessage<DeactivateUserRequest, {jsonType: DeactivateUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.DeactivateUserResponse
 */
export declare type DeactivateUserResponse = Message<"zitadel.resources.user.v3alpha.DeactivateUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.DeactivateUserResponse
 */
export declare type DeactivateUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.DeactivateUserResponse.
 * Use `create(DeactivateUserResponseSchema)` to create a new message.
 */
export declare const DeactivateUserResponseSchema: GenMessage<DeactivateUserResponse, {jsonType: DeactivateUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ActivateUserRequest
 */
export declare type ActivateUserRequest = Message<"zitadel.resources.user.v3alpha.ActivateUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ActivateUserRequest
 */
export declare type ActivateUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ActivateUserRequest.
 * Use `create(ActivateUserRequestSchema)` to create a new message.
 */
export declare const ActivateUserRequestSchema: GenMessage<ActivateUserRequest, {jsonType: ActivateUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ActivateUserResponse
 */
export declare type ActivateUserResponse = Message<"zitadel.resources.user.v3alpha.ActivateUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ActivateUserResponse
 */
export declare type ActivateUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ActivateUserResponse.
 * Use `create(ActivateUserResponseSchema)` to create a new message.
 */
export declare const ActivateUserResponseSchema: GenMessage<ActivateUserResponse, {jsonType: ActivateUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.LockUserRequest
 */
export declare type LockUserRequest = Message<"zitadel.resources.user.v3alpha.LockUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.LockUserRequest
 */
export declare type LockUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.LockUserRequest.
 * Use `create(LockUserRequestSchema)` to create a new message.
 */
export declare const LockUserRequestSchema: GenMessage<LockUserRequest, {jsonType: LockUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.LockUserResponse
 */
export declare type LockUserResponse = Message<"zitadel.resources.user.v3alpha.LockUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.LockUserResponse
 */
export declare type LockUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.LockUserResponse.
 * Use `create(LockUserResponseSchema)` to create a new message.
 */
export declare const LockUserResponseSchema: GenMessage<LockUserResponse, {jsonType: LockUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.UnlockUserRequest
 */
export declare type UnlockUserRequest = Message<"zitadel.resources.user.v3alpha.UnlockUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.UnlockUserRequest
 */
export declare type UnlockUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.UnlockUserRequest.
 * Use `create(UnlockUserRequestSchema)` to create a new message.
 */
export declare const UnlockUserRequestSchema: GenMessage<UnlockUserRequest, {jsonType: UnlockUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.UnlockUserResponse
 */
export declare type UnlockUserResponse = Message<"zitadel.resources.user.v3alpha.UnlockUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.UnlockUserResponse
 */
export declare type UnlockUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.UnlockUserResponse.
 * Use `create(UnlockUserResponseSchema)` to create a new message.
 */
export declare const UnlockUserResponseSchema: GenMessage<UnlockUserResponse, {jsonType: UnlockUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.DeleteUserRequest
 */
export declare type DeleteUserRequest = Message<"zitadel.resources.user.v3alpha.DeleteUserRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.DeleteUserRequest
 */
export declare type DeleteUserRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export declare const DeleteUserRequestSchema: GenMessage<DeleteUserRequest, {jsonType: DeleteUserRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.DeleteUserResponse
 */
export declare type DeleteUserResponse = Message<"zitadel.resources.user.v3alpha.DeleteUserResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.DeleteUserResponse
 */
export declare type DeleteUserResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export declare const DeleteUserResponseSchema: GenMessage<DeleteUserResponse, {jsonType: DeleteUserResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactEmailRequest
 */
export declare type SetContactEmailRequest = Message<"zitadel.resources.user.v3alpha.SetContactEmailRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the user's contact email and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetEmail email = 4;
   */
  email?: SetEmail;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactEmailRequest
 */
export declare type SetContactEmailRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the user's contact email and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetEmail email = 4;
   */
  email?: SetEmailJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactEmailRequest.
 * Use `create(SetContactEmailRequestSchema)` to create a new message.
 */
export declare const SetContactEmailRequestSchema: GenMessage<SetContactEmailRequest, {jsonType: SetContactEmailRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactEmailResponse
 */
export declare type SetContactEmailResponse = Message<"zitadel.resources.user.v3alpha.SetContactEmailResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * The verification code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactEmailResponse
 */
export declare type SetContactEmailResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The verification code will be set if a contact email was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactEmailResponse.
 * Use `create(SetContactEmailResponseSchema)` to create a new message.
 */
export declare const SetContactEmailResponseSchema: GenMessage<SetContactEmailResponse, {jsonType: SetContactEmailResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactEmailRequest
 */
export declare type VerifyContactEmailRequest = Message<"zitadel.resources.user.v3alpha.VerifyContactEmailRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the verification code generated during the set contact email request.
   *
   * @generated from field: string verification_code = 4;
   */
  verificationCode: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactEmailRequest
 */
export declare type VerifyContactEmailRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the verification code generated during the set contact email request.
   *
   * @generated from field: string verification_code = 4;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactEmailRequest.
 * Use `create(VerifyContactEmailRequestSchema)` to create a new message.
 */
export declare const VerifyContactEmailRequestSchema: GenMessage<VerifyContactEmailRequest, {jsonType: VerifyContactEmailRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactEmailResponse
 */
export declare type VerifyContactEmailResponse = Message<"zitadel.resources.user.v3alpha.VerifyContactEmailResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactEmailResponse
 */
export declare type VerifyContactEmailResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactEmailResponse.
 * Use `create(VerifyContactEmailResponseSchema)` to create a new message.
 */
export declare const VerifyContactEmailResponseSchema: GenMessage<VerifyContactEmailResponse, {jsonType: VerifyContactEmailResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest
 */
export declare type ResendContactEmailCodeRequest = Message<"zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * if no verification is specified, an email is sent
   *
   * @generated from oneof zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest.verification
   */
  verification: {
    /**
     * Let ZITADEL send the link to the user via email.
     *
     * @generated from field: zitadel.resources.user.v3alpha.SendEmailVerificationCode send_code = 4;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * Get the code back to provide it to the user in your preferred mechanism.
     *
     * @generated from field: zitadel.resources.user.v3alpha.ReturnEmailVerificationCode return_code = 5;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest
 */
export declare type ResendContactEmailCodeRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Let ZITADEL send the link to the user via email.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SendEmailVerificationCode send_code = 4;
   */
  sendCode?: SendEmailVerificationCodeJson;

  /**
   * Get the code back to provide it to the user in your preferred mechanism.
   *
   * @generated from field: zitadel.resources.user.v3alpha.ReturnEmailVerificationCode return_code = 5;
   */
  returnCode?: ReturnEmailVerificationCodeJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest.
 * Use `create(ResendContactEmailCodeRequestSchema)` to create a new message.
 */
export declare const ResendContactEmailCodeRequestSchema: GenMessage<ResendContactEmailCodeRequest, {jsonType: ResendContactEmailCodeRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactEmailCodeResponse
 */
export declare type ResendContactEmailCodeResponse = Message<"zitadel.resources.user.v3alpha.ResendContactEmailCodeResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactEmailCodeResponse
 */
export declare type ResendContactEmailCodeResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactEmailCodeResponse.
 * Use `create(ResendContactEmailCodeResponseSchema)` to create a new message.
 */
export declare const ResendContactEmailCodeResponseSchema: GenMessage<ResendContactEmailCodeResponse, {jsonType: ResendContactEmailCodeResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactPhoneRequest
 */
export declare type SetContactPhoneRequest = Message<"zitadel.resources.user.v3alpha.SetContactPhoneRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the user's contact phone and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPhone phone = 4;
   */
  phone?: SetPhone;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactPhoneRequest
 */
export declare type SetContactPhoneRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the user's contact phone and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPhone phone = 4;
   */
  phone?: SetPhoneJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactPhoneRequest.
 * Use `create(SetContactPhoneRequestSchema)` to create a new message.
 */
export declare const SetContactPhoneRequestSchema: GenMessage<SetContactPhoneRequest, {jsonType: SetContactPhoneRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactPhoneResponse
 */
export declare type SetContactPhoneResponse = Message<"zitadel.resources.user.v3alpha.SetContactPhoneResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * The phone verification code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetContactPhoneResponse
 */
export declare type SetContactPhoneResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The phone verification code will be set if a contact phone was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactPhoneResponse.
 * Use `create(SetContactPhoneResponseSchema)` to create a new message.
 */
export declare const SetContactPhoneResponseSchema: GenMessage<SetContactPhoneResponse, {jsonType: SetContactPhoneResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactPhoneRequest
 */
export declare type VerifyContactPhoneRequest = Message<"zitadel.resources.user.v3alpha.VerifyContactPhoneRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the verification code generated during the set contact phone request.
   *
   * @generated from field: string verification_code = 4;
   */
  verificationCode: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactPhoneRequest
 */
export declare type VerifyContactPhoneRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the verification code generated during the set contact phone request.
   *
   * @generated from field: string verification_code = 4;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactPhoneRequest.
 * Use `create(VerifyContactPhoneRequestSchema)` to create a new message.
 */
export declare const VerifyContactPhoneRequestSchema: GenMessage<VerifyContactPhoneRequest, {jsonType: VerifyContactPhoneRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactPhoneResponse
 */
export declare type VerifyContactPhoneResponse = Message<"zitadel.resources.user.v3alpha.VerifyContactPhoneResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyContactPhoneResponse
 */
export declare type VerifyContactPhoneResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactPhoneResponse.
 * Use `create(VerifyContactPhoneResponseSchema)` to create a new message.
 */
export declare const VerifyContactPhoneResponseSchema: GenMessage<VerifyContactPhoneResponse, {jsonType: VerifyContactPhoneResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest
 */
export declare type ResendContactPhoneCodeRequest = Message<"zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * if no verification is specified, a SMS is sent
   *
   * @generated from oneof zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest.verification
   */
  verification: {
    /**
     * Let ZITADEL send the link to the user via SMS.
     *
     * @generated from field: zitadel.resources.user.v3alpha.SendPhoneVerificationCode send_code = 4;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * Get the code back to provide it to the user in your preferred mechanism.
     *
     * @generated from field: zitadel.resources.user.v3alpha.ReturnPhoneVerificationCode return_code = 5;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest
 */
export declare type ResendContactPhoneCodeRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Let ZITADEL send the link to the user via SMS.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SendPhoneVerificationCode send_code = 4;
   */
  sendCode?: SendPhoneVerificationCodeJson;

  /**
   * Get the code back to provide it to the user in your preferred mechanism.
   *
   * @generated from field: zitadel.resources.user.v3alpha.ReturnPhoneVerificationCode return_code = 5;
   */
  returnCode?: ReturnPhoneVerificationCodeJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest.
 * Use `create(ResendContactPhoneCodeRequestSchema)` to create a new message.
 */
export declare const ResendContactPhoneCodeRequestSchema: GenMessage<ResendContactPhoneCodeRequest, {jsonType: ResendContactPhoneCodeRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactPhoneCodeResponse
 */
export declare type ResendContactPhoneCodeResponse = Message<"zitadel.resources.user.v3alpha.ResendContactPhoneCodeResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.ResendContactPhoneCodeResponse
 */
export declare type ResendContactPhoneCodeResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactPhoneCodeResponse.
 * Use `create(ResendContactPhoneCodeResponseSchema)` to create a new message.
 */
export declare const ResendContactPhoneCodeResponseSchema: GenMessage<ResendContactPhoneCodeResponse, {jsonType: ResendContactPhoneCodeResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddUsernameRequest
 */
export declare type AddUsernameRequest = Message<"zitadel.resources.user.v3alpha.AddUsernameRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the user's new username.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetUsername username = 4;
   */
  username?: SetUsername;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddUsernameRequest
 */
export declare type AddUsernameRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the user's new username.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetUsername username = 4;
   */
  username?: SetUsernameJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddUsernameRequest.
 * Use `create(AddUsernameRequestSchema)` to create a new message.
 */
export declare const AddUsernameRequestSchema: GenMessage<AddUsernameRequest, {jsonType: AddUsernameRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddUsernameResponse
 */
export declare type AddUsernameResponse = Message<"zitadel.resources.user.v3alpha.AddUsernameResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * unique identifier of the username.
   *
   * @generated from field: string username_id = 2;
   */
  usernameId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddUsernameResponse
 */
export declare type AddUsernameResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * unique identifier of the username.
   *
   * @generated from field: string username_id = 2;
   */
  usernameId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddUsernameResponse.
 * Use `create(AddUsernameResponseSchema)` to create a new message.
 */
export declare const AddUsernameResponseSchema: GenMessage<AddUsernameResponse, {jsonType: AddUsernameResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveUsernameRequest
 */
export declare type RemoveUsernameRequest = Message<"zitadel.resources.user.v3alpha.RemoveUsernameRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the username.
   *
   * @generated from field: string username_id = 4;
   */
  usernameId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveUsernameRequest
 */
export declare type RemoveUsernameRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the username.
   *
   * @generated from field: string username_id = 4;
   */
  usernameId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveUsernameRequest.
 * Use `create(RemoveUsernameRequestSchema)` to create a new message.
 */
export declare const RemoveUsernameRequestSchema: GenMessage<RemoveUsernameRequest, {jsonType: RemoveUsernameRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveUsernameResponse
 */
export declare type RemoveUsernameResponse = Message<"zitadel.resources.user.v3alpha.RemoveUsernameResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveUsernameResponse
 */
export declare type RemoveUsernameResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveUsernameResponse.
 * Use `create(RemoveUsernameResponseSchema)` to create a new message.
 */
export declare const RemoveUsernameResponseSchema: GenMessage<RemoveUsernameResponse, {jsonType: RemoveUsernameResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetPasswordRequest
 */
export declare type SetPasswordRequest = Message<"zitadel.resources.user.v3alpha.SetPasswordRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Provide the new password (in plain text or as hash).
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPassword new_password = 4;
   */
  newPassword?: SetPassword;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetPasswordRequest
 */
export declare type SetPasswordRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Provide the new password (in plain text or as hash).
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPassword new_password = 4;
   */
  newPassword?: SetPasswordJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPasswordRequest.
 * Use `create(SetPasswordRequestSchema)` to create a new message.
 */
export declare const SetPasswordRequestSchema: GenMessage<SetPasswordRequest, {jsonType: SetPasswordRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.SetPasswordResponse
 */
export declare type SetPasswordResponse = Message<"zitadel.resources.user.v3alpha.SetPasswordResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.SetPasswordResponse
 */
export declare type SetPasswordResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPasswordResponse.
 * Use `create(SetPasswordResponseSchema)` to create a new message.
 */
export declare const SetPasswordResponseSchema: GenMessage<SetPasswordResponse, {jsonType: SetPasswordResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RequestPasswordResetRequest
 */
export declare type RequestPasswordResetRequest = Message<"zitadel.resources.user.v3alpha.RequestPasswordResetRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * If no medium is specified, an email is sent with the default url.
   *
   * @generated from oneof zitadel.resources.user.v3alpha.RequestPasswordResetRequest.medium
   */
  medium: {
    /**
     * Let ZITADEL send the link to the user via email.
     *
     * @generated from field: zitadel.resources.user.v3alpha.SendPasswordResetEmail send_email = 4;
     */
    value: SendPasswordResetEmail;
    case: "sendEmail";
  } | {
    /**
     * Let ZITADEL send the link to the user via SMS.
     *
     * @generated from field: zitadel.resources.user.v3alpha.SendPasswordResetSMS send_sms = 5;
     */
    value: SendPasswordResetSMS;
    case: "sendSms";
  } | {
    /**
     * Get the code back to provide it to the user in your preferred mechanism.
     *
     * @generated from field: zitadel.resources.user.v3alpha.ReturnPasswordResetCode return_code = 6;
     */
    value: ReturnPasswordResetCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RequestPasswordResetRequest
 */
export declare type RequestPasswordResetRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Let ZITADEL send the link to the user via email.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SendPasswordResetEmail send_email = 4;
   */
  sendEmail?: SendPasswordResetEmailJson;

  /**
   * Let ZITADEL send the link to the user via SMS.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SendPasswordResetSMS send_sms = 5;
   */
  sendSms?: SendPasswordResetSMSJson;

  /**
   * Get the code back to provide it to the user in your preferred mechanism.
   *
   * @generated from field: zitadel.resources.user.v3alpha.ReturnPasswordResetCode return_code = 6;
   */
  returnCode?: ReturnPasswordResetCodeJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RequestPasswordResetRequest.
 * Use `create(RequestPasswordResetRequestSchema)` to create a new message.
 */
export declare const RequestPasswordResetRequestSchema: GenMessage<RequestPasswordResetRequest, {jsonType: RequestPasswordResetRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RequestPasswordResetResponse
 */
export declare type RequestPasswordResetResponse = Message<"zitadel.resources.user.v3alpha.RequestPasswordResetResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * In case the medium was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RequestPasswordResetResponse
 */
export declare type RequestPasswordResetResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * In case the medium was set to return_code, the code will be returned.
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RequestPasswordResetResponse.
 * Use `create(RequestPasswordResetResponseSchema)` to create a new message.
 */
export declare const RequestPasswordResetResponseSchema: GenMessage<RequestPasswordResetResponse, {jsonType: RequestPasswordResetResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationRequest
 */
export declare type StartWebAuthNRegistrationRequest = Message<"zitadel.resources.user.v3alpha.StartWebAuthNRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.StartWebAuthNRegistration registration = 4;
   */
  registration?: StartWebAuthNRegistration;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationRequest
 */
export declare type StartWebAuthNRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.StartWebAuthNRegistration registration = 4;
   */
  registration?: StartWebAuthNRegistrationJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationRequest.
 * Use `create(StartWebAuthNRegistrationRequestSchema)` to create a new message.
 */
export declare const StartWebAuthNRegistrationRequestSchema: GenMessage<StartWebAuthNRegistrationRequest, {jsonType: StartWebAuthNRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationResponse
 */
export declare type StartWebAuthNRegistrationResponse = Message<"zitadel.resources.user.v3alpha.StartWebAuthNRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * unique identifier of the WebAuthN registration.
   *
   * @generated from field: string web_auth_n_id = 2;
   */
  webAuthNId: string;

  /**
   * Options for Credential Creation (dictionary PublicKeyCredentialCreationOptions).
   * Generated helper methods transform the field to JSON, for use in a WebauthN client.
   * See also:  https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialcreationoptions
   *
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: JsonObject;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationResponse
 */
export declare type StartWebAuthNRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * unique identifier of the WebAuthN registration.
   *
   * @generated from field: string web_auth_n_id = 2;
   */
  webAuthNId?: string;

  /**
   * Options for Credential Creation (dictionary PublicKeyCredentialCreationOptions).
   * Generated helper methods transform the field to JSON, for use in a WebauthN client.
   * See also:  https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialcreationoptions
   *
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: StructJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationResponse.
 * Use `create(StartWebAuthNRegistrationResponseSchema)` to create a new message.
 */
export declare const StartWebAuthNRegistrationResponseSchema: GenMessage<StartWebAuthNRegistrationResponse, {jsonType: StartWebAuthNRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationRequest
 */
export declare type VerifyWebAuthNRegistrationRequest = Message<"zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the WebAuthN registration, which was returned in the start webauthn registration.
   *
   * @generated from field: string web_auth_n_id = 4;
   */
  webAuthNId: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration verify = 5;
   */
  verify?: VerifyWebAuthNRegistration;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationRequest
 */
export declare type VerifyWebAuthNRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the WebAuthN registration, which was returned in the start webauthn registration.
   *
   * @generated from field: string web_auth_n_id = 4;
   */
  webAuthNId?: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.VerifyWebAuthNRegistration verify = 5;
   */
  verify?: VerifyWebAuthNRegistrationJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationRequest.
 * Use `create(VerifyWebAuthNRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyWebAuthNRegistrationRequestSchema: GenMessage<VerifyWebAuthNRegistrationRequest, {jsonType: VerifyWebAuthNRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationResponse
 */
export declare type VerifyWebAuthNRegistrationResponse = Message<"zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationResponse
 */
export declare type VerifyWebAuthNRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationResponse.
 * Use `create(VerifyWebAuthNRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyWebAuthNRegistrationResponseSchema: GenMessage<VerifyWebAuthNRegistrationResponse, {jsonType: VerifyWebAuthNRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest
 */
export declare type CreateWebAuthNRegistrationLinkRequest = Message<"zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * if no medium is specified, an email is sent with the default url.
   *
   * @generated from oneof zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest.medium
   */
  medium: {
    /**
     * Let ZITADEL send the link to the user via email.
     *
     * @generated from field: zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink send_link = 4;
     */
    value: SendWebAuthNRegistrationLink;
    case: "sendLink";
  } | {
    /**
     * Get the code back to provide it to the user in your preferred mechanism.
     *
     * @generated from field: zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode return_code = 5;
     */
    value: ReturnWebAuthNRegistrationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest
 */
export declare type CreateWebAuthNRegistrationLinkRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Let ZITADEL send the link to the user via email.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SendWebAuthNRegistrationLink send_link = 4;
   */
  sendLink?: SendWebAuthNRegistrationLinkJson;

  /**
   * Get the code back to provide it to the user in your preferred mechanism.
   *
   * @generated from field: zitadel.resources.user.v3alpha.ReturnWebAuthNRegistrationCode return_code = 5;
   */
  returnCode?: ReturnWebAuthNRegistrationCodeJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest.
 * Use `create(CreateWebAuthNRegistrationLinkRequestSchema)` to create a new message.
 */
export declare const CreateWebAuthNRegistrationLinkRequestSchema: GenMessage<CreateWebAuthNRegistrationLinkRequest, {jsonType: CreateWebAuthNRegistrationLinkRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkResponse
 */
export declare type CreateWebAuthNRegistrationLinkResponse = Message<"zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * In case the medium was set to return_code, the code will be returned.
   *
   * @generated from field: optional zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode code = 2;
   */
  code?: AuthenticatorRegistrationCode;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkResponse
 */
export declare type CreateWebAuthNRegistrationLinkResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * In case the medium was set to return_code, the code will be returned.
   *
   * @generated from field: optional zitadel.resources.user.v3alpha.AuthenticatorRegistrationCode code = 2;
   */
  code?: AuthenticatorRegistrationCodeJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkResponse.
 * Use `create(CreateWebAuthNRegistrationLinkResponseSchema)` to create a new message.
 */
export declare const CreateWebAuthNRegistrationLinkResponseSchema: GenMessage<CreateWebAuthNRegistrationLinkResponse, {jsonType: CreateWebAuthNRegistrationLinkResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorRequest
 */
export declare type RemoveWebAuthNAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the WebAuthN authenticator.
   *
   * @generated from field: string web_auth_n_id = 4;
   */
  webAuthNId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorRequest
 */
export declare type RemoveWebAuthNAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the WebAuthN authenticator.
   *
   * @generated from field: string web_auth_n_id = 4;
   */
  webAuthNId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorRequest.
 * Use `create(RemoveWebAuthNAuthenticatorRequestSchema)` to create a new message.
 */
export declare const RemoveWebAuthNAuthenticatorRequestSchema: GenMessage<RemoveWebAuthNAuthenticatorRequest, {jsonType: RemoveWebAuthNAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorResponse
 */
export declare type RemoveWebAuthNAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorResponse
 */
export declare type RemoveWebAuthNAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorResponse.
 * Use `create(RemoveWebAuthNAuthenticatorResponseSchema)` to create a new message.
 */
export declare const RemoveWebAuthNAuthenticatorResponseSchema: GenMessage<RemoveWebAuthNAuthenticatorResponse, {jsonType: RemoveWebAuthNAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartTOTPRegistrationRequest
 */
export declare type StartTOTPRegistrationRequest = Message<"zitadel.resources.user.v3alpha.StartTOTPRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartTOTPRegistrationRequest
 */
export declare type StartTOTPRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartTOTPRegistrationRequest.
 * Use `create(StartTOTPRegistrationRequestSchema)` to create a new message.
 */
export declare const StartTOTPRegistrationRequestSchema: GenMessage<StartTOTPRegistrationRequest, {jsonType: StartTOTPRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartTOTPRegistrationResponse
 */
export declare type StartTOTPRegistrationResponse = Message<"zitadel.resources.user.v3alpha.StartTOTPRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * unique identifier of the TOTP registration.
   *
   * @generated from field: string totp_id = 2;
   */
  totpId: string;

  /**
   * The TOTP URI, which can be used to create a QR Code for scanning with an authenticator app.
   *
   * @generated from field: string uri = 3;
   */
  uri: string;

  /**
   * The TOTP secret, which can be used for manually adding in an authenticator app.
   *
   * @generated from field: string secret = 4;
   */
  secret: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartTOTPRegistrationResponse
 */
export declare type StartTOTPRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * unique identifier of the TOTP registration.
   *
   * @generated from field: string totp_id = 2;
   */
  totpId?: string;

  /**
   * The TOTP URI, which can be used to create a QR Code for scanning with an authenticator app.
   *
   * @generated from field: string uri = 3;
   */
  uri?: string;

  /**
   * The TOTP secret, which can be used for manually adding in an authenticator app.
   *
   * @generated from field: string secret = 4;
   */
  secret?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartTOTPRegistrationResponse.
 * Use `create(StartTOTPRegistrationResponseSchema)` to create a new message.
 */
export declare const StartTOTPRegistrationResponseSchema: GenMessage<StartTOTPRegistrationResponse, {jsonType: StartTOTPRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationRequest
 */
export declare type VerifyTOTPRegistrationRequest = Message<"zitadel.resources.user.v3alpha.VerifyTOTPRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the TOTP registration, which was returned in the start TOTP registration.
   *
   * @generated from field: string totp_id = 4;
   */
  totpId: string;

  /**
   * Code generated by TOTP app or device.
   *
   * @generated from field: string code = 5;
   */
  code: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationRequest
 */
export declare type VerifyTOTPRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the TOTP registration, which was returned in the start TOTP registration.
   *
   * @generated from field: string totp_id = 4;
   */
  totpId?: string;

  /**
   * Code generated by TOTP app or device.
   *
   * @generated from field: string code = 5;
   */
  code?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationRequest.
 * Use `create(VerifyTOTPRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyTOTPRegistrationRequestSchema: GenMessage<VerifyTOTPRegistrationRequest, {jsonType: VerifyTOTPRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationResponse
 */
export declare type VerifyTOTPRegistrationResponse = Message<"zitadel.resources.user.v3alpha.VerifyTOTPRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationResponse
 */
export declare type VerifyTOTPRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationResponse.
 * Use `create(VerifyTOTPRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyTOTPRegistrationResponseSchema: GenMessage<VerifyTOTPRegistrationResponse, {jsonType: VerifyTOTPRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorRequest
 */
export declare type RemoveTOTPAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the TOTP authenticator.
   *
   * @generated from field: string totp_id = 4;
   */
  totpId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorRequest
 */
export declare type RemoveTOTPAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the TOTP authenticator.
   *
   * @generated from field: string totp_id = 4;
   */
  totpId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorRequest.
 * Use `create(RemoveTOTPAuthenticatorRequestSchema)` to create a new message.
 */
export declare const RemoveTOTPAuthenticatorRequestSchema: GenMessage<RemoveTOTPAuthenticatorRequest, {jsonType: RemoveTOTPAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorResponse
 */
export declare type RemoveTOTPAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorResponse
 */
export declare type RemoveTOTPAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorResponse.
 * Use `create(RemoveTOTPAuthenticatorResponseSchema)` to create a new message.
 */
export declare const RemoveTOTPAuthenticatorResponseSchema: GenMessage<RemoveTOTPAuthenticatorResponse, {jsonType: RemoveTOTPAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorRequest
 */
export declare type AddOTPSMSAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the user's phone for the OTP SMS authenticator and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPhone phone = 4;
   */
  phone?: SetPhone;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorRequest
 */
export declare type AddOTPSMSAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the user's phone for the OTP SMS authenticator and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetPhone phone = 4;
   */
  phone?: SetPhoneJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorRequest.
 * Use `create(AddOTPSMSAuthenticatorRequestSchema)` to create a new message.
 */
export declare const AddOTPSMSAuthenticatorRequestSchema: GenMessage<AddOTPSMSAuthenticatorRequest, {jsonType: AddOTPSMSAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorResponse
 */
export declare type AddOTPSMSAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * unique identifier of the OTP SMS registration.
   *
   * @generated from field: string otp_sms_id = 2;
   */
  otpSmsId: string;

  /**
   * The OTP verification code will be set if a phone was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorResponse
 */
export declare type AddOTPSMSAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * unique identifier of the OTP SMS registration.
   *
   * @generated from field: string otp_sms_id = 2;
   */
  otpSmsId?: string;

  /**
   * The OTP verification code will be set if a phone was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorResponse.
 * Use `create(AddOTPSMSAuthenticatorResponseSchema)` to create a new message.
 */
export declare const AddOTPSMSAuthenticatorResponseSchema: GenMessage<AddOTPSMSAuthenticatorResponse, {jsonType: AddOTPSMSAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationRequest
 */
export declare type VerifyOTPSMSRegistrationRequest = Message<"zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the OTP SMS registration, which was returned in the add OTP SMS.
   *
   * @generated from field: string otp_sms_id = 4;
   */
  otpSmsId: string;

  /**
   * Set the verification code generated during the add OTP SMS request.
   *
   * @generated from field: string code = 5;
   */
  code: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationRequest
 */
export declare type VerifyOTPSMSRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the OTP SMS registration, which was returned in the add OTP SMS.
   *
   * @generated from field: string otp_sms_id = 4;
   */
  otpSmsId?: string;

  /**
   * Set the verification code generated during the add OTP SMS request.
   *
   * @generated from field: string code = 5;
   */
  code?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationRequest.
 * Use `create(VerifyOTPSMSRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyOTPSMSRegistrationRequestSchema: GenMessage<VerifyOTPSMSRegistrationRequest, {jsonType: VerifyOTPSMSRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationResponse
 */
export declare type VerifyOTPSMSRegistrationResponse = Message<"zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationResponse
 */
export declare type VerifyOTPSMSRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationResponse.
 * Use `create(VerifyOTPSMSRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyOTPSMSRegistrationResponseSchema: GenMessage<VerifyOTPSMSRegistrationResponse, {jsonType: VerifyOTPSMSRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorRequest
 */
export declare type RemoveOTPSMSAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the OTP SMS authenticator.
   *
   * @generated from field: string otp_sms_id = 4;
   */
  otpSmsId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorRequest
 */
export declare type RemoveOTPSMSAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the OTP SMS authenticator.
   *
   * @generated from field: string otp_sms_id = 4;
   */
  otpSmsId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorRequest.
 * Use `create(RemoveOTPSMSAuthenticatorRequestSchema)` to create a new message.
 */
export declare const RemoveOTPSMSAuthenticatorRequestSchema: GenMessage<RemoveOTPSMSAuthenticatorRequest, {jsonType: RemoveOTPSMSAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorResponse
 */
export declare type RemoveOTPSMSAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorResponse
 */
export declare type RemoveOTPSMSAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorResponse.
 * Use `create(RemoveOTPSMSAuthenticatorResponseSchema)` to create a new message.
 */
export declare const RemoveOTPSMSAuthenticatorResponseSchema: GenMessage<RemoveOTPSMSAuthenticatorResponse, {jsonType: RemoveOTPSMSAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorRequest
 */
export declare type AddOTPEmailAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * Set the user's email for the OTP Email authenticator and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetEmail email = 4;
   */
  email?: SetEmail;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorRequest
 */
export declare type AddOTPEmailAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * Set the user's email for the OTP Email authenticator and it's verification state.
   *
   * @generated from field: zitadel.resources.user.v3alpha.SetEmail email = 4;
   */
  email?: SetEmailJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorRequest.
 * Use `create(AddOTPEmailAuthenticatorRequestSchema)` to create a new message.
 */
export declare const AddOTPEmailAuthenticatorRequestSchema: GenMessage<AddOTPEmailAuthenticatorRequest, {jsonType: AddOTPEmailAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorResponse
 */
export declare type AddOTPEmailAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * unique identifier of the OTP Email registration.
   *
   * @generated from field: string otp_email_id = 2;
   */
  otpEmailId: string;

  /**
   * The OTP verification code will be set if a email was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorResponse
 */
export declare type AddOTPEmailAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * unique identifier of the OTP Email registration.
   *
   * @generated from field: string otp_email_id = 2;
   */
  otpEmailId?: string;

  /**
   * The OTP verification code will be set if a email was set with a return_code verification option.
   *
   * @generated from field: optional string verification_code = 3;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorResponse.
 * Use `create(AddOTPEmailAuthenticatorResponseSchema)` to create a new message.
 */
export declare const AddOTPEmailAuthenticatorResponseSchema: GenMessage<AddOTPEmailAuthenticatorResponse, {jsonType: AddOTPEmailAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationRequest
 */
export declare type VerifyOTPEmailRegistrationRequest = Message<"zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the OTP Email registration, which was returned in the add OTP Email.
   *
   * @generated from field: string otp_email_id = 4;
   */
  otpEmailId: string;

  /**
   * Set the verification code generated during the add OTP Email request.
   *
   * @generated from field: string code = 5;
   */
  code: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationRequest
 */
export declare type VerifyOTPEmailRegistrationRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the OTP Email registration, which was returned in the add OTP Email.
   *
   * @generated from field: string otp_email_id = 4;
   */
  otpEmailId?: string;

  /**
   * Set the verification code generated during the add OTP Email request.
   *
   * @generated from field: string code = 5;
   */
  code?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationRequest.
 * Use `create(VerifyOTPEmailRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyOTPEmailRegistrationRequestSchema: GenMessage<VerifyOTPEmailRegistrationRequest, {jsonType: VerifyOTPEmailRegistrationRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationResponse
 */
export declare type VerifyOTPEmailRegistrationResponse = Message<"zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationResponse
 */
export declare type VerifyOTPEmailRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationResponse.
 * Use `create(VerifyOTPEmailRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyOTPEmailRegistrationResponseSchema: GenMessage<VerifyOTPEmailRegistrationResponse, {jsonType: VerifyOTPEmailRegistrationResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorRequest
 */
export declare type RemoveOTPEmailAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the OTP Email authenticator.
   *
   * @generated from field: string otp_email_id = 4;
   */
  otpEmailId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorRequest
 */
export declare type RemoveOTPEmailAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the OTP Email authenticator.
   *
   * @generated from field: string otp_email_id = 4;
   */
  otpEmailId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorRequest.
 * Use `create(RemoveOTPEmailAuthenticatorRequestSchema)` to create a new message.
 */
export declare const RemoveOTPEmailAuthenticatorRequestSchema: GenMessage<RemoveOTPEmailAuthenticatorRequest, {jsonType: RemoveOTPEmailAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorResponse
 */
export declare type RemoveOTPEmailAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorResponse
 */
export declare type RemoveOTPEmailAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorResponse.
 * Use `create(RemoveOTPEmailAuthenticatorResponseSchema)` to create a new message.
 */
export declare const RemoveOTPEmailAuthenticatorResponseSchema: GenMessage<RemoveOTPEmailAuthenticatorResponse, {jsonType: RemoveOTPEmailAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest
 */
export declare type StartIdentityProviderIntentRequest = Message<"zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * ID of an existing identity provider (IDP).
   *
   * @generated from field: string idp_id = 3;
   */
  idpId: string;

  /**
   * @generated from oneof zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest.content
   */
  content: {
    /**
     * @generated from field: zitadel.resources.user.v3alpha.RedirectURLs urls = 4;
     */
    value: RedirectURLs;
    case: "urls";
  } | {
    /**
     * @generated from field: zitadel.resources.user.v3alpha.LDAPCredentials ldap = 5;
     */
    value: LDAPCredentials;
    case: "ldap";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest
 */
export declare type StartIdentityProviderIntentRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * ID of an existing identity provider (IDP).
   *
   * @generated from field: string idp_id = 3;
   */
  idpId?: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.RedirectURLs urls = 4;
   */
  urls?: RedirectURLsJson;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.LDAPCredentials ldap = 5;
   */
  ldap?: LDAPCredentialsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest.
 * Use `create(StartIdentityProviderIntentRequestSchema)` to create a new message.
 */
export declare const StartIdentityProviderIntentRequestSchema: GenMessage<StartIdentityProviderIntentRequest, {jsonType: StartIdentityProviderIntentRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse
 */
export declare type StartIdentityProviderIntentResponse = Message<"zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * the next step to take in the idp intent flow.
   *
   * @generated from oneof zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse.next_step
   */
  nextStep: {
    /**
     * The authentication URL to which the client should redirect.
     *
     * @generated from field: string auth_url = 2;
     */
    value: string;
    case: "authUrl";
  } | {
    /**
     * The Start Intent directly succeeded and returned the IDP Intent.
     * Further information can be retrieved by using the retrieve identity provider intent request.
     *
     * @generated from field: zitadel.resources.user.v3alpha.IdentityProviderIntent idp_intent = 3;
     */
    value: IdentityProviderIntent;
    case: "idpIntent";
  } | {
    /**
     * The HTML form with the embedded POST call information to render and execute.
     *
     * @generated from field: bytes post_form = 4;
     */
    value: Uint8Array;
    case: "postForm";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse
 */
export declare type StartIdentityProviderIntentResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The authentication URL to which the client should redirect.
   *
   * @generated from field: string auth_url = 2;
   */
  authUrl?: string;

  /**
   * The Start Intent directly succeeded and returned the IDP Intent.
   * Further information can be retrieved by using the retrieve identity provider intent request.
   *
   * @generated from field: zitadel.resources.user.v3alpha.IdentityProviderIntent idp_intent = 3;
   */
  idpIntent?: IdentityProviderIntentJson;

  /**
   * The HTML form with the embedded POST call information to render and execute.
   *
   * @generated from field: bytes post_form = 4;
   */
  postForm?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse.
 * Use `create(StartIdentityProviderIntentResponseSchema)` to create a new message.
 */
export declare const StartIdentityProviderIntentResponseSchema: GenMessage<StartIdentityProviderIntentResponse, {jsonType: StartIdentityProviderIntentResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetIdentityProviderIntentRequest
 */
export declare type GetIdentityProviderIntentRequest = Message<"zitadel.resources.user.v3alpha.GetIdentityProviderIntentRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * ID of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
   *
   * @generated from field: string idp_intent_id = 3;
   */
  idpIntentId: string;

  /**
   * Token of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
   *
   * @generated from field: string idp_intent_token = 4;
   */
  idpIntentToken: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetIdentityProviderIntentRequest
 */
export declare type GetIdentityProviderIntentRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * ID of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
   *
   * @generated from field: string idp_intent_id = 3;
   */
  idpIntentId?: string;

  /**
   * Token of the identity provider (IDP) intent, previously returned on the success response of the start identity provider intent.
   *
   * @generated from field: string idp_intent_token = 4;
   */
  idpIntentToken?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetIdentityProviderIntentRequest.
 * Use `create(GetIdentityProviderIntentRequestSchema)` to create a new message.
 */
export declare const GetIdentityProviderIntentRequestSchema: GenMessage<GetIdentityProviderIntentRequest, {jsonType: GetIdentityProviderIntentRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.GetIdentityProviderIntentResponse
 */
export declare type GetIdentityProviderIntentResponse = Message<"zitadel.resources.user.v3alpha.GetIdentityProviderIntentResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;

  /**
   * Information returned by the identity provider (IDP) such as the identification of the user
   * and detailed / profile information.
   *
   * @generated from field: zitadel.resources.user.v3alpha.IDPInformation idp_information = 2;
   */
  idpInformation?: IDPInformation;

  /**
   * If the user was already federated and linked to a ZITADEL user, it's id will be returned.
   *
   * @generated from field: optional string id = 3;
   */
  id?: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.GetIdentityProviderIntentResponse
 */
export declare type GetIdentityProviderIntentResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * Information returned by the identity provider (IDP) such as the identification of the user
   * and detailed / profile information.
   *
   * @generated from field: zitadel.resources.user.v3alpha.IDPInformation idp_information = 2;
   */
  idpInformation?: IDPInformationJson;

  /**
   * If the user was already federated and linked to a ZITADEL user, it's id will be returned.
   *
   * @generated from field: optional string id = 3;
   */
  id?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.GetIdentityProviderIntentResponse.
 * Use `create(GetIdentityProviderIntentResponseSchema)` to create a new message.
 */
export declare const GetIdentityProviderIntentResponseSchema: GenMessage<GetIdentityProviderIntentResponse, {jsonType: GetIdentityProviderIntentResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddIDPAuthenticatorRequest
 */
export declare type AddIDPAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.AddIDPAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.IDPAuthenticator authenticator = 4;
   */
  authenticator?: IDPAuthenticator;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddIDPAuthenticatorRequest
 */
export declare type AddIDPAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * @generated from field: zitadel.resources.user.v3alpha.IDPAuthenticator authenticator = 4;
   */
  authenticator?: IDPAuthenticatorJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddIDPAuthenticatorRequest.
 * Use `create(AddIDPAuthenticatorRequestSchema)` to create a new message.
 */
export declare const AddIDPAuthenticatorRequestSchema: GenMessage<AddIDPAuthenticatorRequest, {jsonType: AddIDPAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.AddIDPAuthenticatorResponse
 */
export declare type AddIDPAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.AddIDPAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.AddIDPAuthenticatorResponse
 */
export declare type AddIDPAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.AddIDPAuthenticatorResponse.
 * Use `create(AddIDPAuthenticatorResponseSchema)` to create a new message.
 */
export declare const AddIDPAuthenticatorResponseSchema: GenMessage<AddIDPAuthenticatorResponse, {jsonType: AddIDPAuthenticatorResponseJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorRequest
 */
export declare type RemoveIDPAuthenticatorRequest = Message<"zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorRequest"> & {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: Instance;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: Organization;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * unique identifier of the identity provider (IDP) authenticator.
   *
   * @generated from field: string idp_id = 4;
   */
  idpId: string;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorRequest
 */
export declare type RemoveIDPAuthenticatorRequestJson = {
  /**
   * @generated from field: optional zitadel.object.v3alpha.Instance instance = 1;
   */
  instance?: InstanceJson;

  /**
   * Optionally expect the user to be in this organization.
   *
   * @generated from field: optional zitadel.object.v3alpha.Organization organization = 2;
   */
  organization?: OrganizationJson;

  /**
   * unique identifier of the user.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * unique identifier of the identity provider (IDP) authenticator.
   *
   * @generated from field: string idp_id = 4;
   */
  idpId?: string;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorRequest.
 * Use `create(RemoveIDPAuthenticatorRequestSchema)` to create a new message.
 */
export declare const RemoveIDPAuthenticatorRequestSchema: GenMessage<RemoveIDPAuthenticatorRequest, {jsonType: RemoveIDPAuthenticatorRequestJson}>;

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorResponse
 */
export declare type RemoveIDPAuthenticatorResponse = Message<"zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorResponse"> & {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorResponse
 */
export declare type RemoveIDPAuthenticatorResponseJson = {
  /**
   * @generated from field: zitadel.resources.object.v3alpha.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorResponse.
 * Use `create(RemoveIDPAuthenticatorResponseSchema)` to create a new message.
 */
export declare const RemoveIDPAuthenticatorResponseSchema: GenMessage<RemoveIDPAuthenticatorResponse, {jsonType: RemoveIDPAuthenticatorResponseJson}>;

/**
 * @generated from service zitadel.resources.user.v3alpha.ZITADELUsers
 */
export declare const ZITADELUsers: GenService<{
  /**
   * Search users
   *
   * Search all matching users. By default, we will return all users of your instance.
   * Make sure to include a limit and sorting for pagination.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.SearchUsers
   */
  searchUsers: {
    methodKind: "unary";
    input: typeof SearchUsersRequestSchema;
    output: typeof SearchUsersResponseSchema;
  },
  /**
   * User by ID
   *
   * Returns the user identified by the requested ID.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof GetUserResponseSchema;
  },
  /**
   * Create a user
   *
   * Create a new user with an optional data schema.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof CreateUserResponseSchema;
  },
  /**
   * Patch a user
   *
   * Patch an existing user with data based on a user schema.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.PatchUser
   */
  patchUser: {
    methodKind: "unary";
    input: typeof PatchUserRequestSchema;
    output: typeof PatchUserResponseSchema;
  },
  /**
   * Deactivate a user
   *
   * Deactivate an existing user and change the state 'deactivated'.
   * The user will not be able to log in anymore.
   * Use deactivate user when the user should not be able to use the account anymore,
   * but you still need access to the user data.
   *
   * The endpoint returns an error if the user is already in the state 'deactivated'.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.DeactivateUser
   */
  deactivateUser: {
    methodKind: "unary";
    input: typeof DeactivateUserRequestSchema;
    output: typeof DeactivateUserResponseSchema;
  },
  /**
   * Activate a user
   *
   * Activate a previously deactivated user and change the state to 'active'.
   * The user will be able to log in again.
   *
   * The endpoint returns an error if the user is not in the state 'deactivated'.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.ActivateUser
   */
  activateUser: {
    methodKind: "unary";
    input: typeof ActivateUserRequestSchema;
    output: typeof ActivateUserResponseSchema;
  },
  /**
   * Lock a user
   *
   * Lock an existing user and change the state 'locked'.
   * The user will not be able to log in anymore.
   * Use lock user when the user should temporarily not be able to log in
   * because of an event that happened (wrong password, etc.)
   *
   * The endpoint returns an error if the user is already in the state 'locked'.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.LockUser
   */
  lockUser: {
    methodKind: "unary";
    input: typeof LockUserRequestSchema;
    output: typeof LockUserResponseSchema;
  },
  /**
   * Unlock a user
   *
   * Unlock a previously locked user and change the state to 'active'.
   * The user will be able to log in again.
   *
   * The endpoint returns an error if the user is not in the state 'locked'.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.UnlockUser
   */
  unlockUser: {
    methodKind: "unary";
    input: typeof UnlockUserRequestSchema;
    output: typeof UnlockUserResponseSchema;
  },
  /**
   * Delete a user
   *
   * Delete an existing user and change the state to 'deleted'.
   * The user will be able to log in anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
  /**
   * Set contact email
   *
   * Add or update the contact email address of a user.
   * If the email is not passed as verified, a verification code will be generated,
   * which can be either returned or will be sent to the user by email.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.SetContactEmail
   */
  setContactEmail: {
    methodKind: "unary";
    input: typeof SetContactEmailRequestSchema;
    output: typeof SetContactEmailResponseSchema;
  },
  /**
   * Verify the contact email
   *
   * Verify the contact email with the provided code.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyContactEmail
   */
  verifyContactEmail: {
    methodKind: "unary";
    input: typeof VerifyContactEmailRequestSchema;
    output: typeof VerifyContactEmailResponseSchema;
  },
  /**
   * Resend the contact email code
   *
   * Resend the email with the verification code for the contact email address.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.ResendContactEmailCode
   */
  resendContactEmailCode: {
    methodKind: "unary";
    input: typeof ResendContactEmailCodeRequestSchema;
    output: typeof ResendContactEmailCodeResponseSchema;
  },
  /**
   * Set contact phone
   *
   * Add or update the contact phone number of a user.
   * If the phone is not passed as verified, a verification code will be generated,
   * which can be either returned or will be sent to the user by SMS.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.SetContactPhone
   */
  setContactPhone: {
    methodKind: "unary";
    input: typeof SetContactPhoneRequestSchema;
    output: typeof SetContactPhoneResponseSchema;
  },
  /**
   * Verify the contact phone
   *
   * Verify the contact phone with the provided code.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyContactPhone
   */
  verifyContactPhone: {
    methodKind: "unary";
    input: typeof VerifyContactPhoneRequestSchema;
    output: typeof VerifyContactPhoneResponseSchema;
  },
  /**
   * Resend the contact phone code
   *
   * Resend the phone with the verification code for the contact phone number.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.ResendContactPhoneCode
   */
  resendContactPhoneCode: {
    methodKind: "unary";
    input: typeof ResendContactPhoneCodeRequestSchema;
    output: typeof ResendContactPhoneCodeResponseSchema;
  },
  /**
   * Add a username
   *
   * Add a new unique username to a user. The username will be used to identify the user on authentication.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.AddUsername
   */
  addUsername: {
    methodKind: "unary";
    input: typeof AddUsernameRequestSchema;
    output: typeof AddUsernameResponseSchema;
  },
  /**
   * Remove a username
   *
   * Remove an existing username of a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveUsername
   */
  removeUsername: {
    methodKind: "unary";
    input: typeof RemoveUsernameRequestSchema;
    output: typeof RemoveUsernameResponseSchema;
  },
  /**
   * Set a password
   *
   * Add, update or reset a user's password with either a verification code or the current password.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.SetPassword
   */
  setPassword: {
    methodKind: "unary";
    input: typeof SetPasswordRequestSchema;
    output: typeof SetPasswordResponseSchema;
  },
  /**
   * Request password reset
   *
   * Request a code to be able to set a new password.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RequestPasswordReset
   */
  requestPasswordReset: {
    methodKind: "unary";
    input: typeof RequestPasswordResetRequestSchema;
    output: typeof RequestPasswordResetResponseSchema;
  },
  /**
   * Start a WebAuthN registration
   *
   * Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
   * As a response the public key credential creation options are returned,
   * which are used to verify the device.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.StartWebAuthNRegistration
   */
  startWebAuthNRegistration: {
    methodKind: "unary";
    input: typeof StartWebAuthNRegistrationRequestSchema;
    output: typeof StartWebAuthNRegistrationResponseSchema;
  },
  /**
   * Verify a WebAuthN registration
   *
   * Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyWebAuthNRegistration
   */
  verifyWebAuthNRegistration: {
    methodKind: "unary";
    input: typeof VerifyWebAuthNRegistrationRequestSchema;
    output: typeof VerifyWebAuthNRegistrationResponseSchema;
  },
  /**
   * Create a WebAuthN registration link
   *
   * Create a link, which includes a code, that can either be returned or directly sent to the user.
   * The code will allow the user to start a new WebAuthN registration.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.CreateWebAuthNRegistrationLink
   */
  createWebAuthNRegistrationLink: {
    methodKind: "unary";
    input: typeof CreateWebAuthNRegistrationLinkRequestSchema;
    output: typeof CreateWebAuthNRegistrationLinkResponseSchema;
  },
  /**
   * Remove a WebAuthN authenticator
   *
   * Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveWebAuthNAuthenticator
   */
  removeWebAuthNAuthenticator: {
    methodKind: "unary";
    input: typeof RemoveWebAuthNAuthenticatorRequestSchema;
    output: typeof RemoveWebAuthNAuthenticatorResponseSchema;
  },
  /**
   * Start a TOTP registration
   *
   * Start the registration of a new time-based one-time password (TOTP) generator for a user.
   * As a response a secret is returned, which is used to initialize a TOTP app or device.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.StartTOTPRegistration
   */
  startTOTPRegistration: {
    methodKind: "unary";
    input: typeof StartTOTPRegistrationRequestSchema;
    output: typeof StartTOTPRegistrationResponseSchema;
  },
  /**
   * Verify a TOTP registration
   *
   * Verify the time-based one-time password (TOTP) registration with the generated code.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyTOTPRegistration
   */
  verifyTOTPRegistration: {
    methodKind: "unary";
    input: typeof VerifyTOTPRegistrationRequestSchema;
    output: typeof VerifyTOTPRegistrationResponseSchema;
  },
  /**
   * Remove a TOTP authenticator
   *
   * Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveTOTPAuthenticator
   */
  removeTOTPAuthenticator: {
    methodKind: "unary";
    input: typeof RemoveTOTPAuthenticatorRequestSchema;
    output: typeof RemoveTOTPAuthenticatorResponseSchema;
  },
  /**
   * Add a OTP SMS authenticator
   *
   * Add a new one-time password (OTP) SMS authenticator to a user.
   * If the phone is not passed as verified, a verification code will be generated,
   * which can be either returned or will be sent to the user by SMS.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.AddOTPSMSAuthenticator
   */
  addOTPSMSAuthenticator: {
    methodKind: "unary";
    input: typeof AddOTPSMSAuthenticatorRequestSchema;
    output: typeof AddOTPSMSAuthenticatorResponseSchema;
  },
  /**
   * Verify OTP SMS registration
   *
   * Verify the OTP SMS registration with the provided code.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyOTPSMSRegistration
   */
  verifyOTPSMSRegistration: {
    methodKind: "unary";
    input: typeof VerifyOTPSMSRegistrationRequestSchema;
    output: typeof VerifyOTPSMSRegistrationResponseSchema;
  },
  /**
   * Remove a OTP SMS authenticator
   *
   * Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveOTPSMSAuthenticator
   */
  removeOTPSMSAuthenticator: {
    methodKind: "unary";
    input: typeof RemoveOTPSMSAuthenticatorRequestSchema;
    output: typeof RemoveOTPSMSAuthenticatorResponseSchema;
  },
  /**
   * Add a OTP Email authenticator
   *
   * Add a new one-time password (OTP) Email authenticator to a user.
   * If the email is not passed as verified, a verification code will be generated,
   * which can be either returned or will be sent to the user by email.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.AddOTPEmailAuthenticator
   */
  addOTPEmailAuthenticator: {
    methodKind: "unary";
    input: typeof AddOTPEmailAuthenticatorRequestSchema;
    output: typeof AddOTPEmailAuthenticatorResponseSchema;
  },
  /**
   * Verify OTP Email registration
   *
   * Verify the OTP Email registration with the provided code.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.VerifyOTPEmailRegistration
   */
  verifyOTPEmailRegistration: {
    methodKind: "unary";
    input: typeof VerifyOTPEmailRegistrationRequestSchema;
    output: typeof VerifyOTPEmailRegistrationResponseSchema;
  },
  /**
   * Remove a OTP Email authenticator
   *
   * Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveOTPEmailAuthenticator
   */
  removeOTPEmailAuthenticator: {
    methodKind: "unary";
    input: typeof RemoveOTPEmailAuthenticatorRequestSchema;
    output: typeof RemoveOTPEmailAuthenticatorResponseSchema;
  },
  /**
   * Start an IDP authentication intent
   *
   * Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.StartIdentityProviderIntent
   */
  startIdentityProviderIntent: {
    methodKind: "unary";
    input: typeof StartIdentityProviderIntentRequestSchema;
    output: typeof StartIdentityProviderIntentResponseSchema;
  },
  /**
   * Get the information of the IDP authentication intent
   *
   * Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.GetIdentityProviderIntent
   */
  getIdentityProviderIntent: {
    methodKind: "unary";
    input: typeof GetIdentityProviderIntentRequestSchema;
    output: typeof GetIdentityProviderIntentResponseSchema;
  },
  /**
   * Add an IDP authenticator to a user
   *
   * Add a new identity provider (IDP) authenticator to an existing user.
   * This will allow the user to authenticate with the provided IDP.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.AddIDPAuthenticator
   */
  addIDPAuthenticator: {
    methodKind: "unary";
    input: typeof AddIDPAuthenticatorRequestSchema;
    output: typeof AddIDPAuthenticatorResponseSchema;
  },
  /**
   * Remove an IDP authenticator
   *
   * Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
   *
   * @generated from rpc zitadel.resources.user.v3alpha.ZITADELUsers.RemoveIDPAuthenticator
   */
  removeIDPAuthenticator: {
    methodKind: "unary";
    input: typeof RemoveIDPAuthenticatorRequestSchema;
    output: typeof RemoveIDPAuthenticatorResponseSchema;
  },
}>;

