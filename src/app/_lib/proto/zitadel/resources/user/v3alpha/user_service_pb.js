// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/resources/user/v3alpha/user_service.proto (package zitadel.resources.user.v3alpha, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../../../../google/api/field_behavior_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../../validate/validate_pb.js";
import { file_zitadel_object_v3alpha_object } from "../../../object/v3alpha/object_pb.js";
import { file_zitadel_resources_object_v3alpha_object } from "../../object/v3alpha/object_pb.js";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../../protoc_gen_zitadel/v2/options_pb.js";
import { file_zitadel_resources_user_v3alpha_authenticator } from "./authenticator_pb.js";
import { file_zitadel_resources_user_v3alpha_communication } from "./communication_pb.js";
import { file_zitadel_resources_user_v3alpha_query } from "./query_pb.js";
import { file_zitadel_resources_user_v3alpha_user } from "./user_pb.js";

/**
 * Describes the file zitadel/resources/user/v3alpha/user_service.proto.
 */
export const file_zitadel_resources_user_v3alpha_user_service = /*@__PURE__*/
  fileDesc("", [file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_duration, file_google_protobuf_struct, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_object_v3alpha_object, file_zitadel_resources_object_v3alpha_object, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_resources_user_v3alpha_authenticator, file_zitadel_resources_user_v3alpha_communication, file_zitadel_resources_user_v3alpha_query, file_zitadel_resources_user_v3alpha_user]);

/**
 * Describes the message zitadel.resources.user.v3alpha.SearchUsersRequest.
 * Use `create(SearchUsersRequestSchema)` to create a new message.
 */
export const SearchUsersRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 0);

/**
 * Describes the message zitadel.resources.user.v3alpha.SearchUsersResponse.
 * Use `create(SearchUsersResponseSchema)` to create a new message.
 */
export const SearchUsersResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 1);

/**
 * Describes the message zitadel.resources.user.v3alpha.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export const GetUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 2);

/**
 * Describes the message zitadel.resources.user.v3alpha.GetUserResponse.
 * Use `create(GetUserResponseSchema)` to create a new message.
 */
export const GetUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 3);

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 4);

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export const CreateUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 5);

/**
 * Describes the message zitadel.resources.user.v3alpha.PatchUserRequest.
 * Use `create(PatchUserRequestSchema)` to create a new message.
 */
export const PatchUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 6);

/**
 * Describes the message zitadel.resources.user.v3alpha.PatchUserResponse.
 * Use `create(PatchUserResponseSchema)` to create a new message.
 */
export const PatchUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 7);

/**
 * Describes the message zitadel.resources.user.v3alpha.DeactivateUserRequest.
 * Use `create(DeactivateUserRequestSchema)` to create a new message.
 */
export const DeactivateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 8);

/**
 * Describes the message zitadel.resources.user.v3alpha.DeactivateUserResponse.
 * Use `create(DeactivateUserResponseSchema)` to create a new message.
 */
export const DeactivateUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 9);

/**
 * Describes the message zitadel.resources.user.v3alpha.ActivateUserRequest.
 * Use `create(ActivateUserRequestSchema)` to create a new message.
 */
export const ActivateUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 10);

/**
 * Describes the message zitadel.resources.user.v3alpha.ActivateUserResponse.
 * Use `create(ActivateUserResponseSchema)` to create a new message.
 */
export const ActivateUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 11);

/**
 * Describes the message zitadel.resources.user.v3alpha.LockUserRequest.
 * Use `create(LockUserRequestSchema)` to create a new message.
 */
export const LockUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 12);

/**
 * Describes the message zitadel.resources.user.v3alpha.LockUserResponse.
 * Use `create(LockUserResponseSchema)` to create a new message.
 */
export const LockUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 13);

/**
 * Describes the message zitadel.resources.user.v3alpha.UnlockUserRequest.
 * Use `create(UnlockUserRequestSchema)` to create a new message.
 */
export const UnlockUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 14);

/**
 * Describes the message zitadel.resources.user.v3alpha.UnlockUserResponse.
 * Use `create(UnlockUserResponseSchema)` to create a new message.
 */
export const UnlockUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 15);

/**
 * Describes the message zitadel.resources.user.v3alpha.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export const DeleteUserRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 16);

/**
 * Describes the message zitadel.resources.user.v3alpha.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export const DeleteUserResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 17);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactEmailRequest.
 * Use `create(SetContactEmailRequestSchema)` to create a new message.
 */
export const SetContactEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 18);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactEmailResponse.
 * Use `create(SetContactEmailResponseSchema)` to create a new message.
 */
export const SetContactEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 19);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactEmailRequest.
 * Use `create(VerifyContactEmailRequestSchema)` to create a new message.
 */
export const VerifyContactEmailRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 20);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactEmailResponse.
 * Use `create(VerifyContactEmailResponseSchema)` to create a new message.
 */
export const VerifyContactEmailResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 21);

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactEmailCodeRequest.
 * Use `create(ResendContactEmailCodeRequestSchema)` to create a new message.
 */
export const ResendContactEmailCodeRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 22);

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactEmailCodeResponse.
 * Use `create(ResendContactEmailCodeResponseSchema)` to create a new message.
 */
export const ResendContactEmailCodeResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 23);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactPhoneRequest.
 * Use `create(SetContactPhoneRequestSchema)` to create a new message.
 */
export const SetContactPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 24);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetContactPhoneResponse.
 * Use `create(SetContactPhoneResponseSchema)` to create a new message.
 */
export const SetContactPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 25);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactPhoneRequest.
 * Use `create(VerifyContactPhoneRequestSchema)` to create a new message.
 */
export const VerifyContactPhoneRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 26);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyContactPhoneResponse.
 * Use `create(VerifyContactPhoneResponseSchema)` to create a new message.
 */
export const VerifyContactPhoneResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 27);

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactPhoneCodeRequest.
 * Use `create(ResendContactPhoneCodeRequestSchema)` to create a new message.
 */
export const ResendContactPhoneCodeRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 28);

/**
 * Describes the message zitadel.resources.user.v3alpha.ResendContactPhoneCodeResponse.
 * Use `create(ResendContactPhoneCodeResponseSchema)` to create a new message.
 */
export const ResendContactPhoneCodeResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 29);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddUsernameRequest.
 * Use `create(AddUsernameRequestSchema)` to create a new message.
 */
export const AddUsernameRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 30);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddUsernameResponse.
 * Use `create(AddUsernameResponseSchema)` to create a new message.
 */
export const AddUsernameResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 31);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveUsernameRequest.
 * Use `create(RemoveUsernameRequestSchema)` to create a new message.
 */
export const RemoveUsernameRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 32);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveUsernameResponse.
 * Use `create(RemoveUsernameResponseSchema)` to create a new message.
 */
export const RemoveUsernameResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 33);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPasswordRequest.
 * Use `create(SetPasswordRequestSchema)` to create a new message.
 */
export const SetPasswordRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 34);

/**
 * Describes the message zitadel.resources.user.v3alpha.SetPasswordResponse.
 * Use `create(SetPasswordResponseSchema)` to create a new message.
 */
export const SetPasswordResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 35);

/**
 * Describes the message zitadel.resources.user.v3alpha.RequestPasswordResetRequest.
 * Use `create(RequestPasswordResetRequestSchema)` to create a new message.
 */
export const RequestPasswordResetRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 36);

/**
 * Describes the message zitadel.resources.user.v3alpha.RequestPasswordResetResponse.
 * Use `create(RequestPasswordResetResponseSchema)` to create a new message.
 */
export const RequestPasswordResetResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 37);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationRequest.
 * Use `create(StartWebAuthNRegistrationRequestSchema)` to create a new message.
 */
export const StartWebAuthNRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 38);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartWebAuthNRegistrationResponse.
 * Use `create(StartWebAuthNRegistrationResponseSchema)` to create a new message.
 */
export const StartWebAuthNRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 39);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationRequest.
 * Use `create(VerifyWebAuthNRegistrationRequestSchema)` to create a new message.
 */
export const VerifyWebAuthNRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 40);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyWebAuthNRegistrationResponse.
 * Use `create(VerifyWebAuthNRegistrationResponseSchema)` to create a new message.
 */
export const VerifyWebAuthNRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 41);

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkRequest.
 * Use `create(CreateWebAuthNRegistrationLinkRequestSchema)` to create a new message.
 */
export const CreateWebAuthNRegistrationLinkRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 42);

/**
 * Describes the message zitadel.resources.user.v3alpha.CreateWebAuthNRegistrationLinkResponse.
 * Use `create(CreateWebAuthNRegistrationLinkResponseSchema)` to create a new message.
 */
export const CreateWebAuthNRegistrationLinkResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 43);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorRequest.
 * Use `create(RemoveWebAuthNAuthenticatorRequestSchema)` to create a new message.
 */
export const RemoveWebAuthNAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 44);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveWebAuthNAuthenticatorResponse.
 * Use `create(RemoveWebAuthNAuthenticatorResponseSchema)` to create a new message.
 */
export const RemoveWebAuthNAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 45);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartTOTPRegistrationRequest.
 * Use `create(StartTOTPRegistrationRequestSchema)` to create a new message.
 */
export const StartTOTPRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 46);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartTOTPRegistrationResponse.
 * Use `create(StartTOTPRegistrationResponseSchema)` to create a new message.
 */
export const StartTOTPRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 47);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationRequest.
 * Use `create(VerifyTOTPRegistrationRequestSchema)` to create a new message.
 */
export const VerifyTOTPRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 48);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyTOTPRegistrationResponse.
 * Use `create(VerifyTOTPRegistrationResponseSchema)` to create a new message.
 */
export const VerifyTOTPRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 49);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorRequest.
 * Use `create(RemoveTOTPAuthenticatorRequestSchema)` to create a new message.
 */
export const RemoveTOTPAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 50);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveTOTPAuthenticatorResponse.
 * Use `create(RemoveTOTPAuthenticatorResponseSchema)` to create a new message.
 */
export const RemoveTOTPAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 51);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorRequest.
 * Use `create(AddOTPSMSAuthenticatorRequestSchema)` to create a new message.
 */
export const AddOTPSMSAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 52);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPSMSAuthenticatorResponse.
 * Use `create(AddOTPSMSAuthenticatorResponseSchema)` to create a new message.
 */
export const AddOTPSMSAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 53);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationRequest.
 * Use `create(VerifyOTPSMSRegistrationRequestSchema)` to create a new message.
 */
export const VerifyOTPSMSRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 54);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPSMSRegistrationResponse.
 * Use `create(VerifyOTPSMSRegistrationResponseSchema)` to create a new message.
 */
export const VerifyOTPSMSRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 55);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorRequest.
 * Use `create(RemoveOTPSMSAuthenticatorRequestSchema)` to create a new message.
 */
export const RemoveOTPSMSAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 56);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPSMSAuthenticatorResponse.
 * Use `create(RemoveOTPSMSAuthenticatorResponseSchema)` to create a new message.
 */
export const RemoveOTPSMSAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 57);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorRequest.
 * Use `create(AddOTPEmailAuthenticatorRequestSchema)` to create a new message.
 */
export const AddOTPEmailAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 58);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddOTPEmailAuthenticatorResponse.
 * Use `create(AddOTPEmailAuthenticatorResponseSchema)` to create a new message.
 */
export const AddOTPEmailAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 59);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationRequest.
 * Use `create(VerifyOTPEmailRegistrationRequestSchema)` to create a new message.
 */
export const VerifyOTPEmailRegistrationRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 60);

/**
 * Describes the message zitadel.resources.user.v3alpha.VerifyOTPEmailRegistrationResponse.
 * Use `create(VerifyOTPEmailRegistrationResponseSchema)` to create a new message.
 */
export const VerifyOTPEmailRegistrationResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 61);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorRequest.
 * Use `create(RemoveOTPEmailAuthenticatorRequestSchema)` to create a new message.
 */
export const RemoveOTPEmailAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 62);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveOTPEmailAuthenticatorResponse.
 * Use `create(RemoveOTPEmailAuthenticatorResponseSchema)` to create a new message.
 */
export const RemoveOTPEmailAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 63);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartIdentityProviderIntentRequest.
 * Use `create(StartIdentityProviderIntentRequestSchema)` to create a new message.
 */
export const StartIdentityProviderIntentRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 64);

/**
 * Describes the message zitadel.resources.user.v3alpha.StartIdentityProviderIntentResponse.
 * Use `create(StartIdentityProviderIntentResponseSchema)` to create a new message.
 */
export const StartIdentityProviderIntentResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 65);

/**
 * Describes the message zitadel.resources.user.v3alpha.GetIdentityProviderIntentRequest.
 * Use `create(GetIdentityProviderIntentRequestSchema)` to create a new message.
 */
export const GetIdentityProviderIntentRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 66);

/**
 * Describes the message zitadel.resources.user.v3alpha.GetIdentityProviderIntentResponse.
 * Use `create(GetIdentityProviderIntentResponseSchema)` to create a new message.
 */
export const GetIdentityProviderIntentResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 67);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddIDPAuthenticatorRequest.
 * Use `create(AddIDPAuthenticatorRequestSchema)` to create a new message.
 */
export const AddIDPAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 68);

/**
 * Describes the message zitadel.resources.user.v3alpha.AddIDPAuthenticatorResponse.
 * Use `create(AddIDPAuthenticatorResponseSchema)` to create a new message.
 */
export const AddIDPAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 69);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorRequest.
 * Use `create(RemoveIDPAuthenticatorRequestSchema)` to create a new message.
 */
export const RemoveIDPAuthenticatorRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 70);

/**
 * Describes the message zitadel.resources.user.v3alpha.RemoveIDPAuthenticatorResponse.
 * Use `create(RemoveIDPAuthenticatorResponseSchema)` to create a new message.
 */
export const RemoveIDPAuthenticatorResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_resources_user_v3alpha_user_service, 71);

/**
 * @generated from service zitadel.resources.user.v3alpha.ZITADELUsers
 */
export const ZITADELUsers = /*@__PURE__*/
  serviceDesc(file_zitadel_resources_user_v3alpha_user_service, 0);

