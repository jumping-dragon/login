// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/saml/v2/saml_service.proto (package zitadel.saml.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { AuthorizationError, AuthorizationErrorJson, SAMLRequest, SAMLRequestJson } from "./authorization_pb.js";
import type { Details, DetailsJson } from "../../object/v2/object_pb.js";

/**
 * Describes the file zitadel/saml/v2/saml_service.proto.
 */
export declare const file_zitadel_saml_v2_saml_service: GenFile;

/**
 * @generated from message zitadel.saml.v2.GetSAMLRequestRequest
 */
export declare type GetSAMLRequestRequest = Message<"zitadel.saml.v2.GetSAMLRequestRequest"> & {
  /**
   * ID of the SAML Request, as obtained from the redirect URL.
   *
   * @generated from field: string saml_request_id = 1;
   */
  samlRequestId: string;
};

/**
 * @generated from message zitadel.saml.v2.GetSAMLRequestRequest
 */
export declare type GetSAMLRequestRequestJson = {
  /**
   * ID of the SAML Request, as obtained from the redirect URL.
   *
   * @generated from field: string saml_request_id = 1;
   */
  samlRequestId?: string;
};

/**
 * Describes the message zitadel.saml.v2.GetSAMLRequestRequest.
 * Use `create(GetSAMLRequestRequestSchema)` to create a new message.
 */
export declare const GetSAMLRequestRequestSchema: GenMessage<GetSAMLRequestRequest, {jsonType: GetSAMLRequestRequestJson}>;

/**
 * @generated from message zitadel.saml.v2.GetSAMLRequestResponse
 */
export declare type GetSAMLRequestResponse = Message<"zitadel.saml.v2.GetSAMLRequestResponse"> & {
  /**
   * @generated from field: zitadel.saml.v2.SAMLRequest saml_request = 1;
   */
  samlRequest?: SAMLRequest;
};

/**
 * @generated from message zitadel.saml.v2.GetSAMLRequestResponse
 */
export declare type GetSAMLRequestResponseJson = {
  /**
   * @generated from field: zitadel.saml.v2.SAMLRequest saml_request = 1;
   */
  samlRequest?: SAMLRequestJson;
};

/**
 * Describes the message zitadel.saml.v2.GetSAMLRequestResponse.
 * Use `create(GetSAMLRequestResponseSchema)` to create a new message.
 */
export declare const GetSAMLRequestResponseSchema: GenMessage<GetSAMLRequestResponse, {jsonType: GetSAMLRequestResponseJson}>;

/**
 * @generated from message zitadel.saml.v2.CreateResponseRequest
 */
export declare type CreateResponseRequest = Message<"zitadel.saml.v2.CreateResponseRequest"> & {
  /**
   * ID of the SAML Request.
   *
   * @generated from field: string saml_request_id = 1;
   */
  samlRequestId: string;

  /**
   * @generated from oneof zitadel.saml.v2.CreateResponseRequest.response_kind
   */
  responseKind: {
    /**
     * @generated from field: zitadel.saml.v2.Session session = 2;
     */
    value: Session;
    case: "session";
  } | {
    /**
     * Set this field when the authorization flow failed. It creates a response depending on the SP, with the error details set.
     *
     * @generated from field: zitadel.saml.v2.AuthorizationError error = 3;
     */
    value: AuthorizationError;
    case: "error";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.saml.v2.CreateResponseRequest
 */
export declare type CreateResponseRequestJson = {
  /**
   * ID of the SAML Request.
   *
   * @generated from field: string saml_request_id = 1;
   */
  samlRequestId?: string;

  /**
   * @generated from field: zitadel.saml.v2.Session session = 2;
   */
  session?: SessionJson;

  /**
   * Set this field when the authorization flow failed. It creates a response depending on the SP, with the error details set.
   *
   * @generated from field: zitadel.saml.v2.AuthorizationError error = 3;
   */
  error?: AuthorizationErrorJson;
};

/**
 * Describes the message zitadel.saml.v2.CreateResponseRequest.
 * Use `create(CreateResponseRequestSchema)` to create a new message.
 */
export declare const CreateResponseRequestSchema: GenMessage<CreateResponseRequest, {jsonType: CreateResponseRequestJson}>;

/**
 * @generated from message zitadel.saml.v2.Session
 */
export declare type Session = Message<"zitadel.saml.v2.Session"> & {
  /**
   * ID of the session, used to login the user. Connects the session to the SAML Request.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * Token to verify the session is valid.
   *
   * @generated from field: string session_token = 2;
   */
  sessionToken: string;
};

/**
 * @generated from message zitadel.saml.v2.Session
 */
export declare type SessionJson = {
  /**
   * ID of the session, used to login the user. Connects the session to the SAML Request.
   *
   * @generated from field: string session_id = 1;
   */
  sessionId?: string;

  /**
   * Token to verify the session is valid.
   *
   * @generated from field: string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * Describes the message zitadel.saml.v2.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export declare const SessionSchema: GenMessage<Session, {jsonType: SessionJson}>;

/**
 * @generated from message zitadel.saml.v2.CreateResponseResponse
 */
export declare type CreateResponseResponse = Message<"zitadel.saml.v2.CreateResponseResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * URL including the Assertion Consumer Service where the user should be redirected or has to call per POST, depending on the binding. Contains details for the application to obtain the response on success, or error details on failure. Note that this field must be treated as credentials, as the contained SAMLResponse or code can be used on behalve of the user.
   *
   * @generated from field: string url = 2;
   */
  url: string;

  /**
   * Binding is defined through the request, what the IDP is able to use and what bindings are available for the SP.
   *
   * @generated from oneof zitadel.saml.v2.CreateResponseResponse.binding
   */
  binding: {
    /**
     * Set if the binding is Redirect-Binding, where the user can directly be redirected to the application, using a \"302 FOUND\" status to the URL.
     *
     * @generated from field: zitadel.saml.v2.RedirectResponse redirect = 3;
     */
    value: RedirectResponse;
    case: "redirect";
  } | {
    /**
     * Set if the binding is POST-Binding, where the application expects to be called per HTTP POST with the SAMLResponse and RelayState in the form body.
     *
     * @generated from field: zitadel.saml.v2.PostResponse post = 4;
     */
    value: PostResponse;
    case: "post";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.saml.v2.CreateResponseResponse
 */
export declare type CreateResponseResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * URL including the Assertion Consumer Service where the user should be redirected or has to call per POST, depending on the binding. Contains details for the application to obtain the response on success, or error details on failure. Note that this field must be treated as credentials, as the contained SAMLResponse or code can be used on behalve of the user.
   *
   * @generated from field: string url = 2;
   */
  url?: string;

  /**
   * Set if the binding is Redirect-Binding, where the user can directly be redirected to the application, using a \"302 FOUND\" status to the URL.
   *
   * @generated from field: zitadel.saml.v2.RedirectResponse redirect = 3;
   */
  redirect?: RedirectResponseJson;

  /**
   * Set if the binding is POST-Binding, where the application expects to be called per HTTP POST with the SAMLResponse and RelayState in the form body.
   *
   * @generated from field: zitadel.saml.v2.PostResponse post = 4;
   */
  post?: PostResponseJson;
};

/**
 * Describes the message zitadel.saml.v2.CreateResponseResponse.
 * Use `create(CreateResponseResponseSchema)` to create a new message.
 */
export declare const CreateResponseResponseSchema: GenMessage<CreateResponseResponse, {jsonType: CreateResponseResponseJson}>;

/**
 * @generated from message zitadel.saml.v2.RedirectResponse
 */
export declare type RedirectResponse = Message<"zitadel.saml.v2.RedirectResponse"> & {
};

/**
 * @generated from message zitadel.saml.v2.RedirectResponse
 */
export declare type RedirectResponseJson = {
};

/**
 * Describes the message zitadel.saml.v2.RedirectResponse.
 * Use `create(RedirectResponseSchema)` to create a new message.
 */
export declare const RedirectResponseSchema: GenMessage<RedirectResponse, {jsonType: RedirectResponseJson}>;

/**
 * @generated from message zitadel.saml.v2.PostResponse
 */
export declare type PostResponse = Message<"zitadel.saml.v2.PostResponse"> & {
  /**
   * @generated from field: string relay_state = 1;
   */
  relayState: string;

  /**
   * @generated from field: string saml_response = 2;
   */
  samlResponse: string;
};

/**
 * @generated from message zitadel.saml.v2.PostResponse
 */
export declare type PostResponseJson = {
  /**
   * @generated from field: string relay_state = 1;
   */
  relayState?: string;

  /**
   * @generated from field: string saml_response = 2;
   */
  samlResponse?: string;
};

/**
 * Describes the message zitadel.saml.v2.PostResponse.
 * Use `create(PostResponseSchema)` to create a new message.
 */
export declare const PostResponseSchema: GenMessage<PostResponse, {jsonType: PostResponseJson}>;

/**
 * @generated from service zitadel.saml.v2.SAMLService
 */
export declare const SAMLService: GenService<{
  /**
   * @generated from rpc zitadel.saml.v2.SAMLService.GetSAMLRequest
   */
  getSAMLRequest: {
    methodKind: "unary";
    input: typeof GetSAMLRequestRequestSchema;
    output: typeof GetSAMLRequestResponseSchema;
  },
  /**
   * @generated from rpc zitadel.saml.v2.SAMLService.CreateResponse
   */
  createResponse: {
    methodKind: "unary";
    input: typeof CreateResponseRequestSchema;
    output: typeof CreateResponseResponseSchema;
  },
}>;

