// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/session/v2/session.proto (package zitadel.session.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { TimestampQueryMethod, TimestampQueryMethodJson } from "../../object_pb.js";

/**
 * Describes the file zitadel/session/v2/session.proto.
 */
export declare const file_zitadel_session_v2_session: GenFile;

/**
 * @generated from message zitadel.session.v2.Session
 */
export declare type Session = Message<"zitadel.session.v2.Session"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp change_date = 3;
   */
  changeDate?: Timestamp;

  /**
   * @generated from field: uint64 sequence = 4;
   */
  sequence: bigint;

  /**
   * @generated from field: zitadel.session.v2.Factors factors = 5;
   */
  factors?: Factors;

  /**
   * @generated from field: map<string, bytes> metadata = 6;
   */
  metadata: { [key: string]: Uint8Array };

  /**
   * @generated from field: zitadel.session.v2.UserAgent user_agent = 7;
   */
  userAgent?: UserAgent;

  /**
   * @generated from field: optional google.protobuf.Timestamp expiration_date = 8;
   */
  expirationDate?: Timestamp;
};

/**
 * @generated from message zitadel.session.v2.Session
 */
export declare type SessionJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Timestamp change_date = 3;
   */
  changeDate?: TimestampJson;

  /**
   * @generated from field: uint64 sequence = 4;
   */
  sequence?: string;

  /**
   * @generated from field: zitadel.session.v2.Factors factors = 5;
   */
  factors?: FactorsJson;

  /**
   * @generated from field: map<string, bytes> metadata = 6;
   */
  metadata?: { [key: string]: string };

  /**
   * @generated from field: zitadel.session.v2.UserAgent user_agent = 7;
   */
  userAgent?: UserAgentJson;

  /**
   * @generated from field: optional google.protobuf.Timestamp expiration_date = 8;
   */
  expirationDate?: TimestampJson;
};

/**
 * Describes the message zitadel.session.v2.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export declare const SessionSchema: GenMessage<Session, {jsonType: SessionJson}>;

/**
 * @generated from message zitadel.session.v2.Factors
 */
export declare type Factors = Message<"zitadel.session.v2.Factors"> & {
  /**
   * @generated from field: zitadel.session.v2.UserFactor user = 1;
   */
  user?: UserFactor;

  /**
   * @generated from field: zitadel.session.v2.PasswordFactor password = 2;
   */
  password?: PasswordFactor;

  /**
   * @generated from field: zitadel.session.v2.WebAuthNFactor web_auth_n = 3;
   */
  webAuthN?: WebAuthNFactor;

  /**
   * @generated from field: zitadel.session.v2.IntentFactor intent = 4;
   */
  intent?: IntentFactor;

  /**
   * @generated from field: zitadel.session.v2.TOTPFactor totp = 5;
   */
  totp?: TOTPFactor;

  /**
   * @generated from field: zitadel.session.v2.OTPFactor otp_sms = 6;
   */
  otpSms?: OTPFactor;

  /**
   * @generated from field: zitadel.session.v2.OTPFactor otp_email = 7;
   */
  otpEmail?: OTPFactor;
};

/**
 * @generated from message zitadel.session.v2.Factors
 */
export declare type FactorsJson = {
  /**
   * @generated from field: zitadel.session.v2.UserFactor user = 1;
   */
  user?: UserFactorJson;

  /**
   * @generated from field: zitadel.session.v2.PasswordFactor password = 2;
   */
  password?: PasswordFactorJson;

  /**
   * @generated from field: zitadel.session.v2.WebAuthNFactor web_auth_n = 3;
   */
  webAuthN?: WebAuthNFactorJson;

  /**
   * @generated from field: zitadel.session.v2.IntentFactor intent = 4;
   */
  intent?: IntentFactorJson;

  /**
   * @generated from field: zitadel.session.v2.TOTPFactor totp = 5;
   */
  totp?: TOTPFactorJson;

  /**
   * @generated from field: zitadel.session.v2.OTPFactor otp_sms = 6;
   */
  otpSms?: OTPFactorJson;

  /**
   * @generated from field: zitadel.session.v2.OTPFactor otp_email = 7;
   */
  otpEmail?: OTPFactorJson;
};

/**
 * Describes the message zitadel.session.v2.Factors.
 * Use `create(FactorsSchema)` to create a new message.
 */
export declare const FactorsSchema: GenMessage<Factors, {jsonType: FactorsJson}>;

/**
 * @generated from message zitadel.session.v2.UserFactor
 */
export declare type UserFactor = Message<"zitadel.session.v2.UserFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: string login_name = 3;
   */
  loginName: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId: string;
};

/**
 * @generated from message zitadel.session.v2.UserFactor
 */
export declare type UserFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;

  /**
   * @generated from field: string id = 2;
   */
  id?: string;

  /**
   * @generated from field: string login_name = 3;
   */
  loginName?: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId?: string;
};

/**
 * Describes the message zitadel.session.v2.UserFactor.
 * Use `create(UserFactorSchema)` to create a new message.
 */
export declare const UserFactorSchema: GenMessage<UserFactor, {jsonType: UserFactorJson}>;

/**
 * @generated from message zitadel.session.v2.PasswordFactor
 */
export declare type PasswordFactor = Message<"zitadel.session.v2.PasswordFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;
};

/**
 * @generated from message zitadel.session.v2.PasswordFactor
 */
export declare type PasswordFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;
};

/**
 * Describes the message zitadel.session.v2.PasswordFactor.
 * Use `create(PasswordFactorSchema)` to create a new message.
 */
export declare const PasswordFactorSchema: GenMessage<PasswordFactor, {jsonType: PasswordFactorJson}>;

/**
 * @generated from message zitadel.session.v2.IntentFactor
 */
export declare type IntentFactor = Message<"zitadel.session.v2.IntentFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;
};

/**
 * @generated from message zitadel.session.v2.IntentFactor
 */
export declare type IntentFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;
};

/**
 * Describes the message zitadel.session.v2.IntentFactor.
 * Use `create(IntentFactorSchema)` to create a new message.
 */
export declare const IntentFactorSchema: GenMessage<IntentFactor, {jsonType: IntentFactorJson}>;

/**
 * @generated from message zitadel.session.v2.WebAuthNFactor
 */
export declare type WebAuthNFactor = Message<"zitadel.session.v2.WebAuthNFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;

  /**
   * @generated from field: bool user_verified = 2;
   */
  userVerified: boolean;
};

/**
 * @generated from message zitadel.session.v2.WebAuthNFactor
 */
export declare type WebAuthNFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;

  /**
   * @generated from field: bool user_verified = 2;
   */
  userVerified?: boolean;
};

/**
 * Describes the message zitadel.session.v2.WebAuthNFactor.
 * Use `create(WebAuthNFactorSchema)` to create a new message.
 */
export declare const WebAuthNFactorSchema: GenMessage<WebAuthNFactor, {jsonType: WebAuthNFactorJson}>;

/**
 * @generated from message zitadel.session.v2.TOTPFactor
 */
export declare type TOTPFactor = Message<"zitadel.session.v2.TOTPFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;
};

/**
 * @generated from message zitadel.session.v2.TOTPFactor
 */
export declare type TOTPFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;
};

/**
 * Describes the message zitadel.session.v2.TOTPFactor.
 * Use `create(TOTPFactorSchema)` to create a new message.
 */
export declare const TOTPFactorSchema: GenMessage<TOTPFactor, {jsonType: TOTPFactorJson}>;

/**
 * @generated from message zitadel.session.v2.OTPFactor
 */
export declare type OTPFactor = Message<"zitadel.session.v2.OTPFactor"> & {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: Timestamp;
};

/**
 * @generated from message zitadel.session.v2.OTPFactor
 */
export declare type OTPFactorJson = {
  /**
   * @generated from field: google.protobuf.Timestamp verified_at = 1;
   */
  verifiedAt?: TimestampJson;
};

/**
 * Describes the message zitadel.session.v2.OTPFactor.
 * Use `create(OTPFactorSchema)` to create a new message.
 */
export declare const OTPFactorSchema: GenMessage<OTPFactor, {jsonType: OTPFactorJson}>;

/**
 * @generated from message zitadel.session.v2.SearchQuery
 */
export declare type SearchQuery = Message<"zitadel.session.v2.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.session.v2.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.session.v2.IDsQuery ids_query = 1;
     */
    value: IDsQuery;
    case: "idsQuery";
  } | {
    /**
     * @generated from field: zitadel.session.v2.UserIDQuery user_id_query = 2;
     */
    value: UserIDQuery;
    case: "userIdQuery";
  } | {
    /**
     * @generated from field: zitadel.session.v2.CreationDateQuery creation_date_query = 3;
     */
    value: CreationDateQuery;
    case: "creationDateQuery";
  } | {
    /**
     * @generated from field: zitadel.session.v2.CreatorQuery creator_query = 4;
     */
    value: CreatorQuery;
    case: "creatorQuery";
  } | {
    /**
     * @generated from field: zitadel.session.v2.UserAgentQuery user_agent_query = 5;
     */
    value: UserAgentQuery;
    case: "userAgentQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.session.v2.SearchQuery
 */
export declare type SearchQueryJson = {
  /**
   * @generated from field: zitadel.session.v2.IDsQuery ids_query = 1;
   */
  idsQuery?: IDsQueryJson;

  /**
   * @generated from field: zitadel.session.v2.UserIDQuery user_id_query = 2;
   */
  userIdQuery?: UserIDQueryJson;

  /**
   * @generated from field: zitadel.session.v2.CreationDateQuery creation_date_query = 3;
   */
  creationDateQuery?: CreationDateQueryJson;

  /**
   * @generated from field: zitadel.session.v2.CreatorQuery creator_query = 4;
   */
  creatorQuery?: CreatorQueryJson;

  /**
   * @generated from field: zitadel.session.v2.UserAgentQuery user_agent_query = 5;
   */
  userAgentQuery?: UserAgentQueryJson;
};

/**
 * Describes the message zitadel.session.v2.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export declare const SearchQuerySchema: GenMessage<SearchQuery, {jsonType: SearchQueryJson}>;

/**
 * @generated from message zitadel.session.v2.IDsQuery
 */
export declare type IDsQuery = Message<"zitadel.session.v2.IDsQuery"> & {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids: string[];
};

/**
 * @generated from message zitadel.session.v2.IDsQuery
 */
export declare type IDsQueryJson = {
  /**
   * @generated from field: repeated string ids = 1;
   */
  ids?: string[];
};

/**
 * Describes the message zitadel.session.v2.IDsQuery.
 * Use `create(IDsQuerySchema)` to create a new message.
 */
export declare const IDsQuerySchema: GenMessage<IDsQuery, {jsonType: IDsQueryJson}>;

/**
 * @generated from message zitadel.session.v2.UserIDQuery
 */
export declare type UserIDQuery = Message<"zitadel.session.v2.UserIDQuery"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * @generated from message zitadel.session.v2.UserIDQuery
 */
export declare type UserIDQueryJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.session.v2.UserIDQuery.
 * Use `create(UserIDQuerySchema)` to create a new message.
 */
export declare const UserIDQuerySchema: GenMessage<UserIDQuery, {jsonType: UserIDQueryJson}>;

/**
 * @generated from message zitadel.session.v2.CreationDateQuery
 */
export declare type CreationDateQuery = Message<"zitadel.session.v2.CreationDateQuery"> & {
  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: Timestamp;

  /**
   * @generated from field: zitadel.v1.TimestampQueryMethod method = 2;
   */
  method: TimestampQueryMethod;
};

/**
 * @generated from message zitadel.session.v2.CreationDateQuery
 */
export declare type CreationDateQueryJson = {
  /**
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: TimestampJson;

  /**
   * @generated from field: zitadel.v1.TimestampQueryMethod method = 2;
   */
  method?: TimestampQueryMethodJson;
};

/**
 * Describes the message zitadel.session.v2.CreationDateQuery.
 * Use `create(CreationDateQuerySchema)` to create a new message.
 */
export declare const CreationDateQuerySchema: GenMessage<CreationDateQuery, {jsonType: CreationDateQueryJson}>;

/**
 * @generated from message zitadel.session.v2.CreatorQuery
 */
export declare type CreatorQuery = Message<"zitadel.session.v2.CreatorQuery"> & {
  /**
   * ID of the user who created the session. If empty, the calling user's ID is used.
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;
};

/**
 * @generated from message zitadel.session.v2.CreatorQuery
 */
export declare type CreatorQueryJson = {
  /**
   * ID of the user who created the session. If empty, the calling user's ID is used.
   *
   * @generated from field: optional string id = 1;
   */
  id?: string;
};

/**
 * Describes the message zitadel.session.v2.CreatorQuery.
 * Use `create(CreatorQuerySchema)` to create a new message.
 */
export declare const CreatorQuerySchema: GenMessage<CreatorQuery, {jsonType: CreatorQueryJson}>;

/**
 * @generated from message zitadel.session.v2.UserAgentQuery
 */
export declare type UserAgentQuery = Message<"zitadel.session.v2.UserAgentQuery"> & {
  /**
   * Finger print id of the user agent used for the session.
   * Set an empty fingerprint_id to use the user agent from the call.
   * If the user agent is not available from the current token, an error will be returned.
   *
   * @generated from field: optional string fingerprint_id = 1;
   */
  fingerprintId?: string;
};

/**
 * @generated from message zitadel.session.v2.UserAgentQuery
 */
export declare type UserAgentQueryJson = {
  /**
   * Finger print id of the user agent used for the session.
   * Set an empty fingerprint_id to use the user agent from the call.
   * If the user agent is not available from the current token, an error will be returned.
   *
   * @generated from field: optional string fingerprint_id = 1;
   */
  fingerprintId?: string;
};

/**
 * Describes the message zitadel.session.v2.UserAgentQuery.
 * Use `create(UserAgentQuerySchema)` to create a new message.
 */
export declare const UserAgentQuerySchema: GenMessage<UserAgentQuery, {jsonType: UserAgentQueryJson}>;

/**
 * @generated from message zitadel.session.v2.UserAgent
 */
export declare type UserAgent = Message<"zitadel.session.v2.UserAgent"> & {
  /**
   * @generated from field: optional string fingerprint_id = 1;
   */
  fingerprintId?: string;

  /**
   * @generated from field: optional string ip = 2;
   */
  ip?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: map<string, zitadel.session.v2.UserAgent.HeaderValues> header = 4;
   */
  header: { [key: string]: UserAgent_HeaderValues };
};

/**
 * @generated from message zitadel.session.v2.UserAgent
 */
export declare type UserAgentJson = {
  /**
   * @generated from field: optional string fingerprint_id = 1;
   */
  fingerprintId?: string;

  /**
   * @generated from field: optional string ip = 2;
   */
  ip?: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  /**
   * @generated from field: map<string, zitadel.session.v2.UserAgent.HeaderValues> header = 4;
   */
  header?: { [key: string]: UserAgent_HeaderValuesJson };
};

/**
 * Describes the message zitadel.session.v2.UserAgent.
 * Use `create(UserAgentSchema)` to create a new message.
 */
export declare const UserAgentSchema: GenMessage<UserAgent, {jsonType: UserAgentJson}>;

/**
 * A header may have multiple values.
 * In Go, headers are defined
 * as map[string][]string, but protobuf
 * doesn't allow this scheme.
 *
 * @generated from message zitadel.session.v2.UserAgent.HeaderValues
 */
export declare type UserAgent_HeaderValues = Message<"zitadel.session.v2.UserAgent.HeaderValues"> & {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * A header may have multiple values.
 * In Go, headers are defined
 * as map[string][]string, but protobuf
 * doesn't allow this scheme.
 *
 * @generated from message zitadel.session.v2.UserAgent.HeaderValues
 */
export declare type UserAgent_HeaderValuesJson = {
  /**
   * @generated from field: repeated string values = 1;
   */
  values?: string[];
};

/**
 * Describes the message zitadel.session.v2.UserAgent.HeaderValues.
 * Use `create(UserAgent_HeaderValuesSchema)` to create a new message.
 */
export declare const UserAgent_HeaderValuesSchema: GenMessage<UserAgent_HeaderValues, {jsonType: UserAgent_HeaderValuesJson}>;

/**
 * @generated from enum zitadel.session.v2.SessionFieldName
 */
export enum SessionFieldName {
  /**
   * @generated from enum value: SESSION_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SESSION_FIELD_NAME_CREATION_DATE = 1;
   */
  CREATION_DATE = 1,
}

/**
 * @generated from enum zitadel.session.v2.SessionFieldName
 */
export declare type SessionFieldNameJson = "SESSION_FIELD_NAME_UNSPECIFIED" | "SESSION_FIELD_NAME_CREATION_DATE";

/**
 * Describes the enum zitadel.session.v2.SessionFieldName.
 */
export declare const SessionFieldNameSchema: GenEnum<SessionFieldName, SessionFieldNameJson>;

