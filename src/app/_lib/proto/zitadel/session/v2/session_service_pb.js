// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/session/v2/session_service.proto (package zitadel.session.v2, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_zitadel_object_v2_object } from "../../object/v2/object_pb.js";
import { file_zitadel_protoc_gen_zitadel_v2_options } from "../../protoc_gen_zitadel/v2/options_pb.js";
import { file_zitadel_session_v2_challenge } from "./challenge_pb.js";
import { file_zitadel_session_v2_session } from "./session_pb.js";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_struct } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../validate/validate_pb.js";

/**
 * Describes the file zitadel/session/v2/session_service.proto.
 */
export const file_zitadel_session_v2_session_service = /*@__PURE__*/
  fileDesc("", [file_zitadel_object_v2_object, file_zitadel_protoc_gen_zitadel_v2_options, file_zitadel_session_v2_challenge, file_zitadel_session_v2_session, file_google_api_annotations, file_google_api_field_behavior, file_google_protobuf_struct, file_google_protobuf_duration, file_protoc_gen_openapiv2_options_annotations, file_validate_validate]);

/**
 * Describes the message zitadel.session.v2.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export const ListSessionsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 0);

/**
 * Describes the message zitadel.session.v2.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export const ListSessionsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 1);

/**
 * Describes the message zitadel.session.v2.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export const GetSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 2);

/**
 * Describes the message zitadel.session.v2.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export const GetSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 3);

/**
 * Describes the message zitadel.session.v2.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export const CreateSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 4);

/**
 * Describes the message zitadel.session.v2.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export const CreateSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 5);

/**
 * Describes the message zitadel.session.v2.SetSessionRequest.
 * Use `create(SetSessionRequestSchema)` to create a new message.
 */
export const SetSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 6);

/**
 * Describes the message zitadel.session.v2.SetSessionResponse.
 * Use `create(SetSessionResponseSchema)` to create a new message.
 */
export const SetSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 7);

/**
 * Describes the message zitadel.session.v2.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export const DeleteSessionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 8);

/**
 * Describes the message zitadel.session.v2.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export const DeleteSessionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 9);

/**
 * Describes the message zitadel.session.v2.Checks.
 * Use `create(ChecksSchema)` to create a new message.
 */
export const ChecksSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 10);

/**
 * Describes the message zitadel.session.v2.CheckUser.
 * Use `create(CheckUserSchema)` to create a new message.
 */
export const CheckUserSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 11);

/**
 * Describes the message zitadel.session.v2.CheckPassword.
 * Use `create(CheckPasswordSchema)` to create a new message.
 */
export const CheckPasswordSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 12);

/**
 * Describes the message zitadel.session.v2.CheckWebAuthN.
 * Use `create(CheckWebAuthNSchema)` to create a new message.
 */
export const CheckWebAuthNSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 13);

/**
 * Describes the message zitadel.session.v2.CheckIDPIntent.
 * Use `create(CheckIDPIntentSchema)` to create a new message.
 */
export const CheckIDPIntentSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 14);

/**
 * Describes the message zitadel.session.v2.CheckTOTP.
 * Use `create(CheckTOTPSchema)` to create a new message.
 */
export const CheckTOTPSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 15);

/**
 * Describes the message zitadel.session.v2.CheckOTP.
 * Use `create(CheckOTPSchema)` to create a new message.
 */
export const CheckOTPSchema = /*@__PURE__*/
  messageDesc(file_zitadel_session_v2_session_service, 16);

/**
 * @generated from service zitadel.session.v2.SessionService
 */
export const SessionService = /*@__PURE__*/
  serviceDesc(file_zitadel_session_v2_session_service, 0);

