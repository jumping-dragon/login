// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/session/v2beta/session_service.proto (package zitadel.session.v2beta, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Details, DetailsJson, ListDetails, ListDetailsJson, ListQuery, ListQueryJson } from "../../object/v2beta/object_pb.js";
import type { SearchQuery, SearchQueryJson, Session, SessionFieldName, SessionFieldNameJson, SessionJson, UserAgent, UserAgentJson } from "./session_pb.js";
import type { Challenges, ChallengesJson, RequestChallenges, RequestChallengesJson } from "./challenge_pb.js";
import type { Duration, DurationJson, StructJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/session/v2beta/session_service.proto.
 */
export declare const file_zitadel_session_v2beta_session_service: GenFile;

/**
 * @generated from message zitadel.session.v2beta.ListSessionsRequest
 */
export declare type ListSessionsRequest = Message<"zitadel.session.v2beta.ListSessionsRequest"> & {
  /**
   * @generated from field: zitadel.object.v2beta.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * @generated from field: repeated zitadel.session.v2beta.SearchQuery queries = 2;
   */
  queries: SearchQuery[];

  /**
   * @generated from field: zitadel.session.v2beta.SessionFieldName sorting_column = 3;
   */
  sortingColumn: SessionFieldName;
};

/**
 * @generated from message zitadel.session.v2beta.ListSessionsRequest
 */
export declare type ListSessionsRequestJson = {
  /**
   * @generated from field: zitadel.object.v2beta.ListQuery query = 1;
   */
  query?: ListQueryJson;

  /**
   * @generated from field: repeated zitadel.session.v2beta.SearchQuery queries = 2;
   */
  queries?: SearchQueryJson[];

  /**
   * @generated from field: zitadel.session.v2beta.SessionFieldName sorting_column = 3;
   */
  sortingColumn?: SessionFieldNameJson;
};

/**
 * Describes the message zitadel.session.v2beta.ListSessionsRequest.
 * Use `create(ListSessionsRequestSchema)` to create a new message.
 */
export declare const ListSessionsRequestSchema: GenMessage<ListSessionsRequest, {jsonType: ListSessionsRequestJson}>;

/**
 * @generated from message zitadel.session.v2beta.ListSessionsResponse
 */
export declare type ListSessionsResponse = Message<"zitadel.session.v2beta.ListSessionsResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.session.v2beta.Session sessions = 2;
   */
  sessions: Session[];
};

/**
 * @generated from message zitadel.session.v2beta.ListSessionsResponse
 */
export declare type ListSessionsResponseJson = {
  /**
   * @generated from field: zitadel.object.v2beta.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: repeated zitadel.session.v2beta.Session sessions = 2;
   */
  sessions?: SessionJson[];
};

/**
 * Describes the message zitadel.session.v2beta.ListSessionsResponse.
 * Use `create(ListSessionsResponseSchema)` to create a new message.
 */
export declare const ListSessionsResponseSchema: GenMessage<ListSessionsResponse, {jsonType: ListSessionsResponseJson}>;

/**
 * @generated from message zitadel.session.v2beta.GetSessionRequest
 */
export declare type GetSessionRequest = Message<"zitadel.session.v2beta.GetSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * @generated from message zitadel.session.v2beta.GetSessionRequest
 */
export declare type GetSessionRequestJson = {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId?: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * Describes the message zitadel.session.v2beta.GetSessionRequest.
 * Use `create(GetSessionRequestSchema)` to create a new message.
 */
export declare const GetSessionRequestSchema: GenMessage<GetSessionRequest, {jsonType: GetSessionRequestJson}>;

/**
 * @generated from message zitadel.session.v2beta.GetSessionResponse
 */
export declare type GetSessionResponse = Message<"zitadel.session.v2beta.GetSessionResponse"> & {
  /**
   * @generated from field: zitadel.session.v2beta.Session session = 1;
   */
  session?: Session;
};

/**
 * @generated from message zitadel.session.v2beta.GetSessionResponse
 */
export declare type GetSessionResponseJson = {
  /**
   * @generated from field: zitadel.session.v2beta.Session session = 1;
   */
  session?: SessionJson;
};

/**
 * Describes the message zitadel.session.v2beta.GetSessionResponse.
 * Use `create(GetSessionResponseSchema)` to create a new message.
 */
export declare const GetSessionResponseSchema: GenMessage<GetSessionResponse, {jsonType: GetSessionResponseJson}>;

/**
 * @generated from message zitadel.session.v2beta.CreateSessionRequest
 */
export declare type CreateSessionRequest = Message<"zitadel.session.v2beta.CreateSessionRequest"> & {
  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 1;
   */
  checks?: Checks;

  /**
   * @generated from field: map<string, bytes> metadata = 2;
   */
  metadata: { [key: string]: Uint8Array };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 3;
   */
  challenges?: RequestChallenges;

  /**
   * @generated from field: zitadel.session.v2beta.UserAgent user_agent = 4;
   */
  userAgent?: UserAgent;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 5;
   */
  lifetime?: Duration;
};

/**
 * @generated from message zitadel.session.v2beta.CreateSessionRequest
 */
export declare type CreateSessionRequestJson = {
  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 1;
   */
  checks?: ChecksJson;

  /**
   * @generated from field: map<string, bytes> metadata = 2;
   */
  metadata?: { [key: string]: string };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 3;
   */
  challenges?: RequestChallengesJson;

  /**
   * @generated from field: zitadel.session.v2beta.UserAgent user_agent = 4;
   */
  userAgent?: UserAgentJson;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 5;
   */
  lifetime?: DurationJson;
};

/**
 * Describes the message zitadel.session.v2beta.CreateSessionRequest.
 * Use `create(CreateSessionRequestSchema)` to create a new message.
 */
export declare const CreateSessionRequestSchema: GenMessage<CreateSessionRequest, {jsonType: CreateSessionRequestJson}>;

/**
 * @generated from message zitadel.session.v2beta.CreateSessionResponse
 */
export declare type CreateSessionResponse = Message<"zitadel.session.v2beta.CreateSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId: string;

  /**
   * @generated from field: string session_token = 3;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 4;
   */
  challenges?: Challenges;
};

/**
 * @generated from message zitadel.session.v2beta.CreateSessionResponse
 */
export declare type CreateSessionResponseJson = {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string session_id = 2;
   */
  sessionId?: string;

  /**
   * @generated from field: string session_token = 3;
   */
  sessionToken?: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 4;
   */
  challenges?: ChallengesJson;
};

/**
 * Describes the message zitadel.session.v2beta.CreateSessionResponse.
 * Use `create(CreateSessionResponseSchema)` to create a new message.
 */
export declare const CreateSessionResponseSchema: GenMessage<CreateSessionResponse, {jsonType: CreateSessionResponseJson}>;

/**
 * @generated from message zitadel.session.v2beta.SetSessionRequest
 */
export declare type SetSessionRequest = Message<"zitadel.session.v2beta.SetSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 3;
   */
  checks?: Checks;

  /**
   * @generated from field: map<string, bytes> metadata = 4;
   */
  metadata: { [key: string]: Uint8Array };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 5;
   */
  challenges?: RequestChallenges;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 6;
   */
  lifetime?: Duration;
};

/**
 * @generated from message zitadel.session.v2beta.SetSessionRequest
 */
export declare type SetSessionRequestJson = {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId?: string;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken?: string;

  /**
   * @generated from field: zitadel.session.v2beta.Checks checks = 3;
   */
  checks?: ChecksJson;

  /**
   * @generated from field: map<string, bytes> metadata = 4;
   */
  metadata?: { [key: string]: string };

  /**
   * @generated from field: zitadel.session.v2beta.RequestChallenges challenges = 5;
   */
  challenges?: RequestChallengesJson;

  /**
   * @generated from field: optional google.protobuf.Duration lifetime = 6;
   */
  lifetime?: DurationJson;
};

/**
 * Describes the message zitadel.session.v2beta.SetSessionRequest.
 * Use `create(SetSessionRequestSchema)` to create a new message.
 */
export declare const SetSessionRequestSchema: GenMessage<SetSessionRequest, {jsonType: SetSessionRequestJson}>;

/**
 * @generated from message zitadel.session.v2beta.SetSessionResponse
 */
export declare type SetSessionResponse = Message<"zitadel.session.v2beta.SetSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 3;
   */
  challenges?: Challenges;
};

/**
 * @generated from message zitadel.session.v2beta.SetSessionResponse
 */
export declare type SetSessionResponseJson = {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string session_token = 2;
   */
  sessionToken?: string;

  /**
   * @generated from field: zitadel.session.v2beta.Challenges challenges = 3;
   */
  challenges?: ChallengesJson;
};

/**
 * Describes the message zitadel.session.v2beta.SetSessionResponse.
 * Use `create(SetSessionResponseSchema)` to create a new message.
 */
export declare const SetSessionResponseSchema: GenMessage<SetSessionResponse, {jsonType: SetSessionResponseJson}>;

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionRequest
 */
export declare type DeleteSessionRequest = Message<"zitadel.session.v2beta.DeleteSessionRequest"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionRequest
 */
export declare type DeleteSessionRequestJson = {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId?: string;

  /**
   * @generated from field: optional string session_token = 2;
   */
  sessionToken?: string;
};

/**
 * Describes the message zitadel.session.v2beta.DeleteSessionRequest.
 * Use `create(DeleteSessionRequestSchema)` to create a new message.
 */
export declare const DeleteSessionRequestSchema: GenMessage<DeleteSessionRequest, {jsonType: DeleteSessionRequestJson}>;

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionResponse
 */
export declare type DeleteSessionResponse = Message<"zitadel.session.v2beta.DeleteSessionResponse"> & {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.session.v2beta.DeleteSessionResponse
 */
export declare type DeleteSessionResponseJson = {
  /**
   * @generated from field: zitadel.object.v2beta.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.session.v2beta.DeleteSessionResponse.
 * Use `create(DeleteSessionResponseSchema)` to create a new message.
 */
export declare const DeleteSessionResponseSchema: GenMessage<DeleteSessionResponse, {jsonType: DeleteSessionResponseJson}>;

/**
 * @generated from message zitadel.session.v2beta.Checks
 */
export declare type Checks = Message<"zitadel.session.v2beta.Checks"> & {
  /**
   * @generated from field: optional zitadel.session.v2beta.CheckUser user = 1;
   */
  user?: CheckUser;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckPassword password = 2;
   */
  password?: CheckPassword;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckWebAuthN web_auth_n = 3;
   */
  webAuthN?: CheckWebAuthN;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckIDPIntent idp_intent = 4;
   */
  idpIntent?: CheckIDPIntent;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckTOTP totp = 5;
   */
  totp?: CheckTOTP;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_sms = 6;
   */
  otpSms?: CheckOTP;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_email = 7;
   */
  otpEmail?: CheckOTP;
};

/**
 * @generated from message zitadel.session.v2beta.Checks
 */
export declare type ChecksJson = {
  /**
   * @generated from field: optional zitadel.session.v2beta.CheckUser user = 1;
   */
  user?: CheckUserJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckPassword password = 2;
   */
  password?: CheckPasswordJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckWebAuthN web_auth_n = 3;
   */
  webAuthN?: CheckWebAuthNJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckIDPIntent idp_intent = 4;
   */
  idpIntent?: CheckIDPIntentJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckTOTP totp = 5;
   */
  totp?: CheckTOTPJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_sms = 6;
   */
  otpSms?: CheckOTPJson;

  /**
   * @generated from field: optional zitadel.session.v2beta.CheckOTP otp_email = 7;
   */
  otpEmail?: CheckOTPJson;
};

/**
 * Describes the message zitadel.session.v2beta.Checks.
 * Use `create(ChecksSchema)` to create a new message.
 */
export declare const ChecksSchema: GenMessage<Checks, {jsonType: ChecksJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckUser
 */
export declare type CheckUser = Message<"zitadel.session.v2beta.CheckUser"> & {
  /**
   * @generated from oneof zitadel.session.v2beta.CheckUser.search
   */
  search: {
    /**
     * @generated from field: string user_id = 1;
     */
    value: string;
    case: "userId";
  } | {
    /**
     * @generated from field: string login_name = 2;
     */
    value: string;
    case: "loginName";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.session.v2beta.CheckUser
 */
export declare type CheckUserJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string login_name = 2;
   */
  loginName?: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckUser.
 * Use `create(CheckUserSchema)` to create a new message.
 */
export declare const CheckUserSchema: GenMessage<CheckUser, {jsonType: CheckUserJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckPassword
 */
export declare type CheckPassword = Message<"zitadel.session.v2beta.CheckPassword"> & {
  /**
   * @generated from field: string password = 1;
   */
  password: string;
};

/**
 * @generated from message zitadel.session.v2beta.CheckPassword
 */
export declare type CheckPasswordJson = {
  /**
   * @generated from field: string password = 1;
   */
  password?: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckPassword.
 * Use `create(CheckPasswordSchema)` to create a new message.
 */
export declare const CheckPasswordSchema: GenMessage<CheckPassword, {jsonType: CheckPasswordJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckWebAuthN
 */
export declare type CheckWebAuthN = Message<"zitadel.session.v2beta.CheckWebAuthN"> & {
  /**
   * @generated from field: google.protobuf.Struct credential_assertion_data = 1;
   */
  credentialAssertionData?: JsonObject;
};

/**
 * @generated from message zitadel.session.v2beta.CheckWebAuthN
 */
export declare type CheckWebAuthNJson = {
  /**
   * @generated from field: google.protobuf.Struct credential_assertion_data = 1;
   */
  credentialAssertionData?: StructJson;
};

/**
 * Describes the message zitadel.session.v2beta.CheckWebAuthN.
 * Use `create(CheckWebAuthNSchema)` to create a new message.
 */
export declare const CheckWebAuthNSchema: GenMessage<CheckWebAuthN, {jsonType: CheckWebAuthNJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckIDPIntent
 */
export declare type CheckIDPIntent = Message<"zitadel.session.v2beta.CheckIDPIntent"> & {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken: string;
};

/**
 * @generated from message zitadel.session.v2beta.CheckIDPIntent
 */
export declare type CheckIDPIntentJson = {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId?: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken?: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckIDPIntent.
 * Use `create(CheckIDPIntentSchema)` to create a new message.
 */
export declare const CheckIDPIntentSchema: GenMessage<CheckIDPIntent, {jsonType: CheckIDPIntentJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckTOTP
 */
export declare type CheckTOTP = Message<"zitadel.session.v2beta.CheckTOTP"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * @generated from message zitadel.session.v2beta.CheckTOTP
 */
export declare type CheckTOTPJson = {
  /**
   * @generated from field: string code = 1;
   */
  code?: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckTOTP.
 * Use `create(CheckTOTPSchema)` to create a new message.
 */
export declare const CheckTOTPSchema: GenMessage<CheckTOTP, {jsonType: CheckTOTPJson}>;

/**
 * @generated from message zitadel.session.v2beta.CheckOTP
 */
export declare type CheckOTP = Message<"zitadel.session.v2beta.CheckOTP"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;
};

/**
 * @generated from message zitadel.session.v2beta.CheckOTP
 */
export declare type CheckOTPJson = {
  /**
   * @generated from field: string code = 1;
   */
  code?: string;
};

/**
 * Describes the message zitadel.session.v2beta.CheckOTP.
 * Use `create(CheckOTPSchema)` to create a new message.
 */
export declare const CheckOTPSchema: GenMessage<CheckOTP, {jsonType: CheckOTPJson}>;

/**
 * @generated from service zitadel.session.v2beta.SessionService
 */
export declare const SessionService: GenService<{
  /**
   * Search sessions
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.ListSessions
   */
  listSessions: {
    methodKind: "unary";
    input: typeof ListSessionsRequestSchema;
    output: typeof ListSessionsResponseSchema;
  },
  /**
   * GetSession a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.GetSession
   */
  getSession: {
    methodKind: "unary";
    input: typeof GetSessionRequestSchema;
    output: typeof GetSessionResponseSchema;
  },
  /**
   * Create a new session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.CreateSession
   */
  createSession: {
    methodKind: "unary";
    input: typeof CreateSessionRequestSchema;
    output: typeof CreateSessionResponseSchema;
  },
  /**
   * Update a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.SetSession
   */
  setSession: {
    methodKind: "unary";
    input: typeof SetSessionRequestSchema;
    output: typeof SetSessionResponseSchema;
  },
  /**
   * Terminate a session
   *
   * @generated from rpc zitadel.session.v2beta.SessionService.DeleteSession
   */
  deleteSession: {
    methodKind: "unary";
    input: typeof DeleteSessionRequestSchema;
    output: typeof DeleteSessionResponseSchema;
  },
}>;

