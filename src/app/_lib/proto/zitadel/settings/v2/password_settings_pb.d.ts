// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/settings/v2/password_settings.proto (package zitadel.settings.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ResourceOwnerType, ResourceOwnerTypeJson } from "./settings_pb.js";

/**
 * Describes the file zitadel/settings/v2/password_settings.proto.
 */
export declare const file_zitadel_settings_v2_password_settings: GenFile;

/**
 * @generated from message zitadel.settings.v2.PasswordComplexitySettings
 */
export declare type PasswordComplexitySettings = Message<"zitadel.settings.v2.PasswordComplexitySettings"> & {
  /**
   * @generated from field: uint64 min_length = 1;
   */
  minLength: bigint;

  /**
   * @generated from field: bool requires_uppercase = 2;
   */
  requiresUppercase: boolean;

  /**
   * @generated from field: bool requires_lowercase = 3;
   */
  requiresLowercase: boolean;

  /**
   * @generated from field: bool requires_number = 4;
   */
  requiresNumber: boolean;

  /**
   * @generated from field: bool requires_symbol = 5;
   */
  requiresSymbol: boolean;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2.ResourceOwnerType resource_owner_type = 6;
   */
  resourceOwnerType: ResourceOwnerType;
};

/**
 * @generated from message zitadel.settings.v2.PasswordComplexitySettings
 */
export declare type PasswordComplexitySettingsJson = {
  /**
   * @generated from field: uint64 min_length = 1;
   */
  minLength?: string;

  /**
   * @generated from field: bool requires_uppercase = 2;
   */
  requiresUppercase?: boolean;

  /**
   * @generated from field: bool requires_lowercase = 3;
   */
  requiresLowercase?: boolean;

  /**
   * @generated from field: bool requires_number = 4;
   */
  requiresNumber?: boolean;

  /**
   * @generated from field: bool requires_symbol = 5;
   */
  requiresSymbol?: boolean;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2.ResourceOwnerType resource_owner_type = 6;
   */
  resourceOwnerType?: ResourceOwnerTypeJson;
};

/**
 * Describes the message zitadel.settings.v2.PasswordComplexitySettings.
 * Use `create(PasswordComplexitySettingsSchema)` to create a new message.
 */
export declare const PasswordComplexitySettingsSchema: GenMessage<PasswordComplexitySettings, {jsonType: PasswordComplexitySettingsJson}>;

/**
 * @generated from message zitadel.settings.v2.PasswordExpirySettings
 */
export declare type PasswordExpirySettings = Message<"zitadel.settings.v2.PasswordExpirySettings"> & {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint64 max_age_days = 1;
   */
  maxAgeDays: bigint;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint64 expire_warn_days = 2;
   */
  expireWarnDays: bigint;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2.ResourceOwnerType resource_owner_type = 3;
   */
  resourceOwnerType: ResourceOwnerType;
};

/**
 * @generated from message zitadel.settings.v2.PasswordExpirySettings
 */
export declare type PasswordExpirySettingsJson = {
  /**
   * Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
   *
   * @generated from field: uint64 max_age_days = 1;
   */
  maxAgeDays?: string;

  /**
   * Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
   *
   * @generated from field: uint64 expire_warn_days = 2;
   */
  expireWarnDays?: string;

  /**
   * resource_owner_type returns if the settings is managed on the organization or on the instance
   *
   * @generated from field: zitadel.settings.v2.ResourceOwnerType resource_owner_type = 3;
   */
  resourceOwnerType?: ResourceOwnerTypeJson;
};

/**
 * Describes the message zitadel.settings.v2.PasswordExpirySettings.
 * Use `create(PasswordExpirySettingsSchema)` to create a new message.
 */
export declare const PasswordExpirySettingsSchema: GenMessage<PasswordExpirySettings, {jsonType: PasswordExpirySettingsJson}>;

