// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/settings.proto (package zitadel.settings.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson } from "./object_pb.js";
import type { Duration, DurationJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/settings.proto.
 */
export declare const file_zitadel_settings: GenFile;

/**
 * @generated from message zitadel.settings.v1.SecretGenerator
 */
export declare type SecretGenerator = Message<"zitadel.settings.v1.SecretGenerator"> & {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType: SecretGeneratorType;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: uint32 length = 3;
   */
  length: number;

  /**
   * @generated from field: google.protobuf.Duration expiry = 4;
   */
  expiry?: Duration;

  /**
   * @generated from field: bool include_lower_letters = 5;
   */
  includeLowerLetters: boolean;

  /**
   * @generated from field: bool include_upper_letters = 6;
   */
  includeUpperLetters: boolean;

  /**
   * @generated from field: bool include_digits = 7;
   */
  includeDigits: boolean;

  /**
   * @generated from field: bool include_symbols = 8;
   */
  includeSymbols: boolean;
};

/**
 * @generated from message zitadel.settings.v1.SecretGenerator
 */
export declare type SecretGeneratorJson = {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType?: SecretGeneratorTypeJson;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: uint32 length = 3;
   */
  length?: number;

  /**
   * @generated from field: google.protobuf.Duration expiry = 4;
   */
  expiry?: DurationJson;

  /**
   * @generated from field: bool include_lower_letters = 5;
   */
  includeLowerLetters?: boolean;

  /**
   * @generated from field: bool include_upper_letters = 6;
   */
  includeUpperLetters?: boolean;

  /**
   * @generated from field: bool include_digits = 7;
   */
  includeDigits?: boolean;

  /**
   * @generated from field: bool include_symbols = 8;
   */
  includeSymbols?: boolean;
};

/**
 * Describes the message zitadel.settings.v1.SecretGenerator.
 * Use `create(SecretGeneratorSchema)` to create a new message.
 */
export declare const SecretGeneratorSchema: GenMessage<SecretGenerator, {jsonType: SecretGeneratorJson}>;

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorQuery
 */
export declare type SecretGeneratorQuery = Message<"zitadel.settings.v1.SecretGeneratorQuery"> & {
  /**
   * @generated from oneof zitadel.settings.v1.SecretGeneratorQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.settings.v1.SecretGeneratorTypeQuery type_query = 1;
     */
    value: SecretGeneratorTypeQuery;
    case: "typeQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorQuery
 */
export declare type SecretGeneratorQueryJson = {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorTypeQuery type_query = 1;
   */
  typeQuery?: SecretGeneratorTypeQueryJson;
};

/**
 * Describes the message zitadel.settings.v1.SecretGeneratorQuery.
 * Use `create(SecretGeneratorQuerySchema)` to create a new message.
 */
export declare const SecretGeneratorQuerySchema: GenMessage<SecretGeneratorQuery, {jsonType: SecretGeneratorQueryJson}>;

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorTypeQuery
 */
export declare type SecretGeneratorTypeQuery = Message<"zitadel.settings.v1.SecretGeneratorTypeQuery"> & {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType: SecretGeneratorType;
};

/**
 * @generated from message zitadel.settings.v1.SecretGeneratorTypeQuery
 */
export declare type SecretGeneratorTypeQueryJson = {
  /**
   * @generated from field: zitadel.settings.v1.SecretGeneratorType generator_type = 1;
   */
  generatorType?: SecretGeneratorTypeJson;
};

/**
 * Describes the message zitadel.settings.v1.SecretGeneratorTypeQuery.
 * Use `create(SecretGeneratorTypeQuerySchema)` to create a new message.
 */
export declare const SecretGeneratorTypeQuerySchema: GenMessage<SecretGeneratorTypeQuery, {jsonType: SecretGeneratorTypeQueryJson}>;

/**
 * @generated from message zitadel.settings.v1.SMTPConfig
 */
export declare type SMTPConfig = Message<"zitadel.settings.v1.SMTPConfig"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string sender_address = 2;
   */
  senderAddress: string;

  /**
   * @generated from field: string sender_name = 3;
   */
  senderName: string;

  /**
   * @generated from field: bool tls = 4;
   */
  tls: boolean;

  /**
   * @generated from field: string host = 5;
   */
  host: string;

  /**
   * @generated from field: string user = 6;
   */
  user: string;

  /**
   * @generated from field: string reply_to_address = 7;
   */
  replyToAddress: string;

  /**
   * @generated from field: zitadel.settings.v1.SMTPConfigState state = 8;
   */
  state: SMTPConfigState;

  /**
   * @generated from field: string description = 9;
   */
  description: string;

  /**
   * @generated from field: string id = 10;
   */
  id: string;
};

/**
 * @generated from message zitadel.settings.v1.SMTPConfig
 */
export declare type SMTPConfigJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string sender_address = 2;
   */
  senderAddress?: string;

  /**
   * @generated from field: string sender_name = 3;
   */
  senderName?: string;

  /**
   * @generated from field: bool tls = 4;
   */
  tls?: boolean;

  /**
   * @generated from field: string host = 5;
   */
  host?: string;

  /**
   * @generated from field: string user = 6;
   */
  user?: string;

  /**
   * @generated from field: string reply_to_address = 7;
   */
  replyToAddress?: string;

  /**
   * @generated from field: zitadel.settings.v1.SMTPConfigState state = 8;
   */
  state?: SMTPConfigStateJson;

  /**
   * @generated from field: string description = 9;
   */
  description?: string;

  /**
   * @generated from field: string id = 10;
   */
  id?: string;
};

/**
 * Describes the message zitadel.settings.v1.SMTPConfig.
 * Use `create(SMTPConfigSchema)` to create a new message.
 */
export declare const SMTPConfigSchema: GenMessage<SMTPConfig, {jsonType: SMTPConfigJson}>;

/**
 * @generated from message zitadel.settings.v1.EmailProvider
 */
export declare type EmailProvider = Message<"zitadel.settings.v1.EmailProvider"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: zitadel.settings.v1.EmailProviderState state = 3;
   */
  state: EmailProviderState;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from oneof zitadel.settings.v1.EmailProvider.config
   */
  config: {
    /**
     * @generated from field: zitadel.settings.v1.EmailProviderSMTP smtp = 4;
     */
    value: EmailProviderSMTP;
    case: "smtp";
  } | {
    /**
     * @generated from field: zitadel.settings.v1.EmailProviderHTTP http = 5;
     */
    value: EmailProviderHTTP;
    case: "http";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.settings.v1.EmailProvider
 */
export declare type EmailProviderJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string id = 2;
   */
  id?: string;

  /**
   * @generated from field: zitadel.settings.v1.EmailProviderState state = 3;
   */
  state?: EmailProviderStateJson;

  /**
   * @generated from field: string description = 6;
   */
  description?: string;

  /**
   * @generated from field: zitadel.settings.v1.EmailProviderSMTP smtp = 4;
   */
  smtp?: EmailProviderSMTPJson;

  /**
   * @generated from field: zitadel.settings.v1.EmailProviderHTTP http = 5;
   */
  http?: EmailProviderHTTPJson;
};

/**
 * Describes the message zitadel.settings.v1.EmailProvider.
 * Use `create(EmailProviderSchema)` to create a new message.
 */
export declare const EmailProviderSchema: GenMessage<EmailProvider, {jsonType: EmailProviderJson}>;

/**
 * @generated from message zitadel.settings.v1.EmailProviderSMTP
 */
export declare type EmailProviderSMTP = Message<"zitadel.settings.v1.EmailProviderSMTP"> & {
  /**
   * @generated from field: string sender_address = 1;
   */
  senderAddress: string;

  /**
   * @generated from field: string sender_name = 2;
   */
  senderName: string;

  /**
   * @generated from field: bool tls = 3;
   */
  tls: boolean;

  /**
   * @generated from field: string host = 4;
   */
  host: string;

  /**
   * @generated from field: string user = 5;
   */
  user: string;

  /**
   * @generated from field: string reply_to_address = 6;
   */
  replyToAddress: string;
};

/**
 * @generated from message zitadel.settings.v1.EmailProviderSMTP
 */
export declare type EmailProviderSMTPJson = {
  /**
   * @generated from field: string sender_address = 1;
   */
  senderAddress?: string;

  /**
   * @generated from field: string sender_name = 2;
   */
  senderName?: string;

  /**
   * @generated from field: bool tls = 3;
   */
  tls?: boolean;

  /**
   * @generated from field: string host = 4;
   */
  host?: string;

  /**
   * @generated from field: string user = 5;
   */
  user?: string;

  /**
   * @generated from field: string reply_to_address = 6;
   */
  replyToAddress?: string;
};

/**
 * Describes the message zitadel.settings.v1.EmailProviderSMTP.
 * Use `create(EmailProviderSMTPSchema)` to create a new message.
 */
export declare const EmailProviderSMTPSchema: GenMessage<EmailProviderSMTP, {jsonType: EmailProviderSMTPJson}>;

/**
 * @generated from message zitadel.settings.v1.EmailProviderHTTP
 */
export declare type EmailProviderHTTP = Message<"zitadel.settings.v1.EmailProviderHTTP"> & {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint: string;
};

/**
 * @generated from message zitadel.settings.v1.EmailProviderHTTP
 */
export declare type EmailProviderHTTPJson = {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint?: string;
};

/**
 * Describes the message zitadel.settings.v1.EmailProviderHTTP.
 * Use `create(EmailProviderHTTPSchema)` to create a new message.
 */
export declare const EmailProviderHTTPSchema: GenMessage<EmailProviderHTTP, {jsonType: EmailProviderHTTPJson}>;

/**
 * @generated from message zitadel.settings.v1.SMSProvider
 */
export declare type SMSProvider = Message<"zitadel.settings.v1.SMSProvider"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string id = 2;
   */
  id: string;

  /**
   * @generated from field: zitadel.settings.v1.SMSProviderConfigState state = 3;
   */
  state: SMSProviderConfigState;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from oneof zitadel.settings.v1.SMSProvider.config
   */
  config: {
    /**
     * @generated from field: zitadel.settings.v1.TwilioConfig twilio = 4;
     */
    value: TwilioConfig;
    case: "twilio";
  } | {
    /**
     * @generated from field: zitadel.settings.v1.HTTPConfig http = 5;
     */
    value: HTTPConfig;
    case: "http";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.settings.v1.SMSProvider
 */
export declare type SMSProviderJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string id = 2;
   */
  id?: string;

  /**
   * @generated from field: zitadel.settings.v1.SMSProviderConfigState state = 3;
   */
  state?: SMSProviderConfigStateJson;

  /**
   * @generated from field: string description = 6;
   */
  description?: string;

  /**
   * @generated from field: zitadel.settings.v1.TwilioConfig twilio = 4;
   */
  twilio?: TwilioConfigJson;

  /**
   * @generated from field: zitadel.settings.v1.HTTPConfig http = 5;
   */
  http?: HTTPConfigJson;
};

/**
 * Describes the message zitadel.settings.v1.SMSProvider.
 * Use `create(SMSProviderSchema)` to create a new message.
 */
export declare const SMSProviderSchema: GenMessage<SMSProvider, {jsonType: SMSProviderJson}>;

/**
 * @generated from message zitadel.settings.v1.TwilioConfig
 */
export declare type TwilioConfig = Message<"zitadel.settings.v1.TwilioConfig"> & {
  /**
   * @generated from field: string sid = 1;
   */
  sid: string;

  /**
   * @generated from field: string sender_number = 2;
   */
  senderNumber: string;

  /**
   * @generated from field: string verify_service_sid = 3;
   */
  verifyServiceSid: string;
};

/**
 * @generated from message zitadel.settings.v1.TwilioConfig
 */
export declare type TwilioConfigJson = {
  /**
   * @generated from field: string sid = 1;
   */
  sid?: string;

  /**
   * @generated from field: string sender_number = 2;
   */
  senderNumber?: string;

  /**
   * @generated from field: string verify_service_sid = 3;
   */
  verifyServiceSid?: string;
};

/**
 * Describes the message zitadel.settings.v1.TwilioConfig.
 * Use `create(TwilioConfigSchema)` to create a new message.
 */
export declare const TwilioConfigSchema: GenMessage<TwilioConfig, {jsonType: TwilioConfigJson}>;

/**
 * @generated from message zitadel.settings.v1.HTTPConfig
 */
export declare type HTTPConfig = Message<"zitadel.settings.v1.HTTPConfig"> & {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint: string;
};

/**
 * @generated from message zitadel.settings.v1.HTTPConfig
 */
export declare type HTTPConfigJson = {
  /**
   * @generated from field: string endpoint = 1;
   */
  endpoint?: string;
};

/**
 * Describes the message zitadel.settings.v1.HTTPConfig.
 * Use `create(HTTPConfigSchema)` to create a new message.
 */
export declare const HTTPConfigSchema: GenMessage<HTTPConfig, {jsonType: HTTPConfigJson}>;

/**
 * @generated from message zitadel.settings.v1.DebugNotificationProvider
 */
export declare type DebugNotificationProvider = Message<"zitadel.settings.v1.DebugNotificationProvider"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: bool compact = 2;
   */
  compact: boolean;
};

/**
 * @generated from message zitadel.settings.v1.DebugNotificationProvider
 */
export declare type DebugNotificationProviderJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: bool compact = 2;
   */
  compact?: boolean;
};

/**
 * Describes the message zitadel.settings.v1.DebugNotificationProvider.
 * Use `create(DebugNotificationProviderSchema)` to create a new message.
 */
export declare const DebugNotificationProviderSchema: GenMessage<DebugNotificationProvider, {jsonType: DebugNotificationProviderJson}>;

/**
 * @generated from message zitadel.settings.v1.OIDCSettings
 */
export declare type OIDCSettings = Message<"zitadel.settings.v1.OIDCSettings"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: google.protobuf.Duration access_token_lifetime = 2;
   */
  accessTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration id_token_lifetime = 3;
   */
  idTokenLifetime?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_idle_expiration = 4;
   */
  refreshTokenIdleExpiration?: Duration;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_expiration = 5;
   */
  refreshTokenExpiration?: Duration;
};

/**
 * @generated from message zitadel.settings.v1.OIDCSettings
 */
export declare type OIDCSettingsJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: google.protobuf.Duration access_token_lifetime = 2;
   */
  accessTokenLifetime?: DurationJson;

  /**
   * @generated from field: google.protobuf.Duration id_token_lifetime = 3;
   */
  idTokenLifetime?: DurationJson;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_idle_expiration = 4;
   */
  refreshTokenIdleExpiration?: DurationJson;

  /**
   * @generated from field: google.protobuf.Duration refresh_token_expiration = 5;
   */
  refreshTokenExpiration?: DurationJson;
};

/**
 * Describes the message zitadel.settings.v1.OIDCSettings.
 * Use `create(OIDCSettingsSchema)` to create a new message.
 */
export declare const OIDCSettingsSchema: GenMessage<OIDCSettings, {jsonType: OIDCSettingsJson}>;

/**
 * @generated from message zitadel.settings.v1.SecurityPolicy
 */
export declare type SecurityPolicy = Message<"zitadel.settings.v1.SecurityPolicy"> & {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetails;

  /**
   * states if iframe embedding is enabled or disabled
   *
   * @generated from field: bool enable_iframe_embedding = 2;
   */
  enableIframeEmbedding: boolean;

  /**
   * origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
   *
   * @generated from field: repeated string allowed_origins = 3;
   */
  allowedOrigins: string[];

  /**
   * allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
   *
   * @generated from field: bool enable_impersonation = 4;
   */
  enableImpersonation: boolean;
};

/**
 * @generated from message zitadel.settings.v1.SecurityPolicy
 */
export declare type SecurityPolicyJson = {
  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 1;
   */
  details?: ObjectDetailsJson;

  /**
   * states if iframe embedding is enabled or disabled
   *
   * @generated from field: bool enable_iframe_embedding = 2;
   */
  enableIframeEmbedding?: boolean;

  /**
   * origins allowed loading ZITADEL in an iframe if enable_iframe_embedding is true
   *
   * @generated from field: repeated string allowed_origins = 3;
   */
  allowedOrigins?: string[];

  /**
   * allows users to impersonate other users. The impersonator needs the appropriate `*_IMPERSONATOR` roles assigned as well"
   *
   * @generated from field: bool enable_impersonation = 4;
   */
  enableImpersonation?: boolean;
};

/**
 * Describes the message zitadel.settings.v1.SecurityPolicy.
 * Use `create(SecurityPolicySchema)` to create a new message.
 */
export declare const SecurityPolicySchema: GenMessage<SecurityPolicy, {jsonType: SecurityPolicyJson}>;

/**
 * @generated from enum zitadel.settings.v1.SMTPConfigState
 */
export enum SMTPConfigState {
  /**
   * @generated from enum value: SMTP_CONFIG_STATE_UNSPECIFIED = 0;
   */
  SMTP_CONFIG_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SMTP_CONFIG_ACTIVE = 1;
   */
  SMTP_CONFIG_ACTIVE = 1,

  /**
   * @generated from enum value: SMTP_CONFIG_INACTIVE = 2;
   */
  SMTP_CONFIG_INACTIVE = 2,
}

/**
 * @generated from enum zitadel.settings.v1.SMTPConfigState
 */
export declare type SMTPConfigStateJson = "SMTP_CONFIG_STATE_UNSPECIFIED" | "SMTP_CONFIG_ACTIVE" | "SMTP_CONFIG_INACTIVE";

/**
 * Describes the enum zitadel.settings.v1.SMTPConfigState.
 */
export declare const SMTPConfigStateSchema: GenEnum<SMTPConfigState, SMTPConfigStateJson>;

/**
 * @generated from enum zitadel.settings.v1.SecretGeneratorType
 */
export enum SecretGeneratorType {
  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_INIT_CODE = 1;
   */
  INIT_CODE = 1,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE = 2;
   */
  VERIFY_EMAIL_CODE = 2,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE = 3;
   */
  VERIFY_PHONE_CODE = 3,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE = 4;
   */
  PASSWORD_RESET_CODE = 4,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE = 5;
   */
  PASSWORDLESS_INIT_CODE = 5,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_APP_SECRET = 6;
   */
  APP_SECRET = 6,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_OTP_SMS = 7;
   */
  OTP_SMS = 7,

  /**
   * @generated from enum value: SECRET_GENERATOR_TYPE_OTP_EMAIL = 8;
   */
  OTP_EMAIL = 8,
}

/**
 * @generated from enum zitadel.settings.v1.SecretGeneratorType
 */
export declare type SecretGeneratorTypeJson = "SECRET_GENERATOR_TYPE_UNSPECIFIED" | "SECRET_GENERATOR_TYPE_INIT_CODE" | "SECRET_GENERATOR_TYPE_VERIFY_EMAIL_CODE" | "SECRET_GENERATOR_TYPE_VERIFY_PHONE_CODE" | "SECRET_GENERATOR_TYPE_PASSWORD_RESET_CODE" | "SECRET_GENERATOR_TYPE_PASSWORDLESS_INIT_CODE" | "SECRET_GENERATOR_TYPE_APP_SECRET" | "SECRET_GENERATOR_TYPE_OTP_SMS" | "SECRET_GENERATOR_TYPE_OTP_EMAIL";

/**
 * Describes the enum zitadel.settings.v1.SecretGeneratorType.
 */
export declare const SecretGeneratorTypeSchema: GenEnum<SecretGeneratorType, SecretGeneratorTypeJson>;

/**
 * @generated from enum zitadel.settings.v1.EmailProviderState
 */
export enum EmailProviderState {
  /**
   * @generated from enum value: EMAIL_PROVIDER_STATE_UNSPECIFIED = 0;
   */
  EMAIL_PROVIDER_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: EMAIL_PROVIDER_ACTIVE = 1;
   */
  EMAIL_PROVIDER_ACTIVE = 1,

  /**
   * @generated from enum value: EMAIL_PROVIDER_INACTIVE = 2;
   */
  EMAIL_PROVIDER_INACTIVE = 2,
}

/**
 * @generated from enum zitadel.settings.v1.EmailProviderState
 */
export declare type EmailProviderStateJson = "EMAIL_PROVIDER_STATE_UNSPECIFIED" | "EMAIL_PROVIDER_ACTIVE" | "EMAIL_PROVIDER_INACTIVE";

/**
 * Describes the enum zitadel.settings.v1.EmailProviderState.
 */
export declare const EmailProviderStateSchema: GenEnum<EmailProviderState, EmailProviderStateJson>;

/**
 * @generated from enum zitadel.settings.v1.SMSProviderConfigState
 */
export enum SMSProviderConfigState {
  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED = 0;
   */
  SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_ACTIVE = 1;
   */
  SMS_PROVIDER_CONFIG_ACTIVE = 1,

  /**
   * @generated from enum value: SMS_PROVIDER_CONFIG_INACTIVE = 2;
   */
  SMS_PROVIDER_CONFIG_INACTIVE = 2,
}

/**
 * @generated from enum zitadel.settings.v1.SMSProviderConfigState
 */
export declare type SMSProviderConfigStateJson = "SMS_PROVIDER_CONFIG_STATE_UNSPECIFIED" | "SMS_PROVIDER_CONFIG_ACTIVE" | "SMS_PROVIDER_CONFIG_INACTIVE";

/**
 * Describes the enum zitadel.settings.v1.SMSProviderConfigState.
 */
export declare const SMSProviderConfigStateSchema: GenEnum<SMSProviderConfigState, SMSProviderConfigStateJson>;

