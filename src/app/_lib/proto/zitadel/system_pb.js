// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/system.proto (package zitadel.system.v1, syntax proto3)
/* eslint-disable */

import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_zitadel_object } from "./object_pb.js";
import { file_zitadel_options } from "./options_pb.js";
import { file_zitadel_instance } from "./instance_pb.js";
import { file_zitadel_member } from "./member_pb.js";
import { file_zitadel_quota } from "./quota_pb.js";
import { file_zitadel_auth_n_key } from "./auth_n_key_pb.js";
import { file_zitadel_feature } from "./feature_pb.js";
import { file_google_api_annotations } from "../google/api/annotations_pb.js";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../validate/validate_pb.js";

/**
 * Describes the file zitadel/system.proto.
 */
export const file_zitadel_system = /*@__PURE__*/
  fileDesc("", [file_zitadel_object, file_zitadel_options, file_zitadel_instance, file_zitadel_member, file_zitadel_quota, file_zitadel_auth_n_key, file_zitadel_feature, file_google_api_annotations, file_google_protobuf_timestamp, file_google_protobuf_duration, file_protoc_gen_openapiv2_options_annotations, file_validate_validate]);

/**
 * Describes the message zitadel.system.v1.HealthzRequest.
 * Use `create(HealthzRequestSchema)` to create a new message.
 */
export const HealthzRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 0);

/**
 * Describes the message zitadel.system.v1.HealthzResponse.
 * Use `create(HealthzResponseSchema)` to create a new message.
 */
export const HealthzResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 1);

/**
 * Describes the message zitadel.system.v1.ListInstancesRequest.
 * Use `create(ListInstancesRequestSchema)` to create a new message.
 */
export const ListInstancesRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 2);

/**
 * Describes the message zitadel.system.v1.ListInstancesResponse.
 * Use `create(ListInstancesResponseSchema)` to create a new message.
 */
export const ListInstancesResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 3);

/**
 * Describes the message zitadel.system.v1.GetInstanceRequest.
 * Use `create(GetInstanceRequestSchema)` to create a new message.
 */
export const GetInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 4);

/**
 * Describes the message zitadel.system.v1.GetInstanceResponse.
 * Use `create(GetInstanceResponseSchema)` to create a new message.
 */
export const GetInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 5);

/**
 * Describes the message zitadel.system.v1.AddInstanceRequest.
 * Use `create(AddInstanceRequestSchema)` to create a new message.
 */
export const AddInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 6);

/**
 * Describes the message zitadel.system.v1.AddInstanceRequest.Profile.
 * Use `create(AddInstanceRequest_ProfileSchema)` to create a new message.
 */
export const AddInstanceRequest_ProfileSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 6, 0);

/**
 * Describes the message zitadel.system.v1.AddInstanceRequest.Email.
 * Use `create(AddInstanceRequest_EmailSchema)` to create a new message.
 */
export const AddInstanceRequest_EmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 6, 1);

/**
 * Describes the message zitadel.system.v1.AddInstanceRequest.Password.
 * Use `create(AddInstanceRequest_PasswordSchema)` to create a new message.
 */
export const AddInstanceRequest_PasswordSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 6, 2);

/**
 * Describes the message zitadel.system.v1.AddInstanceResponse.
 * Use `create(AddInstanceResponseSchema)` to create a new message.
 */
export const AddInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 7);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.
 * Use `create(CreateInstanceRequestSchema)` to create a new message.
 */
export const CreateInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.Profile.
 * Use `create(CreateInstanceRequest_ProfileSchema)` to create a new message.
 */
export const CreateInstanceRequest_ProfileSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 0);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.Email.
 * Use `create(CreateInstanceRequest_EmailSchema)` to create a new message.
 */
export const CreateInstanceRequest_EmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 1);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.Password.
 * Use `create(CreateInstanceRequest_PasswordSchema)` to create a new message.
 */
export const CreateInstanceRequest_PasswordSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 2);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.Human.
 * Use `create(CreateInstanceRequest_HumanSchema)` to create a new message.
 */
export const CreateInstanceRequest_HumanSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 3);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.PersonalAccessToken.
 * Use `create(CreateInstanceRequest_PersonalAccessTokenSchema)` to create a new message.
 */
export const CreateInstanceRequest_PersonalAccessTokenSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 4);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.MachineKey.
 * Use `create(CreateInstanceRequest_MachineKeySchema)` to create a new message.
 */
export const CreateInstanceRequest_MachineKeySchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 5);

/**
 * Describes the message zitadel.system.v1.CreateInstanceRequest.Machine.
 * Use `create(CreateInstanceRequest_MachineSchema)` to create a new message.
 */
export const CreateInstanceRequest_MachineSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 8, 6);

/**
 * Describes the message zitadel.system.v1.CreateInstanceResponse.
 * Use `create(CreateInstanceResponseSchema)` to create a new message.
 */
export const CreateInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 9);

/**
 * Describes the message zitadel.system.v1.UpdateInstanceRequest.
 * Use `create(UpdateInstanceRequestSchema)` to create a new message.
 */
export const UpdateInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 10);

/**
 * Describes the message zitadel.system.v1.UpdateInstanceResponse.
 * Use `create(UpdateInstanceResponseSchema)` to create a new message.
 */
export const UpdateInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 11);

/**
 * Describes the message zitadel.system.v1.RemoveInstanceRequest.
 * Use `create(RemoveInstanceRequestSchema)` to create a new message.
 */
export const RemoveInstanceRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 12);

/**
 * Describes the message zitadel.system.v1.RemoveInstanceResponse.
 * Use `create(RemoveInstanceResponseSchema)` to create a new message.
 */
export const RemoveInstanceResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 13);

/**
 * Describes the message zitadel.system.v1.ListIAMMembersRequest.
 * Use `create(ListIAMMembersRequestSchema)` to create a new message.
 */
export const ListIAMMembersRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 14);

/**
 * Describes the message zitadel.system.v1.ListIAMMembersResponse.
 * Use `create(ListIAMMembersResponseSchema)` to create a new message.
 */
export const ListIAMMembersResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 15);

/**
 * Describes the message zitadel.system.v1.GetUsageRequest.
 * Use `create(GetUsageRequestSchema)` to create a new message.
 */
export const GetUsageRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 16);

/**
 * Describes the message zitadel.system.v1.AddQuotaRequest.
 * Use `create(AddQuotaRequestSchema)` to create a new message.
 */
export const AddQuotaRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 17);

/**
 * Describes the message zitadel.system.v1.AddQuotaResponse.
 * Use `create(AddQuotaResponseSchema)` to create a new message.
 */
export const AddQuotaResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 18);

/**
 * Describes the message zitadel.system.v1.SetQuotaRequest.
 * Use `create(SetQuotaRequestSchema)` to create a new message.
 */
export const SetQuotaRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 19);

/**
 * Describes the message zitadel.system.v1.SetQuotaResponse.
 * Use `create(SetQuotaResponseSchema)` to create a new message.
 */
export const SetQuotaResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 20);

/**
 * Describes the message zitadel.system.v1.RemoveQuotaRequest.
 * Use `create(RemoveQuotaRequestSchema)` to create a new message.
 */
export const RemoveQuotaRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 21);

/**
 * Describes the message zitadel.system.v1.RemoveQuotaResponse.
 * Use `create(RemoveQuotaResponseSchema)` to create a new message.
 */
export const RemoveQuotaResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 22);

/**
 * Describes the message zitadel.system.v1.SetLimitsRequest.
 * Use `create(SetLimitsRequestSchema)` to create a new message.
 */
export const SetLimitsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 23);

/**
 * Describes the message zitadel.system.v1.SetLimitsResponse.
 * Use `create(SetLimitsResponseSchema)` to create a new message.
 */
export const SetLimitsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 24);

/**
 * Describes the message zitadel.system.v1.BulkSetLimitsRequest.
 * Use `create(BulkSetLimitsRequestSchema)` to create a new message.
 */
export const BulkSetLimitsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 25);

/**
 * Describes the message zitadel.system.v1.BulkSetLimitsResponse.
 * Use `create(BulkSetLimitsResponseSchema)` to create a new message.
 */
export const BulkSetLimitsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 26);

/**
 * Describes the message zitadel.system.v1.ResetLimitsRequest.
 * Use `create(ResetLimitsRequestSchema)` to create a new message.
 */
export const ResetLimitsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 27);

/**
 * Describes the message zitadel.system.v1.ResetLimitsResponse.
 * Use `create(ResetLimitsResponseSchema)` to create a new message.
 */
export const ResetLimitsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 28);

/**
 * Describes the message zitadel.system.v1.ExistsDomainRequest.
 * Use `create(ExistsDomainRequestSchema)` to create a new message.
 */
export const ExistsDomainRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 29);

/**
 * Describes the message zitadel.system.v1.ExistsDomainResponse.
 * Use `create(ExistsDomainResponseSchema)` to create a new message.
 */
export const ExistsDomainResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 30);

/**
 * Describes the message zitadel.system.v1.ListDomainsRequest.
 * Use `create(ListDomainsRequestSchema)` to create a new message.
 */
export const ListDomainsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 31);

/**
 * Describes the message zitadel.system.v1.ListDomainsResponse.
 * Use `create(ListDomainsResponseSchema)` to create a new message.
 */
export const ListDomainsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 32);

/**
 * Describes the message zitadel.system.v1.AddDomainRequest.
 * Use `create(AddDomainRequestSchema)` to create a new message.
 */
export const AddDomainRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 33);

/**
 * Describes the message zitadel.system.v1.AddDomainResponse.
 * Use `create(AddDomainResponseSchema)` to create a new message.
 */
export const AddDomainResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 34);

/**
 * Describes the message zitadel.system.v1.RemoveDomainRequest.
 * Use `create(RemoveDomainRequestSchema)` to create a new message.
 */
export const RemoveDomainRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 35);

/**
 * Describes the message zitadel.system.v1.RemoveDomainResponse.
 * Use `create(RemoveDomainResponseSchema)` to create a new message.
 */
export const RemoveDomainResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 36);

/**
 * Describes the message zitadel.system.v1.SetPrimaryDomainRequest.
 * Use `create(SetPrimaryDomainRequestSchema)` to create a new message.
 */
export const SetPrimaryDomainRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 37);

/**
 * Describes the message zitadel.system.v1.SetPrimaryDomainResponse.
 * Use `create(SetPrimaryDomainResponseSchema)` to create a new message.
 */
export const SetPrimaryDomainResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 38);

/**
 * Describes the message zitadel.system.v1.ChangeSubscriptionRequest.
 * Use `create(ChangeSubscriptionRequestSchema)` to create a new message.
 */
export const ChangeSubscriptionRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 39);

/**
 * Describes the message zitadel.system.v1.ChangeSubscriptionResponse.
 * Use `create(ChangeSubscriptionResponseSchema)` to create a new message.
 */
export const ChangeSubscriptionResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 40);

/**
 * Describes the message zitadel.system.v1.ListViewsRequest.
 * Use `create(ListViewsRequestSchema)` to create a new message.
 */
export const ListViewsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 41);

/**
 * Describes the message zitadel.system.v1.ListViewsResponse.
 * Use `create(ListViewsResponseSchema)` to create a new message.
 */
export const ListViewsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 42);

/**
 * Describes the message zitadel.system.v1.ClearViewRequest.
 * Use `create(ClearViewRequestSchema)` to create a new message.
 */
export const ClearViewRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 43);

/**
 * Describes the message zitadel.system.v1.ClearViewResponse.
 * Use `create(ClearViewResponseSchema)` to create a new message.
 */
export const ClearViewResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 44);

/**
 * Describes the message zitadel.system.v1.ListFailedEventsRequest.
 * Use `create(ListFailedEventsRequestSchema)` to create a new message.
 */
export const ListFailedEventsRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 45);

/**
 * Describes the message zitadel.system.v1.ListFailedEventsResponse.
 * Use `create(ListFailedEventsResponseSchema)` to create a new message.
 */
export const ListFailedEventsResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 46);

/**
 * Describes the message zitadel.system.v1.RemoveFailedEventRequest.
 * Use `create(RemoveFailedEventRequestSchema)` to create a new message.
 */
export const RemoveFailedEventRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 47);

/**
 * Describes the message zitadel.system.v1.RemoveFailedEventResponse.
 * Use `create(RemoveFailedEventResponseSchema)` to create a new message.
 */
export const RemoveFailedEventResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 48);

/**
 * Describes the message zitadel.system.v1.View.
 * Use `create(ViewSchema)` to create a new message.
 */
export const ViewSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 49);

/**
 * Describes the message zitadel.system.v1.FailedEvent.
 * Use `create(FailedEventSchema)` to create a new message.
 */
export const FailedEventSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 50);

/**
 * Describes the message zitadel.system.v1.SetInstanceFeatureRequest.
 * Use `create(SetInstanceFeatureRequestSchema)` to create a new message.
 */
export const SetInstanceFeatureRequestSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 51);

/**
 * Describes the message zitadel.system.v1.SetInstanceFeatureResponse.
 * Use `create(SetInstanceFeatureResponseSchema)` to create a new message.
 */
export const SetInstanceFeatureResponseSchema = /*@__PURE__*/
  messageDesc(file_zitadel_system, 52);

/**
 * @generated from service zitadel.system.v1.SystemService
 */
export const SystemService = /*@__PURE__*/
  serviceDesc(file_zitadel_system, 0);

