// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user/v2/idp.proto (package zitadel.user.v2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { StructJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/user/v2/idp.proto.
 */
export declare const file_zitadel_user_v2_idp: GenFile;

/**
 * @generated from message zitadel.user.v2.LDAPCredentials
 */
export declare type LDAPCredentials = Message<"zitadel.user.v2.LDAPCredentials"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * @generated from message zitadel.user.v2.LDAPCredentials
 */
export declare type LDAPCredentialsJson = {
  /**
   * @generated from field: string username = 1;
   */
  username?: string;

  /**
   * @generated from field: string password = 2;
   */
  password?: string;
};

/**
 * Describes the message zitadel.user.v2.LDAPCredentials.
 * Use `create(LDAPCredentialsSchema)` to create a new message.
 */
export declare const LDAPCredentialsSchema: GenMessage<LDAPCredentials, {jsonType: LDAPCredentialsJson}>;

/**
 * @generated from message zitadel.user.v2.RedirectURLs
 */
export declare type RedirectURLs = Message<"zitadel.user.v2.RedirectURLs"> & {
  /**
   * @generated from field: string success_url = 1;
   */
  successUrl: string;

  /**
   * @generated from field: string failure_url = 2;
   */
  failureUrl: string;
};

/**
 * @generated from message zitadel.user.v2.RedirectURLs
 */
export declare type RedirectURLsJson = {
  /**
   * @generated from field: string success_url = 1;
   */
  successUrl?: string;

  /**
   * @generated from field: string failure_url = 2;
   */
  failureUrl?: string;
};

/**
 * Describes the message zitadel.user.v2.RedirectURLs.
 * Use `create(RedirectURLsSchema)` to create a new message.
 */
export declare const RedirectURLsSchema: GenMessage<RedirectURLs, {jsonType: RedirectURLsJson}>;

/**
 * @generated from message zitadel.user.v2.IDPIntent
 */
export declare type IDPIntent = Message<"zitadel.user.v2.IDPIntent"> & {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.IDPIntent
 */
export declare type IDPIntentJson = {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId?: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken?: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.IDPIntent.
 * Use `create(IDPIntentSchema)` to create a new message.
 */
export declare const IDPIntentSchema: GenMessage<IDPIntent, {jsonType: IDPIntentJson}>;

/**
 * @generated from message zitadel.user.v2.IDPInformation
 */
export declare type IDPInformation = Message<"zitadel.user.v2.IDPInformation"> & {
  /**
   * @generated from oneof zitadel.user.v2.IDPInformation.access
   */
  access: {
    /**
     * @generated from field: zitadel.user.v2.IDPOAuthAccessInformation oauth = 1;
     */
    value: IDPOAuthAccessInformation;
    case: "oauth";
  } | {
    /**
     * @generated from field: zitadel.user.v2.IDPLDAPAccessInformation ldap = 6;
     */
    value: IDPLDAPAccessInformation;
    case: "ldap";
  } | {
    /**
     * @generated from field: zitadel.user.v2.IDPSAMLAccessInformation saml = 7;
     */
    value: IDPSAMLAccessInformation;
    case: "saml";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 4;
   */
  userName: string;

  /**
   * @generated from field: google.protobuf.Struct raw_information = 5;
   */
  rawInformation?: JsonObject;
};

/**
 * @generated from message zitadel.user.v2.IDPInformation
 */
export declare type IDPInformationJson = {
  /**
   * @generated from field: zitadel.user.v2.IDPOAuthAccessInformation oauth = 1;
   */
  oauth?: IDPOAuthAccessInformationJson;

  /**
   * @generated from field: zitadel.user.v2.IDPLDAPAccessInformation ldap = 6;
   */
  ldap?: IDPLDAPAccessInformationJson;

  /**
   * @generated from field: zitadel.user.v2.IDPSAMLAccessInformation saml = 7;
   */
  saml?: IDPSAMLAccessInformationJson;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId?: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId?: string;

  /**
   * @generated from field: string user_name = 4;
   */
  userName?: string;

  /**
   * @generated from field: google.protobuf.Struct raw_information = 5;
   */
  rawInformation?: StructJson;
};

/**
 * Describes the message zitadel.user.v2.IDPInformation.
 * Use `create(IDPInformationSchema)` to create a new message.
 */
export declare const IDPInformationSchema: GenMessage<IDPInformation, {jsonType: IDPInformationJson}>;

/**
 * @generated from message zitadel.user.v2.IDPOAuthAccessInformation
 */
export declare type IDPOAuthAccessInformation = Message<"zitadel.user.v2.IDPOAuthAccessInformation"> & {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional string id_token = 2;
   */
  idToken?: string;
};

/**
 * @generated from message zitadel.user.v2.IDPOAuthAccessInformation
 */
export declare type IDPOAuthAccessInformationJson = {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional string id_token = 2;
   */
  idToken?: string;
};

/**
 * Describes the message zitadel.user.v2.IDPOAuthAccessInformation.
 * Use `create(IDPOAuthAccessInformationSchema)` to create a new message.
 */
export declare const IDPOAuthAccessInformationSchema: GenMessage<IDPOAuthAccessInformation, {jsonType: IDPOAuthAccessInformationJson}>;

/**
 * @generated from message zitadel.user.v2.IDPLDAPAccessInformation
 */
export declare type IDPLDAPAccessInformation = Message<"zitadel.user.v2.IDPLDAPAccessInformation"> & {
  /**
   * @generated from field: google.protobuf.Struct attributes = 1;
   */
  attributes?: JsonObject;
};

/**
 * @generated from message zitadel.user.v2.IDPLDAPAccessInformation
 */
export declare type IDPLDAPAccessInformationJson = {
  /**
   * @generated from field: google.protobuf.Struct attributes = 1;
   */
  attributes?: StructJson;
};

/**
 * Describes the message zitadel.user.v2.IDPLDAPAccessInformation.
 * Use `create(IDPLDAPAccessInformationSchema)` to create a new message.
 */
export declare const IDPLDAPAccessInformationSchema: GenMessage<IDPLDAPAccessInformation, {jsonType: IDPLDAPAccessInformationJson}>;

/**
 * @generated from message zitadel.user.v2.IDPSAMLAccessInformation
 */
export declare type IDPSAMLAccessInformation = Message<"zitadel.user.v2.IDPSAMLAccessInformation"> & {
  /**
   * @generated from field: bytes assertion = 1;
   */
  assertion: Uint8Array;
};

/**
 * @generated from message zitadel.user.v2.IDPSAMLAccessInformation
 */
export declare type IDPSAMLAccessInformationJson = {
  /**
   * @generated from field: bytes assertion = 1;
   */
  assertion?: string;
};

/**
 * Describes the message zitadel.user.v2.IDPSAMLAccessInformation.
 * Use `create(IDPSAMLAccessInformationSchema)` to create a new message.
 */
export declare const IDPSAMLAccessInformationSchema: GenMessage<IDPSAMLAccessInformation, {jsonType: IDPSAMLAccessInformationJson}>;

/**
 * @generated from message zitadel.user.v2.IDPLink
 */
export declare type IDPLink = Message<"zitadel.user.v2.IDPLink"> & {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 3;
   */
  userName: string;
};

/**
 * @generated from message zitadel.user.v2.IDPLink
 */
export declare type IDPLinkJson = {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId?: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: string user_name = 3;
   */
  userName?: string;
};

/**
 * Describes the message zitadel.user.v2.IDPLink.
 * Use `create(IDPLinkSchema)` to create a new message.
 */
export declare const IDPLinkSchema: GenMessage<IDPLink, {jsonType: IDPLinkJson}>;

/**
 * @generated from message zitadel.user.v2.FormData
 */
export declare type FormData = Message<"zitadel.user.v2.FormData"> & {
  /**
   * The URL to which the form should be submitted using the POST method.
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * The form fields to be submitted.
   * Each field is represented as a key-value pair, where the key is the field / input name
   * and the value is the field / input value.
   * All fields need to be submitted as is and as input type "text".
   *
   * @generated from field: map<string, string> fields = 2;
   */
  fields: { [key: string]: string };
};

/**
 * @generated from message zitadel.user.v2.FormData
 */
export declare type FormDataJson = {
  /**
   * The URL to which the form should be submitted using the POST method.
   *
   * @generated from field: string url = 1;
   */
  url?: string;

  /**
   * The form fields to be submitted.
   * Each field is represented as a key-value pair, where the key is the field / input name
   * and the value is the field / input value.
   * All fields need to be submitted as is and as input type "text".
   *
   * @generated from field: map<string, string> fields = 2;
   */
  fields?: { [key: string]: string };
};

/**
 * Describes the message zitadel.user.v2.FormData.
 * Use `create(FormDataSchema)` to create a new message.
 */
export declare const FormDataSchema: GenMessage<FormData, {jsonType: FormDataJson}>;

