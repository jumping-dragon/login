// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user/v2/key.proto (package zitadel.user.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { IDFilter, IDFilterJson, TimestampFilter, TimestampFilterJson } from "../../filter/v2/filter_pb.js";

/**
 * Describes the file zitadel/user/v2/key.proto.
 */
export declare const file_zitadel_user_v2_key: GenFile;

/**
 * @generated from message zitadel.user.v2.Key
 */
export declare type Key = Message<"zitadel.user.v2.Key"> & {
  /**
   * The timestamp of the key creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: Timestamp;

  /**
   * The timestamp of the last change of the key.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 2;
   */
  changeDate?: Timestamp;

  /**
   * The unique identifier of the key.
   *
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * The unique identifier of the user the key belongs to.
   *
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * The unique identifier of the organization the key belongs to.
   *
   * @generated from field: string organization_id = 5;
   */
  organizationId: string;

  /**
   * The keys expiration date.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 6;
   */
  expirationDate?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2.Key
 */
export declare type KeyJson = {
  /**
   * The timestamp of the key creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: TimestampJson;

  /**
   * The timestamp of the last change of the key.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 2;
   */
  changeDate?: TimestampJson;

  /**
   * The unique identifier of the key.
   *
   * @generated from field: string id = 3;
   */
  id?: string;

  /**
   * The unique identifier of the user the key belongs to.
   *
   * @generated from field: string user_id = 4;
   */
  userId?: string;

  /**
   * The unique identifier of the organization the key belongs to.
   *
   * @generated from field: string organization_id = 5;
   */
  organizationId?: string;

  /**
   * The keys expiration date.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 6;
   */
  expirationDate?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2.Key.
 * Use `create(KeySchema)` to create a new message.
 */
export declare const KeySchema: GenMessage<Key, {jsonType: KeyJson}>;

/**
 * @generated from message zitadel.user.v2.KeysSearchFilter
 */
export declare type KeysSearchFilter = Message<"zitadel.user.v2.KeysSearchFilter"> & {
  /**
   * @generated from oneof zitadel.user.v2.KeysSearchFilter.filter
   */
  filter: {
    /**
     * @generated from field: zitadel.filter.v2.IDFilter key_id_filter = 1;
     */
    value: IDFilter;
    case: "keyIdFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2.IDFilter user_id_filter = 2;
     */
    value: IDFilter;
    case: "userIdFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2.IDFilter organization_id_filter = 3;
     */
    value: IDFilter;
    case: "organizationIdFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2.TimestampFilter created_date_filter = 4;
     */
    value: TimestampFilter;
    case: "createdDateFilter";
  } | {
    /**
     * @generated from field: zitadel.filter.v2.TimestampFilter expiration_date_filter = 5;
     */
    value: TimestampFilter;
    case: "expirationDateFilter";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.KeysSearchFilter
 */
export declare type KeysSearchFilterJson = {
  /**
   * @generated from field: zitadel.filter.v2.IDFilter key_id_filter = 1;
   */
  keyIdFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2.IDFilter user_id_filter = 2;
   */
  userIdFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2.IDFilter organization_id_filter = 3;
   */
  organizationIdFilter?: IDFilterJson;

  /**
   * @generated from field: zitadel.filter.v2.TimestampFilter created_date_filter = 4;
   */
  createdDateFilter?: TimestampFilterJson;

  /**
   * @generated from field: zitadel.filter.v2.TimestampFilter expiration_date_filter = 5;
   */
  expirationDateFilter?: TimestampFilterJson;
};

/**
 * Describes the message zitadel.user.v2.KeysSearchFilter.
 * Use `create(KeysSearchFilterSchema)` to create a new message.
 */
export declare const KeysSearchFilterSchema: GenMessage<KeysSearchFilter, {jsonType: KeysSearchFilterJson}>;

/**
 * @generated from enum zitadel.user.v2.KeyFieldName
 */
export enum KeyFieldName {
  /**
   * @generated from enum value: KEY_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: KEY_FIELD_NAME_CREATED_DATE = 1;
   */
  CREATED_DATE = 1,

  /**
   * @generated from enum value: KEY_FIELD_NAME_ID = 2;
   */
  ID = 2,

  /**
   * @generated from enum value: KEY_FIELD_NAME_USER_ID = 3;
   */
  USER_ID = 3,

  /**
   * @generated from enum value: KEY_FIELD_NAME_ORGANIZATION_ID = 4;
   */
  ORGANIZATION_ID = 4,

  /**
   * @generated from enum value: KEY_FIELD_NAME_KEY_EXPIRATION_DATE = 5;
   */
  KEY_EXPIRATION_DATE = 5,
}

/**
 * @generated from enum zitadel.user.v2.KeyFieldName
 */
export declare type KeyFieldNameJson = "KEY_FIELD_NAME_UNSPECIFIED" | "KEY_FIELD_NAME_CREATED_DATE" | "KEY_FIELD_NAME_ID" | "KEY_FIELD_NAME_USER_ID" | "KEY_FIELD_NAME_ORGANIZATION_ID" | "KEY_FIELD_NAME_KEY_EXPIRATION_DATE";

/**
 * Describes the enum zitadel.user.v2.KeyFieldName.
 */
export declare const KeyFieldNameSchema: GenEnum<KeyFieldName, KeyFieldNameJson>;

