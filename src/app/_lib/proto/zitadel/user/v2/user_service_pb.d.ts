// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user/v2/user_service.proto (package zitadel.user.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { JsonObject, Message } from "@bufbuild/protobuf";
import type { Details, DetailsJson, ListDetails, ListDetailsJson, ListQuery, ListQueryJson, Organization, OrganizationJson } from "../../object/v2/object_pb.js";
import type { AuthFactor, AuthFactorJson, AuthFactorState, AuthFactorStateJson, Gender, GenderJson, Passkey, PasskeyJson, ReturnInviteCode, ReturnInviteCodeJson, SendInviteCode, SendInviteCodeJson, SetHumanProfile, SetHumanProfileJson, SetMetadataEntry, SetMetadataEntryJson, User, UserJson } from "./user_pb.js";
import type { ReturnEmailVerificationCode, ReturnEmailVerificationCodeJson, SendEmailVerificationCode, SendEmailVerificationCodeJson, SetHumanEmail, SetHumanEmailJson } from "./email_pb.js";
import type { ReturnPhoneVerificationCode, ReturnPhoneVerificationCodeJson, SendPhoneVerificationCode, SendPhoneVerificationCodeJson, SetHumanPhone, SetHumanPhoneJson } from "./phone_pb.js";
import type { HashedPassword, HashedPasswordJson, Password, PasswordJson, ReturnPasswordResetCode, ReturnPasswordResetCodeJson, SendPasswordResetLink, SendPasswordResetLinkJson, SetPassword, SetPasswordJson } from "./password_pb.js";
import type { FormData, FormDataJson, IDPInformation, IDPInformationJson, IDPIntent, IDPIntentJson, IDPLink, IDPLinkJson, LDAPCredentials, LDAPCredentialsJson, RedirectURLs, RedirectURLsJson } from "./idp_pb.js";
import type { StructJson, Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { SearchQuery, SearchQueryJson, UserFieldName, UserFieldNameJson } from "./query_pb.js";
import type { PasskeyAuthenticator, PasskeyAuthenticatorJson, PasskeyRegistrationCode, PasskeyRegistrationCodeJson, ReturnPasskeyRegistrationCode, ReturnPasskeyRegistrationCodeJson, SendPasskeyRegistrationLink, SendPasskeyRegistrationLinkJson } from "./auth_pb.js";
import type { PaginationRequest, PaginationRequestJson, PaginationResponse, PaginationResponseJson } from "../../filter/v2/filter_pb.js";
import type { Key, KeyFieldName, KeyFieldNameJson, KeyJson, KeysSearchFilter, KeysSearchFilterJson } from "./key_pb.js";
import type { PersonalAccessToken, PersonalAccessTokenFieldName, PersonalAccessTokenFieldNameJson, PersonalAccessTokenJson, PersonalAccessTokensSearchFilter, PersonalAccessTokensSearchFilterJson } from "./pat_pb.js";

/**
 * Describes the file zitadel/user/v2/user_service.proto.
 */
export declare const file_zitadel_user_v2_user_service: GenFile;

/**
 * @generated from message zitadel.user.v2.AddHumanUserRequest
 */
export declare type AddHumanUserRequest = Message<"zitadel.user.v2.AddHumanUserRequest"> & {
  /**
   * optionally set your own id unique for the user.
   *
   * @generated from field: optional string user_id = 1;
   */
  userId?: string;

  /**
   * optionally set a unique username, if none is provided the email will be used.
   *
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: zitadel.object.v2.Organization organization = 11;
   */
  organization?: Organization;

  /**
   * @generated from field: zitadel.user.v2.SetHumanProfile profile = 4;
   */
  profile?: SetHumanProfile;

  /**
   * @generated from field: zitadel.user.v2.SetHumanEmail email = 5;
   */
  email?: SetHumanEmail;

  /**
   * @generated from field: zitadel.user.v2.SetHumanPhone phone = 10;
   */
  phone?: SetHumanPhone;

  /**
   * @generated from field: repeated zitadel.user.v2.SetMetadataEntry metadata = 6;
   */
  metadata: SetMetadataEntry[];

  /**
   * @generated from oneof zitadel.user.v2.AddHumanUserRequest.password_type
   */
  passwordType: {
    /**
     * @generated from field: zitadel.user.v2.Password password = 7;
     */
    value: Password;
    case: "password";
  } | {
    /**
     * @generated from field: zitadel.user.v2.HashedPassword hashed_password = 8;
     */
    value: HashedPassword;
    case: "hashedPassword";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: repeated zitadel.user.v2.IDPLink idp_links = 9;
   */
  idpLinks: IDPLink[];

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds.
   * Currently no other options are supported, and if anything different is used the validation will fail.
   *
   * @generated from field: optional string totp_secret = 12;
   */
  totpSecret?: string;
};

/**
 * @generated from message zitadel.user.v2.AddHumanUserRequest
 */
export declare type AddHumanUserRequestJson = {
  /**
   * optionally set your own id unique for the user.
   *
   * @generated from field: optional string user_id = 1;
   */
  userId?: string;

  /**
   * optionally set a unique username, if none is provided the email will be used.
   *
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: zitadel.object.v2.Organization organization = 11;
   */
  organization?: OrganizationJson;

  /**
   * @generated from field: zitadel.user.v2.SetHumanProfile profile = 4;
   */
  profile?: SetHumanProfileJson;

  /**
   * @generated from field: zitadel.user.v2.SetHumanEmail email = 5;
   */
  email?: SetHumanEmailJson;

  /**
   * @generated from field: zitadel.user.v2.SetHumanPhone phone = 10;
   */
  phone?: SetHumanPhoneJson;

  /**
   * @generated from field: repeated zitadel.user.v2.SetMetadataEntry metadata = 6;
   */
  metadata?: SetMetadataEntryJson[];

  /**
   * @generated from field: zitadel.user.v2.Password password = 7;
   */
  password?: PasswordJson;

  /**
   * @generated from field: zitadel.user.v2.HashedPassword hashed_password = 8;
   */
  hashedPassword?: HashedPasswordJson;

  /**
   * @generated from field: repeated zitadel.user.v2.IDPLink idp_links = 9;
   */
  idpLinks?: IDPLinkJson[];

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds.
   * Currently no other options are supported, and if anything different is used the validation will fail.
   *
   * @generated from field: optional string totp_secret = 12;
   */
  totpSecret?: string;
};

/**
 * Describes the message zitadel.user.v2.AddHumanUserRequest.
 * Use `create(AddHumanUserRequestSchema)` to create a new message.
 */
export declare const AddHumanUserRequestSchema: GenMessage<AddHumanUserRequest, {jsonType: AddHumanUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddHumanUserResponse
 */
export declare type AddHumanUserResponse = Message<"zitadel.user.v2.AddHumanUserResponse"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.object.v2.Details details = 2;
   */
  details?: Details;

  /**
   * @generated from field: optional string email_code = 3;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 4;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.user.v2.AddHumanUserResponse
 */
export declare type AddHumanUserResponseJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.object.v2.Details details = 2;
   */
  details?: DetailsJson;

  /**
   * @generated from field: optional string email_code = 3;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 4;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.user.v2.AddHumanUserResponse.
 * Use `create(AddHumanUserResponseSchema)` to create a new message.
 */
export declare const AddHumanUserResponseSchema: GenMessage<AddHumanUserResponse, {jsonType: AddHumanUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.CreateUserRequest
 */
export declare type CreateUserRequest = Message<"zitadel.user.v2.CreateUserRequest"> & {
  /**
   * The unique identifier of the organization the user belongs to.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * The ID is a unique identifier for the user in the instance.
   * If not specified, it will be generated.
   * You can set your own user id that is unique within the instance.
   * This is useful in migration scenarios, for example if the user already has an ID in another Zitadel system.
   * If not specified, it will be generated.
   * It can't be changed after creation.
   *
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * The username is a unique identifier for the user in the organization.
   * If not specified, Zitadel sets the username to the email for users of type human and to the user_id for users of type machine.
   * It is used to identify the user in the organization and can be used for login.
   *
   * @generated from field: optional string username = 3;
   */
  username?: string;

  /**
   * The type of the user.
   *
   * @generated from oneof zitadel.user.v2.CreateUserRequest.user_type
   */
  userType: {
    /**
     * Users of type human are users that are meant to be used by a person.
     * They can log in interactively using a login UI.
     * By default, new users will receive a verification email and, if a phone is configured, a verification SMS.
     * To make sure these messages are sent, configure and activate valid SMTP and Twilio configurations.
     * Read more about your options for controlling this behaviour in the email and phone field documentations.
     *
     * @generated from field: zitadel.user.v2.CreateUserRequest.Human human = 4;
     */
    value: CreateUserRequest_Human;
    case: "human";
  } | {
    /**
     * Users of type machine are users that are meant to be used by a machine.
     * In order to authenticate, [add a secret](apis/resources/user_service_v2/user-service-add-secret.api.mdx), [a key](apis/resources/user_service_v2/user-service-add-key.api.mdx) or [a personal access token](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) to the user.
     * Tokens generated for new users of type machine will be of an opaque Bearer type.
     * You can change the users token type to JWT by using the [management v1 service method UpdateMachine](apis/resources/mgmt/management-service-update-machine.api.mdx).
     *
     * @generated from field: zitadel.user.v2.CreateUserRequest.Machine machine = 5;
     */
    value: CreateUserRequest_Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.CreateUserRequest
 */
export declare type CreateUserRequestJson = {
  /**
   * The unique identifier of the organization the user belongs to.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId?: string;

  /**
   * The ID is a unique identifier for the user in the instance.
   * If not specified, it will be generated.
   * You can set your own user id that is unique within the instance.
   * This is useful in migration scenarios, for example if the user already has an ID in another Zitadel system.
   * If not specified, it will be generated.
   * It can't be changed after creation.
   *
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * The username is a unique identifier for the user in the organization.
   * If not specified, Zitadel sets the username to the email for users of type human and to the user_id for users of type machine.
   * It is used to identify the user in the organization and can be used for login.
   *
   * @generated from field: optional string username = 3;
   */
  username?: string;

  /**
   * Users of type human are users that are meant to be used by a person.
   * They can log in interactively using a login UI.
   * By default, new users will receive a verification email and, if a phone is configured, a verification SMS.
   * To make sure these messages are sent, configure and activate valid SMTP and Twilio configurations.
   * Read more about your options for controlling this behaviour in the email and phone field documentations.
   *
   * @generated from field: zitadel.user.v2.CreateUserRequest.Human human = 4;
   */
  human?: CreateUserRequest_HumanJson;

  /**
   * Users of type machine are users that are meant to be used by a machine.
   * In order to authenticate, [add a secret](apis/resources/user_service_v2/user-service-add-secret.api.mdx), [a key](apis/resources/user_service_v2/user-service-add-key.api.mdx) or [a personal access token](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) to the user.
   * Tokens generated for new users of type machine will be of an opaque Bearer type.
   * You can change the users token type to JWT by using the [management v1 service method UpdateMachine](apis/resources/mgmt/management-service-update-machine.api.mdx).
   *
   * @generated from field: zitadel.user.v2.CreateUserRequest.Machine machine = 5;
   */
  machine?: CreateUserRequest_MachineJson;
};

/**
 * Describes the message zitadel.user.v2.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export declare const CreateUserRequestSchema: GenMessage<CreateUserRequest, {jsonType: CreateUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.CreateUserRequest.Human
 */
export declare type CreateUserRequest_Human = Message<"zitadel.user.v2.CreateUserRequest.Human"> & {
  /**
   * Set the users profile information.
   *
   * @generated from field: zitadel.user.v2.SetHumanProfile profile = 1;
   */
  profile?: SetHumanProfile;

  /**
   * Set the users email address and optionally send a verification email.
   *
   * @generated from field: zitadel.user.v2.SetHumanEmail email = 2;
   */
  email?: SetHumanEmail;

  /**
   * Set the users phone number and optionally send a verification SMS.
   *
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 3;
   */
  phone?: SetHumanPhone;

  /**
   * Set the users initial password and optionally require the user to set a new password.
   *
   * @generated from oneof zitadel.user.v2.CreateUserRequest.Human.password_type
   */
  passwordType: {
    /**
     * @generated from field: zitadel.user.v2.Password password = 4;
     */
    value: Password;
    case: "password";
  } | {
    /**
     * @generated from field: zitadel.user.v2.HashedPassword hashed_password = 5;
     */
    value: HashedPassword;
    case: "hashedPassword";
  } | { case: undefined; value?: undefined };

  /**
   * Create the user with a list of links to identity providers.
   * This can be useful in migration-scenarios.
   * For example, if a user already has an account in an external identity provider or another Zitadel instance, an IDP link allows the user to authenticate as usual.
   * Sessions, second factors, hardware keys registered externally are still available for authentication.
   * Use the following endpoints to manage identity provider links:
   * - [AddIDPLink](apis/resources/user_service_v2/user-service-add-idp-link.api.mdx)
   * - [RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx)
   *
   * @generated from field: repeated zitadel.user.v2.IDPLink idp_links = 7;
   */
  idpLinks: IDPLink[];

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds.
   * Currently no other options are supported, and if anything different is used the validation will fail.
   *
   * @generated from field: optional string totp_secret = 8;
   */
  totpSecret?: string;
};

/**
 * @generated from message zitadel.user.v2.CreateUserRequest.Human
 */
export declare type CreateUserRequest_HumanJson = {
  /**
   * Set the users profile information.
   *
   * @generated from field: zitadel.user.v2.SetHumanProfile profile = 1;
   */
  profile?: SetHumanProfileJson;

  /**
   * Set the users email address and optionally send a verification email.
   *
   * @generated from field: zitadel.user.v2.SetHumanEmail email = 2;
   */
  email?: SetHumanEmailJson;

  /**
   * Set the users phone number and optionally send a verification SMS.
   *
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 3;
   */
  phone?: SetHumanPhoneJson;

  /**
   * @generated from field: zitadel.user.v2.Password password = 4;
   */
  password?: PasswordJson;

  /**
   * @generated from field: zitadel.user.v2.HashedPassword hashed_password = 5;
   */
  hashedPassword?: HashedPasswordJson;

  /**
   * Create the user with a list of links to identity providers.
   * This can be useful in migration-scenarios.
   * For example, if a user already has an account in an external identity provider or another Zitadel instance, an IDP link allows the user to authenticate as usual.
   * Sessions, second factors, hardware keys registered externally are still available for authentication.
   * Use the following endpoints to manage identity provider links:
   * - [AddIDPLink](apis/resources/user_service_v2/user-service-add-idp-link.api.mdx)
   * - [RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx)
   *
   * @generated from field: repeated zitadel.user.v2.IDPLink idp_links = 7;
   */
  idpLinks?: IDPLinkJson[];

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds.
   * Currently no other options are supported, and if anything different is used the validation will fail.
   *
   * @generated from field: optional string totp_secret = 8;
   */
  totpSecret?: string;
};

/**
 * Describes the message zitadel.user.v2.CreateUserRequest.Human.
 * Use `create(CreateUserRequest_HumanSchema)` to create a new message.
 */
export declare const CreateUserRequest_HumanSchema: GenMessage<CreateUserRequest_Human, {jsonType: CreateUserRequest_HumanJson}>;

/**
 * @generated from message zitadel.user.v2.CreateUserRequest.Machine
 */
export declare type CreateUserRequest_Machine = Message<"zitadel.user.v2.CreateUserRequest.Machine"> & {
  /**
   * The machine users name is a human readable field that helps identifying the user.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The description is a field that helps to remember the purpose of the user.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * @generated from message zitadel.user.v2.CreateUserRequest.Machine
 */
export declare type CreateUserRequest_MachineJson = {
  /**
   * The machine users name is a human readable field that helps identifying the user.
   *
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * The description is a field that helps to remember the purpose of the user.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * Describes the message zitadel.user.v2.CreateUserRequest.Machine.
 * Use `create(CreateUserRequest_MachineSchema)` to create a new message.
 */
export declare const CreateUserRequest_MachineSchema: GenMessage<CreateUserRequest_Machine, {jsonType: CreateUserRequest_MachineJson}>;

/**
 * @generated from message zitadel.user.v2.CreateUserResponse
 */
export declare type CreateUserResponse = Message<"zitadel.user.v2.CreateUserResponse"> & {
  /**
   * The unique identifier of the newly created user.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The timestamp of the user creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: Timestamp;

  /**
   * The email verification code if it was requested by setting the email verification to return_code.
   *
   * @generated from field: optional string email_code = 3;
   */
  emailCode?: string;

  /**
   * The phone verification code if it was requested by setting the phone verification to return_code.
   *
   * @generated from field: optional string phone_code = 4;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.user.v2.CreateUserResponse
 */
export declare type CreateUserResponseJson = {
  /**
   * The unique identifier of the newly created user.
   *
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * The timestamp of the user creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 2;
   */
  creationDate?: TimestampJson;

  /**
   * The email verification code if it was requested by setting the email verification to return_code.
   *
   * @generated from field: optional string email_code = 3;
   */
  emailCode?: string;

  /**
   * The phone verification code if it was requested by setting the phone verification to return_code.
   *
   * @generated from field: optional string phone_code = 4;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.user.v2.CreateUserResponse.
 * Use `create(CreateUserResponseSchema)` to create a new message.
 */
export declare const CreateUserResponseSchema: GenMessage<CreateUserResponse, {jsonType: CreateUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.GetUserByIDRequest
 */
export declare type GetUserByIDRequest = Message<"zitadel.user.v2.GetUserByIDRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.GetUserByIDRequest
 */
export declare type GetUserByIDRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.GetUserByIDRequest.
 * Use `create(GetUserByIDRequestSchema)` to create a new message.
 */
export declare const GetUserByIDRequestSchema: GenMessage<GetUserByIDRequest, {jsonType: GetUserByIDRequestJson}>;

/**
 * @generated from message zitadel.user.v2.GetUserByIDResponse
 */
export declare type GetUserByIDResponse = Message<"zitadel.user.v2.GetUserByIDResponse"> & {
  /**
   * deprecated: details is moved into user
   *
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.user.v2.User user = 2;
   */
  user?: User;
};

/**
 * @generated from message zitadel.user.v2.GetUserByIDResponse
 */
export declare type GetUserByIDResponseJson = {
  /**
   * deprecated: details is moved into user
   *
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: zitadel.user.v2.User user = 2;
   */
  user?: UserJson;
};

/**
 * Describes the message zitadel.user.v2.GetUserByIDResponse.
 * Use `create(GetUserByIDResponseSchema)` to create a new message.
 */
export declare const GetUserByIDResponseSchema: GenMessage<GetUserByIDResponse, {jsonType: GetUserByIDResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListUsersRequest
 */
export declare type ListUsersRequest = Message<"zitadel.user.v2.ListUsersRequest"> & {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 1;
   */
  query?: ListQuery;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.user.v2.UserFieldName sorting_column = 2;
   */
  sortingColumn: UserFieldName;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v2.SearchQuery queries = 3;
   */
  queries: SearchQuery[];
};

/**
 * @generated from message zitadel.user.v2.ListUsersRequest
 */
export declare type ListUsersRequestJson = {
  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 1;
   */
  query?: ListQueryJson;

  /**
   * the field the result is sorted
   *
   * @generated from field: zitadel.user.v2.UserFieldName sorting_column = 2;
   */
  sortingColumn?: UserFieldNameJson;

  /**
   * criteria the client is looking for
   *
   * @generated from field: repeated zitadel.user.v2.SearchQuery queries = 3;
   */
  queries?: SearchQueryJson[];
};

/**
 * Describes the message zitadel.user.v2.ListUsersRequest.
 * Use `create(ListUsersRequestSchema)` to create a new message.
 */
export declare const ListUsersRequestSchema: GenMessage<ListUsersRequest, {jsonType: ListUsersRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListUsersResponse
 */
export declare type ListUsersResponse = Message<"zitadel.user.v2.ListUsersResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: zitadel.user.v2.UserFieldName sorting_column = 2;
   */
  sortingColumn: UserFieldName;

  /**
   * @generated from field: repeated zitadel.user.v2.User result = 3;
   */
  result: User[];
};

/**
 * @generated from message zitadel.user.v2.ListUsersResponse
 */
export declare type ListUsersResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: zitadel.user.v2.UserFieldName sorting_column = 2;
   */
  sortingColumn?: UserFieldNameJson;

  /**
   * @generated from field: repeated zitadel.user.v2.User result = 3;
   */
  result?: UserJson[];
};

/**
 * Describes the message zitadel.user.v2.ListUsersResponse.
 * Use `create(ListUsersResponseSchema)` to create a new message.
 */
export declare const ListUsersResponseSchema: GenMessage<ListUsersResponse, {jsonType: ListUsersResponseJson}>;

/**
 * @generated from message zitadel.user.v2.SetEmailRequest
 */
export declare type SetEmailRequest = Message<"zitadel.user.v2.SetEmailRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * if no verification is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2.SetEmailRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 3;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 4;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | {
    /**
     * @generated from field: bool is_verified = 5;
     */
    value: boolean;
    case: "isVerified";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.SetEmailRequest
 */
export declare type SetEmailRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string email = 2;
   */
  email?: string;

  /**
   * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 3;
   */
  sendCode?: SendEmailVerificationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 4;
   */
  returnCode?: ReturnEmailVerificationCodeJson;

  /**
   * @generated from field: bool is_verified = 5;
   */
  isVerified?: boolean;
};

/**
 * Describes the message zitadel.user.v2.SetEmailRequest.
 * Use `create(SetEmailRequestSchema)` to create a new message.
 */
export declare const SetEmailRequestSchema: GenMessage<SetEmailRequest, {jsonType: SetEmailRequestJson}>;

/**
 * @generated from message zitadel.user.v2.SetEmailResponse
 */
export declare type SetEmailResponse = Message<"zitadel.user.v2.SetEmailResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.SetEmailResponse
 */
export declare type SetEmailResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.SetEmailResponse.
 * Use `create(SetEmailResponseSchema)` to create a new message.
 */
export declare const SetEmailResponseSchema: GenMessage<SetEmailResponse, {jsonType: SetEmailResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ResendEmailCodeRequest
 */
export declare type ResendEmailCodeRequest = Message<"zitadel.user.v2.ResendEmailCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no verification is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2.ResendEmailCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 2;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 3;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.ResendEmailCodeRequest
 */
export declare type ResendEmailCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 2;
   */
  sendCode?: SendEmailVerificationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 3;
   */
  returnCode?: ReturnEmailVerificationCodeJson;
};

/**
 * Describes the message zitadel.user.v2.ResendEmailCodeRequest.
 * Use `create(ResendEmailCodeRequestSchema)` to create a new message.
 */
export declare const ResendEmailCodeRequestSchema: GenMessage<ResendEmailCodeRequest, {jsonType: ResendEmailCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ResendEmailCodeResponse
 */
export declare type ResendEmailCodeResponse = Message<"zitadel.user.v2.ResendEmailCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.ResendEmailCodeResponse
 */
export declare type ResendEmailCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.ResendEmailCodeResponse.
 * Use `create(ResendEmailCodeResponseSchema)` to create a new message.
 */
export declare const ResendEmailCodeResponseSchema: GenMessage<ResendEmailCodeResponse, {jsonType: ResendEmailCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.SendEmailCodeRequest
 */
export declare type SendEmailCodeRequest = Message<"zitadel.user.v2.SendEmailCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no verification is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2.SendEmailCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 2;
     */
    value: SendEmailVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 3;
     */
    value: ReturnEmailVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.SendEmailCodeRequest
 */
export declare type SendEmailCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendEmailVerificationCode send_code = 2;
   */
  sendCode?: SendEmailVerificationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnEmailVerificationCode return_code = 3;
   */
  returnCode?: ReturnEmailVerificationCodeJson;
};

/**
 * Describes the message zitadel.user.v2.SendEmailCodeRequest.
 * Use `create(SendEmailCodeRequestSchema)` to create a new message.
 */
export declare const SendEmailCodeRequestSchema: GenMessage<SendEmailCodeRequest, {jsonType: SendEmailCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.SendEmailCodeResponse
 */
export declare type SendEmailCodeResponse = Message<"zitadel.user.v2.SendEmailCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.SendEmailCodeResponse
 */
export declare type SendEmailCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.SendEmailCodeResponse.
 * Use `create(SendEmailCodeResponseSchema)` to create a new message.
 */
export declare const SendEmailCodeResponseSchema: GenMessage<SendEmailCodeResponse, {jsonType: SendEmailCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyEmailRequest
 */
export declare type VerifyEmailRequest = Message<"zitadel.user.v2.VerifyEmailRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyEmailRequest
 */
export declare type VerifyEmailRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyEmailRequest.
 * Use `create(VerifyEmailRequestSchema)` to create a new message.
 */
export declare const VerifyEmailRequestSchema: GenMessage<VerifyEmailRequest, {jsonType: VerifyEmailRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyEmailResponse
 */
export declare type VerifyEmailResponse = Message<"zitadel.user.v2.VerifyEmailResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyEmailResponse
 */
export declare type VerifyEmailResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyEmailResponse.
 * Use `create(VerifyEmailResponseSchema)` to create a new message.
 */
export declare const VerifyEmailResponseSchema: GenMessage<VerifyEmailResponse, {jsonType: VerifyEmailResponseJson}>;

/**
 * @generated from message zitadel.user.v2.SetPhoneRequest
 */
export declare type SetPhoneRequest = Message<"zitadel.user.v2.SetPhoneRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string phone = 2;
   */
  phone: string;

  /**
   * if no verification is specified, an sms is sent
   *
   * @generated from oneof zitadel.user.v2.SetPhoneRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendPhoneVerificationCode send_code = 3;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnPhoneVerificationCode return_code = 4;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | {
    /**
     * @generated from field: bool is_verified = 5;
     */
    value: boolean;
    case: "isVerified";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.SetPhoneRequest
 */
export declare type SetPhoneRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string phone = 2;
   */
  phone?: string;

  /**
   * @generated from field: zitadel.user.v2.SendPhoneVerificationCode send_code = 3;
   */
  sendCode?: SendPhoneVerificationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnPhoneVerificationCode return_code = 4;
   */
  returnCode?: ReturnPhoneVerificationCodeJson;

  /**
   * @generated from field: bool is_verified = 5;
   */
  isVerified?: boolean;
};

/**
 * Describes the message zitadel.user.v2.SetPhoneRequest.
 * Use `create(SetPhoneRequestSchema)` to create a new message.
 */
export declare const SetPhoneRequestSchema: GenMessage<SetPhoneRequest, {jsonType: SetPhoneRequestJson}>;

/**
 * @generated from message zitadel.user.v2.SetPhoneResponse
 */
export declare type SetPhoneResponse = Message<"zitadel.user.v2.SetPhoneResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.SetPhoneResponse
 */
export declare type SetPhoneResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.SetPhoneResponse.
 * Use `create(SetPhoneResponseSchema)` to create a new message.
 */
export declare const SetPhoneResponseSchema: GenMessage<SetPhoneResponse, {jsonType: SetPhoneResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePhoneRequest
 */
export declare type RemovePhoneRequest = Message<"zitadel.user.v2.RemovePhoneRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RemovePhoneRequest
 */
export declare type RemovePhoneRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemovePhoneRequest.
 * Use `create(RemovePhoneRequestSchema)` to create a new message.
 */
export declare const RemovePhoneRequestSchema: GenMessage<RemovePhoneRequest, {jsonType: RemovePhoneRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePhoneResponse
 */
export declare type RemovePhoneResponse = Message<"zitadel.user.v2.RemovePhoneResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemovePhoneResponse
 */
export declare type RemovePhoneResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemovePhoneResponse.
 * Use `create(RemovePhoneResponseSchema)` to create a new message.
 */
export declare const RemovePhoneResponseSchema: GenMessage<RemovePhoneResponse, {jsonType: RemovePhoneResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ResendPhoneCodeRequest
 */
export declare type ResendPhoneCodeRequest = Message<"zitadel.user.v2.ResendPhoneCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no verification is specified, an sms is sent
   *
   * @generated from oneof zitadel.user.v2.ResendPhoneCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendPhoneVerificationCode send_code = 3;
     */
    value: SendPhoneVerificationCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnPhoneVerificationCode return_code = 4;
     */
    value: ReturnPhoneVerificationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.ResendPhoneCodeRequest
 */
export declare type ResendPhoneCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendPhoneVerificationCode send_code = 3;
   */
  sendCode?: SendPhoneVerificationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnPhoneVerificationCode return_code = 4;
   */
  returnCode?: ReturnPhoneVerificationCodeJson;
};

/**
 * Describes the message zitadel.user.v2.ResendPhoneCodeRequest.
 * Use `create(ResendPhoneCodeRequestSchema)` to create a new message.
 */
export declare const ResendPhoneCodeRequestSchema: GenMessage<ResendPhoneCodeRequest, {jsonType: ResendPhoneCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ResendPhoneCodeResponse
 */
export declare type ResendPhoneCodeResponse = Message<"zitadel.user.v2.ResendPhoneCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.ResendPhoneCodeResponse
 */
export declare type ResendPhoneCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.ResendPhoneCodeResponse.
 * Use `create(ResendPhoneCodeResponseSchema)` to create a new message.
 */
export declare const ResendPhoneCodeResponseSchema: GenMessage<ResendPhoneCodeResponse, {jsonType: ResendPhoneCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyPhoneRequest
 */
export declare type VerifyPhoneRequest = Message<"zitadel.user.v2.VerifyPhoneRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyPhoneRequest
 */
export declare type VerifyPhoneRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyPhoneRequest.
 * Use `create(VerifyPhoneRequestSchema)` to create a new message.
 */
export declare const VerifyPhoneRequestSchema: GenMessage<VerifyPhoneRequest, {jsonType: VerifyPhoneRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyPhoneResponse
 */
export declare type VerifyPhoneResponse = Message<"zitadel.user.v2.VerifyPhoneResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyPhoneResponse
 */
export declare type VerifyPhoneResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyPhoneResponse.
 * Use `create(VerifyPhoneResponseSchema)` to create a new message.
 */
export declare const VerifyPhoneResponseSchema: GenMessage<VerifyPhoneResponse, {jsonType: VerifyPhoneResponseJson}>;

/**
 * @generated from message zitadel.user.v2.DeleteUserRequest
 */
export declare type DeleteUserRequest = Message<"zitadel.user.v2.DeleteUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.DeleteUserRequest
 */
export declare type DeleteUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.DeleteUserRequest.
 * Use `create(DeleteUserRequestSchema)` to create a new message.
 */
export declare const DeleteUserRequestSchema: GenMessage<DeleteUserRequest, {jsonType: DeleteUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.DeleteUserResponse
 */
export declare type DeleteUserResponse = Message<"zitadel.user.v2.DeleteUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.DeleteUserResponse
 */
export declare type DeleteUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.DeleteUserResponse.
 * Use `create(DeleteUserResponseSchema)` to create a new message.
 */
export declare const DeleteUserResponseSchema: GenMessage<DeleteUserResponse, {jsonType: DeleteUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest
 */
export declare type UpdateUserRequest = Message<"zitadel.user.v2.UpdateUserRequest"> & {
  /**
   * The user id is the users unique identifier in the instance.
   * It can't be changed.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * Set a new username that is unique within the instance.
   * Beware that active tokens and sessions are invalidated when the username is changed.
   *
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * Change type specific properties of the user.
   *
   * @generated from oneof zitadel.user.v2.UpdateUserRequest.user_type
   */
  userType: {
    /**
     * @generated from field: zitadel.user.v2.UpdateUserRequest.Human human = 3;
     */
    value: UpdateUserRequest_Human;
    case: "human";
  } | {
    /**
     * @generated from field: zitadel.user.v2.UpdateUserRequest.Machine machine = 4;
     */
    value: UpdateUserRequest_Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest
 */
export declare type UpdateUserRequestJson = {
  /**
   * The user id is the users unique identifier in the instance.
   * It can't be changed.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * Set a new username that is unique within the instance.
   * Beware that active tokens and sessions are invalidated when the username is changed.
   *
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: zitadel.user.v2.UpdateUserRequest.Human human = 3;
   */
  human?: UpdateUserRequest_HumanJson;

  /**
   * @generated from field: zitadel.user.v2.UpdateUserRequest.Machine machine = 4;
   */
  machine?: UpdateUserRequest_MachineJson;
};

/**
 * Describes the message zitadel.user.v2.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export declare const UpdateUserRequestSchema: GenMessage<UpdateUserRequest, {jsonType: UpdateUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Human
 */
export declare type UpdateUserRequest_Human = Message<"zitadel.user.v2.UpdateUserRequest.Human"> & {
  /**
   * Change the users profile information
   *
   * @generated from field: optional zitadel.user.v2.UpdateUserRequest.Human.Profile profile = 1;
   */
  profile?: UpdateUserRequest_Human_Profile;

  /**
   * Change the users email address and/or trigger a verification email
   *
   * @generated from field: optional zitadel.user.v2.SetHumanEmail email = 2;
   */
  email?: SetHumanEmail;

  /**
   * Change the users phone number and/or trigger a verification SMS
   * To delete the users phone number, leave the phone field empty and omit the verification field.
   *
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 3;
   */
  phone?: SetHumanPhone;

  /**
   * Change the users password.
   * You can optionally require the current password or the verification code to be correct.
   *
   * @generated from field: optional zitadel.user.v2.SetPassword password = 4;
   */
  password?: SetPassword;
};

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Human
 */
export declare type UpdateUserRequest_HumanJson = {
  /**
   * Change the users profile information
   *
   * @generated from field: optional zitadel.user.v2.UpdateUserRequest.Human.Profile profile = 1;
   */
  profile?: UpdateUserRequest_Human_ProfileJson;

  /**
   * Change the users email address and/or trigger a verification email
   *
   * @generated from field: optional zitadel.user.v2.SetHumanEmail email = 2;
   */
  email?: SetHumanEmailJson;

  /**
   * Change the users phone number and/or trigger a verification SMS
   * To delete the users phone number, leave the phone field empty and omit the verification field.
   *
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 3;
   */
  phone?: SetHumanPhoneJson;

  /**
   * Change the users password.
   * You can optionally require the current password or the verification code to be correct.
   *
   * @generated from field: optional zitadel.user.v2.SetPassword password = 4;
   */
  password?: SetPasswordJson;
};

/**
 * Describes the message zitadel.user.v2.UpdateUserRequest.Human.
 * Use `create(UpdateUserRequest_HumanSchema)` to create a new message.
 */
export declare const UpdateUserRequest_HumanSchema: GenMessage<UpdateUserRequest_Human, {jsonType: UpdateUserRequest_HumanJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Human.Profile
 */
export declare type UpdateUserRequest_Human_Profile = Message<"zitadel.user.v2.UpdateUserRequest.Human.Profile"> & {
  /**
   * The given name is the first name of the user.
   * For example, it can be used to personalize notifications and login UIs.
   *
   * @generated from field: optional string given_name = 1;
   */
  givenName?: string;

  /**
   * The family name is the last name of the user.
   * For example, it can be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string family_name = 2;
   */
  familyName?: string;

  /**
   * The nick name is the users short name.
   * For example, it can be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * The display name is how a user should primarily be displayed in lists.
   * It can also for example be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * The users preferred language is the language that systems should use to interact with the user.
   * It has the format of a [BCP-47 language tag](https://datatracker.ietf.org/doc/html/rfc3066).
   * It is used by Zitadel where no higher prioritized preferred language can be used.
   * For example, browser settings can overwrite a users preferred_language.
   * Notification messages and standard login UIs use the users preferred language if it is supported and allowed on the instance.
   * Else, the default language of the instance is used.
   *
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * The users gender can for example be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional zitadel.user.v2.Gender gender = 6;
   */
  gender?: Gender;
};

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Human.Profile
 */
export declare type UpdateUserRequest_Human_ProfileJson = {
  /**
   * The given name is the first name of the user.
   * For example, it can be used to personalize notifications and login UIs.
   *
   * @generated from field: optional string given_name = 1;
   */
  givenName?: string;

  /**
   * The family name is the last name of the user.
   * For example, it can be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string family_name = 2;
   */
  familyName?: string;

  /**
   * The nick name is the users short name.
   * For example, it can be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * The display name is how a user should primarily be displayed in lists.
   * It can also for example be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * The users preferred language is the language that systems should use to interact with the user.
   * It has the format of a [BCP-47 language tag](https://datatracker.ietf.org/doc/html/rfc3066).
   * It is used by Zitadel where no higher prioritized preferred language can be used.
   * For example, browser settings can overwrite a users preferred_language.
   * Notification messages and standard login UIs use the users preferred language if it is supported and allowed on the instance.
   * Else, the default language of the instance is used.
   *
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * The users gender can for example be used to personalize user interfaces and notifications.
   *
   * @generated from field: optional zitadel.user.v2.Gender gender = 6;
   */
  gender?: GenderJson;
};

/**
 * Describes the message zitadel.user.v2.UpdateUserRequest.Human.Profile.
 * Use `create(UpdateUserRequest_Human_ProfileSchema)` to create a new message.
 */
export declare const UpdateUserRequest_Human_ProfileSchema: GenMessage<UpdateUserRequest_Human_Profile, {jsonType: UpdateUserRequest_Human_ProfileJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Machine
 */
export declare type UpdateUserRequest_Machine = Message<"zitadel.user.v2.UpdateUserRequest.Machine"> & {
  /**
   * The machine users name is a human readable field that helps identifying the user.
   *
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * The description is a field that helps to remember the purpose of the user.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * @generated from message zitadel.user.v2.UpdateUserRequest.Machine
 */
export declare type UpdateUserRequest_MachineJson = {
  /**
   * The machine users name is a human readable field that helps identifying the user.
   *
   * @generated from field: optional string name = 1;
   */
  name?: string;

  /**
   * The description is a field that helps to remember the purpose of the user.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;
};

/**
 * Describes the message zitadel.user.v2.UpdateUserRequest.Machine.
 * Use `create(UpdateUserRequest_MachineSchema)` to create a new message.
 */
export declare const UpdateUserRequest_MachineSchema: GenMessage<UpdateUserRequest_Machine, {jsonType: UpdateUserRequest_MachineJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateUserResponse
 */
export declare type UpdateUserResponse = Message<"zitadel.user.v2.UpdateUserResponse"> & {
  /**
   * The timestamp of the change of the user.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 1;
   */
  changeDate?: Timestamp;

  /**
   * In case the email verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * In case the phone verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.user.v2.UpdateUserResponse
 */
export declare type UpdateUserResponseJson = {
  /**
   * The timestamp of the change of the user.
   *
   * @generated from field: google.protobuf.Timestamp change_date = 1;
   */
  changeDate?: TimestampJson;

  /**
   * In case the email verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * In case the phone verification was set to return_code, the code will be returned
   *
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.user.v2.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export declare const UpdateUserResponseSchema: GenMessage<UpdateUserResponse, {jsonType: UpdateUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateHumanUserRequest
 */
export declare type UpdateHumanUserRequest = Message<"zitadel.user.v2.UpdateHumanUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanProfile profile = 3;
   */
  profile?: SetHumanProfile;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanEmail email = 4;
   */
  email?: SetHumanEmail;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 5;
   */
  phone?: SetHumanPhone;

  /**
   * @generated from field: optional zitadel.user.v2.SetPassword password = 6;
   */
  password?: SetPassword;
};

/**
 * @generated from message zitadel.user.v2.UpdateHumanUserRequest
 */
export declare type UpdateHumanUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: optional string username = 2;
   */
  username?: string;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanProfile profile = 3;
   */
  profile?: SetHumanProfileJson;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanEmail email = 4;
   */
  email?: SetHumanEmailJson;

  /**
   * @generated from field: optional zitadel.user.v2.SetHumanPhone phone = 5;
   */
  phone?: SetHumanPhoneJson;

  /**
   * @generated from field: optional zitadel.user.v2.SetPassword password = 6;
   */
  password?: SetPasswordJson;
};

/**
 * Describes the message zitadel.user.v2.UpdateHumanUserRequest.
 * Use `create(UpdateHumanUserRequestSchema)` to create a new message.
 */
export declare const UpdateHumanUserRequestSchema: GenMessage<UpdateHumanUserRequest, {jsonType: UpdateHumanUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.UpdateHumanUserResponse
 */
export declare type UpdateHumanUserResponse = Message<"zitadel.user.v2.UpdateHumanUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * @generated from message zitadel.user.v2.UpdateHumanUserResponse
 */
export declare type UpdateHumanUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: optional string email_code = 2;
   */
  emailCode?: string;

  /**
   * @generated from field: optional string phone_code = 3;
   */
  phoneCode?: string;
};

/**
 * Describes the message zitadel.user.v2.UpdateHumanUserResponse.
 * Use `create(UpdateHumanUserResponseSchema)` to create a new message.
 */
export declare const UpdateHumanUserResponseSchema: GenMessage<UpdateHumanUserResponse, {jsonType: UpdateHumanUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.DeactivateUserRequest
 */
export declare type DeactivateUserRequest = Message<"zitadel.user.v2.DeactivateUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.DeactivateUserRequest
 */
export declare type DeactivateUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.DeactivateUserRequest.
 * Use `create(DeactivateUserRequestSchema)` to create a new message.
 */
export declare const DeactivateUserRequestSchema: GenMessage<DeactivateUserRequest, {jsonType: DeactivateUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.DeactivateUserResponse
 */
export declare type DeactivateUserResponse = Message<"zitadel.user.v2.DeactivateUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.DeactivateUserResponse
 */
export declare type DeactivateUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.DeactivateUserResponse.
 * Use `create(DeactivateUserResponseSchema)` to create a new message.
 */
export declare const DeactivateUserResponseSchema: GenMessage<DeactivateUserResponse, {jsonType: DeactivateUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ReactivateUserRequest
 */
export declare type ReactivateUserRequest = Message<"zitadel.user.v2.ReactivateUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.ReactivateUserRequest
 */
export declare type ReactivateUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.ReactivateUserRequest.
 * Use `create(ReactivateUserRequestSchema)` to create a new message.
 */
export declare const ReactivateUserRequestSchema: GenMessage<ReactivateUserRequest, {jsonType: ReactivateUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ReactivateUserResponse
 */
export declare type ReactivateUserResponse = Message<"zitadel.user.v2.ReactivateUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.ReactivateUserResponse
 */
export declare type ReactivateUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.ReactivateUserResponse.
 * Use `create(ReactivateUserResponseSchema)` to create a new message.
 */
export declare const ReactivateUserResponseSchema: GenMessage<ReactivateUserResponse, {jsonType: ReactivateUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.LockUserRequest
 */
export declare type LockUserRequest = Message<"zitadel.user.v2.LockUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.LockUserRequest
 */
export declare type LockUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.LockUserRequest.
 * Use `create(LockUserRequestSchema)` to create a new message.
 */
export declare const LockUserRequestSchema: GenMessage<LockUserRequest, {jsonType: LockUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.LockUserResponse
 */
export declare type LockUserResponse = Message<"zitadel.user.v2.LockUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.LockUserResponse
 */
export declare type LockUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.LockUserResponse.
 * Use `create(LockUserResponseSchema)` to create a new message.
 */
export declare const LockUserResponseSchema: GenMessage<LockUserResponse, {jsonType: LockUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.UnlockUserRequest
 */
export declare type UnlockUserRequest = Message<"zitadel.user.v2.UnlockUserRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.UnlockUserRequest
 */
export declare type UnlockUserRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.UnlockUserRequest.
 * Use `create(UnlockUserRequestSchema)` to create a new message.
 */
export declare const UnlockUserRequestSchema: GenMessage<UnlockUserRequest, {jsonType: UnlockUserRequestJson}>;

/**
 * @generated from message zitadel.user.v2.UnlockUserResponse
 */
export declare type UnlockUserResponse = Message<"zitadel.user.v2.UnlockUserResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.UnlockUserResponse
 */
export declare type UnlockUserResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.UnlockUserResponse.
 * Use `create(UnlockUserResponseSchema)` to create a new message.
 */
export declare const UnlockUserResponseSchema: GenMessage<UnlockUserResponse, {jsonType: UnlockUserResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterPasskeyRequest
 */
export declare type RegisterPasskeyRequest = Message<"zitadel.user.v2.RegisterPasskeyRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional zitadel.user.v2.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCode;

  /**
   * @generated from field: zitadel.user.v2.PasskeyAuthenticator authenticator = 3;
   */
  authenticator: PasskeyAuthenticator;

  /**
   * @generated from field: string domain = 4;
   */
  domain: string;
};

/**
 * @generated from message zitadel.user.v2.RegisterPasskeyRequest
 */
export declare type RegisterPasskeyRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: optional zitadel.user.v2.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCodeJson;

  /**
   * @generated from field: zitadel.user.v2.PasskeyAuthenticator authenticator = 3;
   */
  authenticator?: PasskeyAuthenticatorJson;

  /**
   * @generated from field: string domain = 4;
   */
  domain?: string;
};

/**
 * Describes the message zitadel.user.v2.RegisterPasskeyRequest.
 * Use `create(RegisterPasskeyRequestSchema)` to create a new message.
 */
export declare const RegisterPasskeyRequestSchema: GenMessage<RegisterPasskeyRequest, {jsonType: RegisterPasskeyRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterPasskeyResponse
 */
export declare type RegisterPasskeyResponse = Message<"zitadel.user.v2.RegisterPasskeyResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: JsonObject;
};

/**
 * @generated from message zitadel.user.v2.RegisterPasskeyResponse
 */
export declare type RegisterPasskeyResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId?: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: StructJson;
};

/**
 * Describes the message zitadel.user.v2.RegisterPasskeyResponse.
 * Use `create(RegisterPasskeyResponseSchema)` to create a new message.
 */
export declare const RegisterPasskeyResponseSchema: GenMessage<RegisterPasskeyResponse, {jsonType: RegisterPasskeyResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyPasskeyRegistrationRequest
 */
export declare type VerifyPasskeyRegistrationRequest = Message<"zitadel.user.v2.VerifyPasskeyRegistrationRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: JsonObject;

  /**
   * @generated from field: string passkey_name = 4;
   */
  passkeyName: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyPasskeyRegistrationRequest
 */
export declare type VerifyPasskeyRegistrationRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId?: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: StructJson;

  /**
   * @generated from field: string passkey_name = 4;
   */
  passkeyName?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyPasskeyRegistrationRequest.
 * Use `create(VerifyPasskeyRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyPasskeyRegistrationRequestSchema: GenMessage<VerifyPasskeyRegistrationRequest, {jsonType: VerifyPasskeyRegistrationRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyPasskeyRegistrationResponse
 */
export declare type VerifyPasskeyRegistrationResponse = Message<"zitadel.user.v2.VerifyPasskeyRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyPasskeyRegistrationResponse
 */
export declare type VerifyPasskeyRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyPasskeyRegistrationResponse.
 * Use `create(VerifyPasskeyRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyPasskeyRegistrationResponseSchema: GenMessage<VerifyPasskeyRegistrationResponse, {jsonType: VerifyPasskeyRegistrationResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterU2FRequest
 */
export declare type RegisterU2FRequest = Message<"zitadel.user.v2.RegisterU2FRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string domain = 2;
   */
  domain: string;
};

/**
 * @generated from message zitadel.user.v2.RegisterU2FRequest
 */
export declare type RegisterU2FRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string domain = 2;
   */
  domain?: string;
};

/**
 * Describes the message zitadel.user.v2.RegisterU2FRequest.
 * Use `create(RegisterU2FRequestSchema)` to create a new message.
 */
export declare const RegisterU2FRequestSchema: GenMessage<RegisterU2FRequest, {jsonType: RegisterU2FRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterU2FResponse
 */
export declare type RegisterU2FResponse = Message<"zitadel.user.v2.RegisterU2FResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: JsonObject;
};

/**
 * @generated from message zitadel.user.v2.RegisterU2FResponse
 */
export declare type RegisterU2FResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId?: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential_creation_options = 3;
   */
  publicKeyCredentialCreationOptions?: StructJson;
};

/**
 * Describes the message zitadel.user.v2.RegisterU2FResponse.
 * Use `create(RegisterU2FResponseSchema)` to create a new message.
 */
export declare const RegisterU2FResponseSchema: GenMessage<RegisterU2FResponse, {jsonType: RegisterU2FResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyU2FRegistrationRequest
 */
export declare type VerifyU2FRegistrationRequest = Message<"zitadel.user.v2.VerifyU2FRegistrationRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: JsonObject;

  /**
   * @generated from field: string token_name = 4;
   */
  tokenName: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyU2FRegistrationRequest
 */
export declare type VerifyU2FRegistrationRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId?: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_credential = 3;
   */
  publicKeyCredential?: StructJson;

  /**
   * @generated from field: string token_name = 4;
   */
  tokenName?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyU2FRegistrationRequest.
 * Use `create(VerifyU2FRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyU2FRegistrationRequestSchema: GenMessage<VerifyU2FRegistrationRequest, {jsonType: VerifyU2FRegistrationRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyU2FRegistrationResponse
 */
export declare type VerifyU2FRegistrationResponse = Message<"zitadel.user.v2.VerifyU2FRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyU2FRegistrationResponse
 */
export declare type VerifyU2FRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyU2FRegistrationResponse.
 * Use `create(VerifyU2FRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyU2FRegistrationResponseSchema: GenMessage<VerifyU2FRegistrationResponse, {jsonType: VerifyU2FRegistrationResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveU2FRequest
 */
export declare type RemoveU2FRequest = Message<"zitadel.user.v2.RemoveU2FRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveU2FRequest
 */
export declare type RemoveU2FRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string u2f_id = 2;
   */
  u2fId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveU2FRequest.
 * Use `create(RemoveU2FRequestSchema)` to create a new message.
 */
export declare const RemoveU2FRequestSchema: GenMessage<RemoveU2FRequest, {jsonType: RemoveU2FRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveU2FResponse
 */
export declare type RemoveU2FResponse = Message<"zitadel.user.v2.RemoveU2FResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemoveU2FResponse
 */
export declare type RemoveU2FResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveU2FResponse.
 * Use `create(RemoveU2FResponseSchema)` to create a new message.
 */
export declare const RemoveU2FResponseSchema: GenMessage<RemoveU2FResponse, {jsonType: RemoveU2FResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterTOTPRequest
 */
export declare type RegisterTOTPRequest = Message<"zitadel.user.v2.RegisterTOTPRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RegisterTOTPRequest
 */
export declare type RegisterTOTPRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RegisterTOTPRequest.
 * Use `create(RegisterTOTPRequestSchema)` to create a new message.
 */
export declare const RegisterTOTPRequestSchema: GenMessage<RegisterTOTPRequest, {jsonType: RegisterTOTPRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RegisterTOTPResponse
 */
export declare type RegisterTOTPResponse = Message<"zitadel.user.v2.RegisterTOTPResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: string uri = 2;
   */
  uri: string;

  /**
   * @generated from field: string secret = 3;
   */
  secret: string;
};

/**
 * @generated from message zitadel.user.v2.RegisterTOTPResponse
 */
export declare type RegisterTOTPResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string uri = 2;
   */
  uri?: string;

  /**
   * @generated from field: string secret = 3;
   */
  secret?: string;
};

/**
 * Describes the message zitadel.user.v2.RegisterTOTPResponse.
 * Use `create(RegisterTOTPResponseSchema)` to create a new message.
 */
export declare const RegisterTOTPResponseSchema: GenMessage<RegisterTOTPResponse, {jsonType: RegisterTOTPResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyTOTPRegistrationRequest
 */
export declare type VerifyTOTPRegistrationRequest = Message<"zitadel.user.v2.VerifyTOTPRegistrationRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string code = 2;
   */
  code: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyTOTPRegistrationRequest
 */
export declare type VerifyTOTPRegistrationRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string code = 2;
   */
  code?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyTOTPRegistrationRequest.
 * Use `create(VerifyTOTPRegistrationRequestSchema)` to create a new message.
 */
export declare const VerifyTOTPRegistrationRequestSchema: GenMessage<VerifyTOTPRegistrationRequest, {jsonType: VerifyTOTPRegistrationRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyTOTPRegistrationResponse
 */
export declare type VerifyTOTPRegistrationResponse = Message<"zitadel.user.v2.VerifyTOTPRegistrationResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyTOTPRegistrationResponse
 */
export declare type VerifyTOTPRegistrationResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyTOTPRegistrationResponse.
 * Use `create(VerifyTOTPRegistrationResponseSchema)` to create a new message.
 */
export declare const VerifyTOTPRegistrationResponseSchema: GenMessage<VerifyTOTPRegistrationResponse, {jsonType: VerifyTOTPRegistrationResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveTOTPRequest
 */
export declare type RemoveTOTPRequest = Message<"zitadel.user.v2.RemoveTOTPRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveTOTPRequest
 */
export declare type RemoveTOTPRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveTOTPRequest.
 * Use `create(RemoveTOTPRequestSchema)` to create a new message.
 */
export declare const RemoveTOTPRequestSchema: GenMessage<RemoveTOTPRequest, {jsonType: RemoveTOTPRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveTOTPResponse
 */
export declare type RemoveTOTPResponse = Message<"zitadel.user.v2.RemoveTOTPResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemoveTOTPResponse
 */
export declare type RemoveTOTPResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveTOTPResponse.
 * Use `create(RemoveTOTPResponseSchema)` to create a new message.
 */
export declare const RemoveTOTPResponseSchema: GenMessage<RemoveTOTPResponse, {jsonType: RemoveTOTPResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddOTPSMSRequest
 */
export declare type AddOTPSMSRequest = Message<"zitadel.user.v2.AddOTPSMSRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.AddOTPSMSRequest
 */
export declare type AddOTPSMSRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.AddOTPSMSRequest.
 * Use `create(AddOTPSMSRequestSchema)` to create a new message.
 */
export declare const AddOTPSMSRequestSchema: GenMessage<AddOTPSMSRequest, {jsonType: AddOTPSMSRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddOTPSMSResponse
 */
export declare type AddOTPSMSResponse = Message<"zitadel.user.v2.AddOTPSMSResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.AddOTPSMSResponse
 */
export declare type AddOTPSMSResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.AddOTPSMSResponse.
 * Use `create(AddOTPSMSResponseSchema)` to create a new message.
 */
export declare const AddOTPSMSResponseSchema: GenMessage<AddOTPSMSResponse, {jsonType: AddOTPSMSResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveOTPSMSRequest
 */
export declare type RemoveOTPSMSRequest = Message<"zitadel.user.v2.RemoveOTPSMSRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveOTPSMSRequest
 */
export declare type RemoveOTPSMSRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveOTPSMSRequest.
 * Use `create(RemoveOTPSMSRequestSchema)` to create a new message.
 */
export declare const RemoveOTPSMSRequestSchema: GenMessage<RemoveOTPSMSRequest, {jsonType: RemoveOTPSMSRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveOTPSMSResponse
 */
export declare type RemoveOTPSMSResponse = Message<"zitadel.user.v2.RemoveOTPSMSResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemoveOTPSMSResponse
 */
export declare type RemoveOTPSMSResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveOTPSMSResponse.
 * Use `create(RemoveOTPSMSResponseSchema)` to create a new message.
 */
export declare const RemoveOTPSMSResponseSchema: GenMessage<RemoveOTPSMSResponse, {jsonType: RemoveOTPSMSResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddOTPEmailRequest
 */
export declare type AddOTPEmailRequest = Message<"zitadel.user.v2.AddOTPEmailRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.AddOTPEmailRequest
 */
export declare type AddOTPEmailRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.AddOTPEmailRequest.
 * Use `create(AddOTPEmailRequestSchema)` to create a new message.
 */
export declare const AddOTPEmailRequestSchema: GenMessage<AddOTPEmailRequest, {jsonType: AddOTPEmailRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddOTPEmailResponse
 */
export declare type AddOTPEmailResponse = Message<"zitadel.user.v2.AddOTPEmailResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.AddOTPEmailResponse
 */
export declare type AddOTPEmailResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.AddOTPEmailResponse.
 * Use `create(AddOTPEmailResponseSchema)` to create a new message.
 */
export declare const AddOTPEmailResponseSchema: GenMessage<AddOTPEmailResponse, {jsonType: AddOTPEmailResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveOTPEmailRequest
 */
export declare type RemoveOTPEmailRequest = Message<"zitadel.user.v2.RemoveOTPEmailRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveOTPEmailRequest
 */
export declare type RemoveOTPEmailRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveOTPEmailRequest.
 * Use `create(RemoveOTPEmailRequestSchema)` to create a new message.
 */
export declare const RemoveOTPEmailRequestSchema: GenMessage<RemoveOTPEmailRequest, {jsonType: RemoveOTPEmailRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveOTPEmailResponse
 */
export declare type RemoveOTPEmailResponse = Message<"zitadel.user.v2.RemoveOTPEmailResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemoveOTPEmailResponse
 */
export declare type RemoveOTPEmailResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveOTPEmailResponse.
 * Use `create(RemoveOTPEmailResponseSchema)` to create a new message.
 */
export declare const RemoveOTPEmailResponseSchema: GenMessage<RemoveOTPEmailResponse, {jsonType: RemoveOTPEmailResponseJson}>;

/**
 * @generated from message zitadel.user.v2.CreatePasskeyRegistrationLinkRequest
 */
export declare type CreatePasskeyRegistrationLinkRequest = Message<"zitadel.user.v2.CreatePasskeyRegistrationLinkRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no medium is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2.CreatePasskeyRegistrationLinkRequest.medium
   */
  medium: {
    /**
     * @generated from field: zitadel.user.v2.SendPasskeyRegistrationLink send_link = 2;
     */
    value: SendPasskeyRegistrationLink;
    case: "sendLink";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnPasskeyRegistrationCode return_code = 3;
     */
    value: ReturnPasskeyRegistrationCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.CreatePasskeyRegistrationLinkRequest
 */
export declare type CreatePasskeyRegistrationLinkRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendPasskeyRegistrationLink send_link = 2;
   */
  sendLink?: SendPasskeyRegistrationLinkJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnPasskeyRegistrationCode return_code = 3;
   */
  returnCode?: ReturnPasskeyRegistrationCodeJson;
};

/**
 * Describes the message zitadel.user.v2.CreatePasskeyRegistrationLinkRequest.
 * Use `create(CreatePasskeyRegistrationLinkRequestSchema)` to create a new message.
 */
export declare const CreatePasskeyRegistrationLinkRequestSchema: GenMessage<CreatePasskeyRegistrationLinkRequest, {jsonType: CreatePasskeyRegistrationLinkRequestJson}>;

/**
 * @generated from message zitadel.user.v2.CreatePasskeyRegistrationLinkResponse
 */
export declare type CreatePasskeyRegistrationLinkResponse = Message<"zitadel.user.v2.CreatePasskeyRegistrationLinkResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional zitadel.user.v2.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCode;
};

/**
 * @generated from message zitadel.user.v2.CreatePasskeyRegistrationLinkResponse
 */
export declare type CreatePasskeyRegistrationLinkResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional zitadel.user.v2.PasskeyRegistrationCode code = 2;
   */
  code?: PasskeyRegistrationCodeJson;
};

/**
 * Describes the message zitadel.user.v2.CreatePasskeyRegistrationLinkResponse.
 * Use `create(CreatePasskeyRegistrationLinkResponseSchema)` to create a new message.
 */
export declare const CreatePasskeyRegistrationLinkResponseSchema: GenMessage<CreatePasskeyRegistrationLinkResponse, {jsonType: CreatePasskeyRegistrationLinkResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListPasskeysRequest
 */
export declare type ListPasskeysRequest = Message<"zitadel.user.v2.ListPasskeysRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.ListPasskeysRequest
 */
export declare type ListPasskeysRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.ListPasskeysRequest.
 * Use `create(ListPasskeysRequestSchema)` to create a new message.
 */
export declare const ListPasskeysRequestSchema: GenMessage<ListPasskeysRequest, {jsonType: ListPasskeysRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListPasskeysResponse
 */
export declare type ListPasskeysResponse = Message<"zitadel.user.v2.ListPasskeysResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v2.Passkey result = 2;
   */
  result: Passkey[];
};

/**
 * @generated from message zitadel.user.v2.ListPasskeysResponse
 */
export declare type ListPasskeysResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: repeated zitadel.user.v2.Passkey result = 2;
   */
  result?: PasskeyJson[];
};

/**
 * Describes the message zitadel.user.v2.ListPasskeysResponse.
 * Use `create(ListPasskeysResponseSchema)` to create a new message.
 */
export declare const ListPasskeysResponseSchema: GenMessage<ListPasskeysResponse, {jsonType: ListPasskeysResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePasskeyRequest
 */
export declare type RemovePasskeyRequest = Message<"zitadel.user.v2.RemovePasskeyRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId: string;
};

/**
 * @generated from message zitadel.user.v2.RemovePasskeyRequest
 */
export declare type RemovePasskeyRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string passkey_id = 2;
   */
  passkeyId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemovePasskeyRequest.
 * Use `create(RemovePasskeyRequestSchema)` to create a new message.
 */
export declare const RemovePasskeyRequestSchema: GenMessage<RemovePasskeyRequest, {jsonType: RemovePasskeyRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePasskeyResponse
 */
export declare type RemovePasskeyResponse = Message<"zitadel.user.v2.RemovePasskeyResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemovePasskeyResponse
 */
export declare type RemovePasskeyResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemovePasskeyResponse.
 * Use `create(RemovePasskeyResponseSchema)` to create a new message.
 */
export declare const RemovePasskeyResponseSchema: GenMessage<RemovePasskeyResponse, {jsonType: RemovePasskeyResponseJson}>;

/**
 * @generated from message zitadel.user.v2.StartIdentityProviderIntentRequest
 */
export declare type StartIdentityProviderIntentRequest = Message<"zitadel.user.v2.StartIdentityProviderIntentRequest"> & {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * @generated from oneof zitadel.user.v2.StartIdentityProviderIntentRequest.content
   */
  content: {
    /**
     * @generated from field: zitadel.user.v2.RedirectURLs urls = 2;
     */
    value: RedirectURLs;
    case: "urls";
  } | {
    /**
     * @generated from field: zitadel.user.v2.LDAPCredentials ldap = 3;
     */
    value: LDAPCredentials;
    case: "ldap";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.StartIdentityProviderIntentRequest
 */
export declare type StartIdentityProviderIntentRequestJson = {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId?: string;

  /**
   * @generated from field: zitadel.user.v2.RedirectURLs urls = 2;
   */
  urls?: RedirectURLsJson;

  /**
   * @generated from field: zitadel.user.v2.LDAPCredentials ldap = 3;
   */
  ldap?: LDAPCredentialsJson;
};

/**
 * Describes the message zitadel.user.v2.StartIdentityProviderIntentRequest.
 * Use `create(StartIdentityProviderIntentRequestSchema)` to create a new message.
 */
export declare const StartIdentityProviderIntentRequestSchema: GenMessage<StartIdentityProviderIntentRequest, {jsonType: StartIdentityProviderIntentRequestJson}>;

/**
 * @generated from message zitadel.user.v2.StartIdentityProviderIntentResponse
 */
export declare type StartIdentityProviderIntentResponse = Message<"zitadel.user.v2.StartIdentityProviderIntentResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from oneof zitadel.user.v2.StartIdentityProviderIntentResponse.next_step
   */
  nextStep: {
    /**
     * @generated from field: string auth_url = 2;
     */
    value: string;
    case: "authUrl";
  } | {
    /**
     * @generated from field: zitadel.user.v2.IDPIntent idp_intent = 3;
     */
    value: IDPIntent;
    case: "idpIntent";
  } | {
    /**
     * POST call information
     * Deprecated: Use form_data instead
     *
     * @generated from field: bytes post_form = 4;
     */
    value: Uint8Array;
    case: "postForm";
  } | {
    /**
     * Data for a form POST call
     *
     * @generated from field: zitadel.user.v2.FormData form_data = 5;
     */
    value: FormData;
    case: "formData";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.StartIdentityProviderIntentResponse
 */
export declare type StartIdentityProviderIntentResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: string auth_url = 2;
   */
  authUrl?: string;

  /**
   * @generated from field: zitadel.user.v2.IDPIntent idp_intent = 3;
   */
  idpIntent?: IDPIntentJson;

  /**
   * POST call information
   * Deprecated: Use form_data instead
   *
   * @generated from field: bytes post_form = 4;
   */
  postForm?: string;

  /**
   * Data for a form POST call
   *
   * @generated from field: zitadel.user.v2.FormData form_data = 5;
   */
  formData?: FormDataJson;
};

/**
 * Describes the message zitadel.user.v2.StartIdentityProviderIntentResponse.
 * Use `create(StartIdentityProviderIntentResponseSchema)` to create a new message.
 */
export declare const StartIdentityProviderIntentResponseSchema: GenMessage<StartIdentityProviderIntentResponse, {jsonType: StartIdentityProviderIntentResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RetrieveIdentityProviderIntentRequest
 */
export declare type RetrieveIdentityProviderIntentRequest = Message<"zitadel.user.v2.RetrieveIdentityProviderIntentRequest"> & {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken: string;
};

/**
 * @generated from message zitadel.user.v2.RetrieveIdentityProviderIntentRequest
 */
export declare type RetrieveIdentityProviderIntentRequestJson = {
  /**
   * @generated from field: string idp_intent_id = 1;
   */
  idpIntentId?: string;

  /**
   * @generated from field: string idp_intent_token = 2;
   */
  idpIntentToken?: string;
};

/**
 * Describes the message zitadel.user.v2.RetrieveIdentityProviderIntentRequest.
 * Use `create(RetrieveIdentityProviderIntentRequestSchema)` to create a new message.
 */
export declare const RetrieveIdentityProviderIntentRequestSchema: GenMessage<RetrieveIdentityProviderIntentRequest, {jsonType: RetrieveIdentityProviderIntentRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RetrieveIdentityProviderIntentResponse
 */
export declare type RetrieveIdentityProviderIntentResponse = Message<"zitadel.user.v2.RetrieveIdentityProviderIntentResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.user.v2.IDPInformation idp_information = 2;
   */
  idpInformation?: IDPInformation;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;

  /**
   * @generated from field: zitadel.user.v2.AddHumanUserRequest add_human_user = 4;
   */
  addHumanUser?: AddHumanUserRequest;
};

/**
 * @generated from message zitadel.user.v2.RetrieveIdentityProviderIntentResponse
 */
export declare type RetrieveIdentityProviderIntentResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * @generated from field: zitadel.user.v2.IDPInformation idp_information = 2;
   */
  idpInformation?: IDPInformationJson;

  /**
   * @generated from field: string user_id = 3;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.AddHumanUserRequest add_human_user = 4;
   */
  addHumanUser?: AddHumanUserRequestJson;
};

/**
 * Describes the message zitadel.user.v2.RetrieveIdentityProviderIntentResponse.
 * Use `create(RetrieveIdentityProviderIntentResponseSchema)` to create a new message.
 */
export declare const RetrieveIdentityProviderIntentResponseSchema: GenMessage<RetrieveIdentityProviderIntentResponse, {jsonType: RetrieveIdentityProviderIntentResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddIDPLinkRequest
 */
export declare type AddIDPLinkRequest = Message<"zitadel.user.v2.AddIDPLinkRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.user.v2.IDPLink idp_link = 2;
   */
  idpLink?: IDPLink;
};

/**
 * @generated from message zitadel.user.v2.AddIDPLinkRequest
 */
export declare type AddIDPLinkRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.IDPLink idp_link = 2;
   */
  idpLink?: IDPLinkJson;
};

/**
 * Describes the message zitadel.user.v2.AddIDPLinkRequest.
 * Use `create(AddIDPLinkRequestSchema)` to create a new message.
 */
export declare const AddIDPLinkRequestSchema: GenMessage<AddIDPLinkRequest, {jsonType: AddIDPLinkRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddIDPLinkResponse
 */
export declare type AddIDPLinkResponse = Message<"zitadel.user.v2.AddIDPLinkResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.AddIDPLinkResponse
 */
export declare type AddIDPLinkResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.AddIDPLinkResponse.
 * Use `create(AddIDPLinkResponseSchema)` to create a new message.
 */
export declare const AddIDPLinkResponseSchema: GenMessage<AddIDPLinkResponse, {jsonType: AddIDPLinkResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListIDPLinksRequest
 */
export declare type ListIDPLinksRequest = Message<"zitadel.user.v2.ListIDPLinksRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 2;
   */
  query?: ListQuery;
};

/**
 * @generated from message zitadel.user.v2.ListIDPLinksRequest
 */
export declare type ListIDPLinksRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * list limitations and ordering
   *
   * @generated from field: zitadel.object.v2.ListQuery query = 2;
   */
  query?: ListQueryJson;
};

/**
 * Describes the message zitadel.user.v2.ListIDPLinksRequest.
 * Use `create(ListIDPLinksRequestSchema)` to create a new message.
 */
export declare const ListIDPLinksRequestSchema: GenMessage<ListIDPLinksRequest, {jsonType: ListIDPLinksRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListIDPLinksResponse
 */
export declare type ListIDPLinksResponse = Message<"zitadel.user.v2.ListIDPLinksResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v2.IDPLink result = 2;
   */
  result: IDPLink[];
};

/**
 * @generated from message zitadel.user.v2.ListIDPLinksResponse
 */
export declare type ListIDPLinksResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: repeated zitadel.user.v2.IDPLink result = 2;
   */
  result?: IDPLinkJson[];
};

/**
 * Describes the message zitadel.user.v2.ListIDPLinksResponse.
 * Use `create(ListIDPLinksResponseSchema)` to create a new message.
 */
export declare const ListIDPLinksResponseSchema: GenMessage<ListIDPLinksResponse, {jsonType: ListIDPLinksResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveIDPLinkRequest
 */
export declare type RemoveIDPLinkRequest = Message<"zitadel.user.v2.RemoveIDPLinkRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId: string;

  /**
   * @generated from field: string linked_user_id = 3;
   */
  linkedUserId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveIDPLinkRequest
 */
export declare type RemoveIDPLinkRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId?: string;

  /**
   * @generated from field: string linked_user_id = 3;
   */
  linkedUserId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveIDPLinkRequest.
 * Use `create(RemoveIDPLinkRequestSchema)` to create a new message.
 */
export declare const RemoveIDPLinkRequestSchema: GenMessage<RemoveIDPLinkRequest, {jsonType: RemoveIDPLinkRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveIDPLinkResponse
 */
export declare type RemoveIDPLinkResponse = Message<"zitadel.user.v2.RemoveIDPLinkResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.RemoveIDPLinkResponse
 */
export declare type RemoveIDPLinkResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveIDPLinkResponse.
 * Use `create(RemoveIDPLinkResponseSchema)` to create a new message.
 */
export declare const RemoveIDPLinkResponseSchema: GenMessage<RemoveIDPLinkResponse, {jsonType: RemoveIDPLinkResponseJson}>;

/**
 * @generated from message zitadel.user.v2.PasswordResetRequest
 */
export declare type PasswordResetRequest = Message<"zitadel.user.v2.PasswordResetRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no medium is specified, an email is sent with the default url
   *
   * @generated from oneof zitadel.user.v2.PasswordResetRequest.medium
   */
  medium: {
    /**
     * @generated from field: zitadel.user.v2.SendPasswordResetLink send_link = 2;
     */
    value: SendPasswordResetLink;
    case: "sendLink";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnPasswordResetCode return_code = 3;
     */
    value: ReturnPasswordResetCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.PasswordResetRequest
 */
export declare type PasswordResetRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendPasswordResetLink send_link = 2;
   */
  sendLink?: SendPasswordResetLinkJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnPasswordResetCode return_code = 3;
   */
  returnCode?: ReturnPasswordResetCodeJson;
};

/**
 * Describes the message zitadel.user.v2.PasswordResetRequest.
 * Use `create(PasswordResetRequestSchema)` to create a new message.
 */
export declare const PasswordResetRequestSchema: GenMessage<PasswordResetRequest, {jsonType: PasswordResetRequestJson}>;

/**
 * @generated from message zitadel.user.v2.PasswordResetResponse
 */
export declare type PasswordResetResponse = Message<"zitadel.user.v2.PasswordResetResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * @generated from message zitadel.user.v2.PasswordResetResponse
 */
export declare type PasswordResetResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * in case the medium was set to return_code, the code will be returned
   *
   * @generated from field: optional string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.PasswordResetResponse.
 * Use `create(PasswordResetResponseSchema)` to create a new message.
 */
export declare const PasswordResetResponseSchema: GenMessage<PasswordResetResponse, {jsonType: PasswordResetResponseJson}>;

/**
 * @generated from message zitadel.user.v2.SetPasswordRequest
 */
export declare type SetPasswordRequest = Message<"zitadel.user.v2.SetPasswordRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.user.v2.Password new_password = 2;
   */
  newPassword?: Password;

  /**
   * if neither, the current password must be provided nor a verification code generated by the PasswordReset is provided,
   * the user must be granted permission to set a password
   *
   * @generated from oneof zitadel.user.v2.SetPasswordRequest.verification
   */
  verification: {
    /**
     * @generated from field: string current_password = 3;
     */
    value: string;
    case: "currentPassword";
  } | {
    /**
     * @generated from field: string verification_code = 4;
     */
    value: string;
    case: "verificationCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.SetPasswordRequest
 */
export declare type SetPasswordRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.Password new_password = 2;
   */
  newPassword?: PasswordJson;

  /**
   * @generated from field: string current_password = 3;
   */
  currentPassword?: string;

  /**
   * @generated from field: string verification_code = 4;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.SetPasswordRequest.
 * Use `create(SetPasswordRequestSchema)` to create a new message.
 */
export declare const SetPasswordRequestSchema: GenMessage<SetPasswordRequest, {jsonType: SetPasswordRequestJson}>;

/**
 * @generated from message zitadel.user.v2.SetPasswordResponse
 */
export declare type SetPasswordResponse = Message<"zitadel.user.v2.SetPasswordResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.SetPasswordResponse
 */
export declare type SetPasswordResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.SetPasswordResponse.
 * Use `create(SetPasswordResponseSchema)` to create a new message.
 */
export declare const SetPasswordResponseSchema: GenMessage<SetPasswordResponse, {jsonType: SetPasswordResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListAuthenticationMethodTypesRequest
 */
export declare type ListAuthenticationMethodTypesRequest = Message<"zitadel.user.v2.ListAuthenticationMethodTypesRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional zitadel.user.v2.DomainQuery domain_query = 2;
   */
  domainQuery?: DomainQuery;
};

/**
 * @generated from message zitadel.user.v2.ListAuthenticationMethodTypesRequest
 */
export declare type ListAuthenticationMethodTypesRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: optional zitadel.user.v2.DomainQuery domain_query = 2;
   */
  domainQuery?: DomainQueryJson;
};

/**
 * Describes the message zitadel.user.v2.ListAuthenticationMethodTypesRequest.
 * Use `create(ListAuthenticationMethodTypesRequestSchema)` to create a new message.
 */
export declare const ListAuthenticationMethodTypesRequestSchema: GenMessage<ListAuthenticationMethodTypesRequest, {jsonType: ListAuthenticationMethodTypesRequestJson}>;

/**
 * @generated from message zitadel.user.v2.DomainQuery
 */
export declare type DomainQuery = Message<"zitadel.user.v2.DomainQuery"> & {
  /**
   * List also auth method types without domain information like passkey and U2F added through V1 APIs / Login UI.
   *
   * @generated from field: bool include_without_domain = 1;
   */
  includeWithoutDomain: boolean;

  /**
   * List only auth methods with specific domain.
   *
   * @generated from field: string domain = 2;
   */
  domain: string;
};

/**
 * @generated from message zitadel.user.v2.DomainQuery
 */
export declare type DomainQueryJson = {
  /**
   * List also auth method types without domain information like passkey and U2F added through V1 APIs / Login UI.
   *
   * @generated from field: bool include_without_domain = 1;
   */
  includeWithoutDomain?: boolean;

  /**
   * List only auth methods with specific domain.
   *
   * @generated from field: string domain = 2;
   */
  domain?: string;
};

/**
 * Describes the message zitadel.user.v2.DomainQuery.
 * Use `create(DomainQuerySchema)` to create a new message.
 */
export declare const DomainQuerySchema: GenMessage<DomainQuery, {jsonType: DomainQueryJson}>;

/**
 * @generated from message zitadel.user.v2.ListAuthenticationMethodTypesResponse
 */
export declare type ListAuthenticationMethodTypesResponse = Message<"zitadel.user.v2.ListAuthenticationMethodTypesResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetails;

  /**
   * @generated from field: repeated zitadel.user.v2.AuthenticationMethodType auth_method_types = 2;
   */
  authMethodTypes: AuthenticationMethodType[];
};

/**
 * @generated from message zitadel.user.v2.ListAuthenticationMethodTypesResponse
 */
export declare type ListAuthenticationMethodTypesResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.ListDetails details = 1;
   */
  details?: ListDetailsJson;

  /**
   * @generated from field: repeated zitadel.user.v2.AuthenticationMethodType auth_method_types = 2;
   */
  authMethodTypes?: AuthenticationMethodTypeJson[];
};

/**
 * Describes the message zitadel.user.v2.ListAuthenticationMethodTypesResponse.
 * Use `create(ListAuthenticationMethodTypesResponseSchema)` to create a new message.
 */
export declare const ListAuthenticationMethodTypesResponseSchema: GenMessage<ListAuthenticationMethodTypesResponse, {jsonType: ListAuthenticationMethodTypesResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListAuthenticationFactorsRequest
 */
export declare type ListAuthenticationFactorsRequest = Message<"zitadel.user.v2.ListAuthenticationFactorsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactors auth_factors = 2;
   */
  authFactors: AuthFactors[];

  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactorState states = 3;
   */
  states: AuthFactorState[];
};

/**
 * @generated from message zitadel.user.v2.ListAuthenticationFactorsRequest
 */
export declare type ListAuthenticationFactorsRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactors auth_factors = 2;
   */
  authFactors?: AuthFactorsJson[];

  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactorState states = 3;
   */
  states?: AuthFactorStateJson[];
};

/**
 * Describes the message zitadel.user.v2.ListAuthenticationFactorsRequest.
 * Use `create(ListAuthenticationFactorsRequestSchema)` to create a new message.
 */
export declare const ListAuthenticationFactorsRequestSchema: GenMessage<ListAuthenticationFactorsRequest, {jsonType: ListAuthenticationFactorsRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListAuthenticationFactorsResponse
 */
export declare type ListAuthenticationFactorsResponse = Message<"zitadel.user.v2.ListAuthenticationFactorsResponse"> & {
  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactor result = 1;
   */
  result: AuthFactor[];
};

/**
 * @generated from message zitadel.user.v2.ListAuthenticationFactorsResponse
 */
export declare type ListAuthenticationFactorsResponseJson = {
  /**
   * @generated from field: repeated zitadel.user.v2.AuthFactor result = 1;
   */
  result?: AuthFactorJson[];
};

/**
 * Describes the message zitadel.user.v2.ListAuthenticationFactorsResponse.
 * Use `create(ListAuthenticationFactorsResponseSchema)` to create a new message.
 */
export declare const ListAuthenticationFactorsResponseSchema: GenMessage<ListAuthenticationFactorsResponse, {jsonType: ListAuthenticationFactorsResponseJson}>;

/**
 * @generated from message zitadel.user.v2.CreateInviteCodeRequest
 */
export declare type CreateInviteCodeRequest = Message<"zitadel.user.v2.CreateInviteCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * if no verification is specified, an email is sent with the default url and application name (ZITADEL)
   *
   * @generated from oneof zitadel.user.v2.CreateInviteCodeRequest.verification
   */
  verification: {
    /**
     * @generated from field: zitadel.user.v2.SendInviteCode send_code = 2;
     */
    value: SendInviteCode;
    case: "sendCode";
  } | {
    /**
     * @generated from field: zitadel.user.v2.ReturnInviteCode return_code = 3;
     */
    value: ReturnInviteCode;
    case: "returnCode";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2.CreateInviteCodeRequest
 */
export declare type CreateInviteCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.user.v2.SendInviteCode send_code = 2;
   */
  sendCode?: SendInviteCodeJson;

  /**
   * @generated from field: zitadel.user.v2.ReturnInviteCode return_code = 3;
   */
  returnCode?: ReturnInviteCodeJson;
};

/**
 * Describes the message zitadel.user.v2.CreateInviteCodeRequest.
 * Use `create(CreateInviteCodeRequestSchema)` to create a new message.
 */
export declare const CreateInviteCodeRequestSchema: GenMessage<CreateInviteCodeRequest, {jsonType: CreateInviteCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.CreateInviteCodeResponse
 */
export declare type CreateInviteCodeResponse = Message<"zitadel.user.v2.CreateInviteCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;

  /**
   * The invite code is returned if the verification was set to return_code.
   *
   * @generated from field: optional string invite_code = 2;
   */
  inviteCode?: string;
};

/**
 * @generated from message zitadel.user.v2.CreateInviteCodeResponse
 */
export declare type CreateInviteCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;

  /**
   * The invite code is returned if the verification was set to return_code.
   *
   * @generated from field: optional string invite_code = 2;
   */
  inviteCode?: string;
};

/**
 * Describes the message zitadel.user.v2.CreateInviteCodeResponse.
 * Use `create(CreateInviteCodeResponseSchema)` to create a new message.
 */
export declare const CreateInviteCodeResponseSchema: GenMessage<CreateInviteCodeResponse, {jsonType: CreateInviteCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ResendInviteCodeRequest
 */
export declare type ResendInviteCodeRequest = Message<"zitadel.user.v2.ResendInviteCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.ResendInviteCodeRequest
 */
export declare type ResendInviteCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.ResendInviteCodeRequest.
 * Use `create(ResendInviteCodeRequestSchema)` to create a new message.
 */
export declare const ResendInviteCodeRequestSchema: GenMessage<ResendInviteCodeRequest, {jsonType: ResendInviteCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ResendInviteCodeResponse
 */
export declare type ResendInviteCodeResponse = Message<"zitadel.user.v2.ResendInviteCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.ResendInviteCodeResponse
 */
export declare type ResendInviteCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.ResendInviteCodeResponse.
 * Use `create(ResendInviteCodeResponseSchema)` to create a new message.
 */
export declare const ResendInviteCodeResponseSchema: GenMessage<ResendInviteCodeResponse, {jsonType: ResendInviteCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyInviteCodeRequest
 */
export declare type VerifyInviteCodeRequest = Message<"zitadel.user.v2.VerifyInviteCodeRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode: string;
};

/**
 * @generated from message zitadel.user.v2.VerifyInviteCodeRequest
 */
export declare type VerifyInviteCodeRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: string verification_code = 2;
   */
  verificationCode?: string;
};

/**
 * Describes the message zitadel.user.v2.VerifyInviteCodeRequest.
 * Use `create(VerifyInviteCodeRequestSchema)` to create a new message.
 */
export declare const VerifyInviteCodeRequestSchema: GenMessage<VerifyInviteCodeRequest, {jsonType: VerifyInviteCodeRequestJson}>;

/**
 * @generated from message zitadel.user.v2.VerifyInviteCodeResponse
 */
export declare type VerifyInviteCodeResponse = Message<"zitadel.user.v2.VerifyInviteCodeResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.VerifyInviteCodeResponse
 */
export declare type VerifyInviteCodeResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.VerifyInviteCodeResponse.
 * Use `create(VerifyInviteCodeResponseSchema)` to create a new message.
 */
export declare const VerifyInviteCodeResponseSchema: GenMessage<VerifyInviteCodeResponse, {jsonType: VerifyInviteCodeResponseJson}>;

/**
 * @generated from message zitadel.user.v2.HumanMFAInitSkippedRequest
 */
export declare type HumanMFAInitSkippedRequest = Message<"zitadel.user.v2.HumanMFAInitSkippedRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.HumanMFAInitSkippedRequest
 */
export declare type HumanMFAInitSkippedRequestJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.HumanMFAInitSkippedRequest.
 * Use `create(HumanMFAInitSkippedRequestSchema)` to create a new message.
 */
export declare const HumanMFAInitSkippedRequestSchema: GenMessage<HumanMFAInitSkippedRequest, {jsonType: HumanMFAInitSkippedRequestJson}>;

/**
 * @generated from message zitadel.user.v2.HumanMFAInitSkippedResponse
 */
export declare type HumanMFAInitSkippedResponse = Message<"zitadel.user.v2.HumanMFAInitSkippedResponse"> & {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: Details;
};

/**
 * @generated from message zitadel.user.v2.HumanMFAInitSkippedResponse
 */
export declare type HumanMFAInitSkippedResponseJson = {
  /**
   * @generated from field: zitadel.object.v2.Details details = 1;
   */
  details?: DetailsJson;
};

/**
 * Describes the message zitadel.user.v2.HumanMFAInitSkippedResponse.
 * Use `create(HumanMFAInitSkippedResponseSchema)` to create a new message.
 */
export declare const HumanMFAInitSkippedResponseSchema: GenMessage<HumanMFAInitSkippedResponse, {jsonType: HumanMFAInitSkippedResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddSecretRequest
 */
export declare type AddSecretRequest = Message<"zitadel.user.v2.AddSecretRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.AddSecretRequest
 */
export declare type AddSecretRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.AddSecretRequest.
 * Use `create(AddSecretRequestSchema)` to create a new message.
 */
export declare const AddSecretRequestSchema: GenMessage<AddSecretRequest, {jsonType: AddSecretRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddSecretResponse
 */
export declare type AddSecretResponse = Message<"zitadel.user.v2.AddSecretResponse"> & {
  /**
   * The timestamp of the secret creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: Timestamp;

  /**
   * The client secret.
   * Store this secret in a secure place.
   * It is not possible to retrieve it again.
   *
   * @generated from field: string client_secret = 2;
   */
  clientSecret: string;
};

/**
 * @generated from message zitadel.user.v2.AddSecretResponse
 */
export declare type AddSecretResponseJson = {
  /**
   * The timestamp of the secret creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: TimestampJson;

  /**
   * The client secret.
   * Store this secret in a secure place.
   * It is not possible to retrieve it again.
   *
   * @generated from field: string client_secret = 2;
   */
  clientSecret?: string;
};

/**
 * Describes the message zitadel.user.v2.AddSecretResponse.
 * Use `create(AddSecretResponseSchema)` to create a new message.
 */
export declare const AddSecretResponseSchema: GenMessage<AddSecretResponse, {jsonType: AddSecretResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveSecretRequest
 */
export declare type RemoveSecretRequest = Message<"zitadel.user.v2.RemoveSecretRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveSecretRequest
 */
export declare type RemoveSecretRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveSecretRequest.
 * Use `create(RemoveSecretRequestSchema)` to create a new message.
 */
export declare const RemoveSecretRequestSchema: GenMessage<RemoveSecretRequest, {jsonType: RemoveSecretRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveSecretResponse
 */
export declare type RemoveSecretResponse = Message<"zitadel.user.v2.RemoveSecretResponse"> & {
  /**
   * The timestamp of the secret deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2.RemoveSecretResponse
 */
export declare type RemoveSecretResponseJson = {
  /**
   * The timestamp of the secret deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveSecretResponse.
 * Use `create(RemoveSecretResponseSchema)` to create a new message.
 */
export declare const RemoveSecretResponseSchema: GenMessage<RemoveSecretResponse, {jsonType: RemoveSecretResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddKeyRequest
 */
export declare type AddKeyRequest = Message<"zitadel.user.v2.AddKeyRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The date the key will expire and no logins will be possible anymore.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: Timestamp;

  /**
   * Optionally provide a public key of your own generated RSA private key.
   *
   * @generated from field: bytes public_key = 3;
   */
  publicKey: Uint8Array;
};

/**
 * @generated from message zitadel.user.v2.AddKeyRequest
 */
export declare type AddKeyRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * The date the key will expire and no logins will be possible anymore.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: TimestampJson;

  /**
   * Optionally provide a public key of your own generated RSA private key.
   *
   * @generated from field: bytes public_key = 3;
   */
  publicKey?: string;
};

/**
 * Describes the message zitadel.user.v2.AddKeyRequest.
 * Use `create(AddKeyRequestSchema)` to create a new message.
 */
export declare const AddKeyRequestSchema: GenMessage<AddKeyRequest, {jsonType: AddKeyRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddKeyResponse
 */
export declare type AddKeyResponse = Message<"zitadel.user.v2.AddKeyResponse"> & {
  /**
   * The timestamp of the key creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: Timestamp;

  /**
   * The keys ID.
   *
   * @generated from field: string key_id = 2;
   */
  keyId: string;

  /**
   * The key which is usable to authenticate against the API.
   *
   * @generated from field: bytes key_content = 3;
   */
  keyContent: Uint8Array;
};

/**
 * @generated from message zitadel.user.v2.AddKeyResponse
 */
export declare type AddKeyResponseJson = {
  /**
   * The timestamp of the key creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: TimestampJson;

  /**
   * The keys ID.
   *
   * @generated from field: string key_id = 2;
   */
  keyId?: string;

  /**
   * The key which is usable to authenticate against the API.
   *
   * @generated from field: bytes key_content = 3;
   */
  keyContent?: string;
};

/**
 * Describes the message zitadel.user.v2.AddKeyResponse.
 * Use `create(AddKeyResponseSchema)` to create a new message.
 */
export declare const AddKeyResponseSchema: GenMessage<AddKeyResponse, {jsonType: AddKeyResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveKeyRequest
 */
export declare type RemoveKeyRequest = Message<"zitadel.user.v2.RemoveKeyRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The keys ID.
   *
   * @generated from field: string key_id = 2;
   */
  keyId: string;
};

/**
 * @generated from message zitadel.user.v2.RemoveKeyRequest
 */
export declare type RemoveKeyRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * The keys ID.
   *
   * @generated from field: string key_id = 2;
   */
  keyId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemoveKeyRequest.
 * Use `create(RemoveKeyRequestSchema)` to create a new message.
 */
export declare const RemoveKeyRequestSchema: GenMessage<RemoveKeyRequest, {jsonType: RemoveKeyRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemoveKeyResponse
 */
export declare type RemoveKeyResponse = Message<"zitadel.user.v2.RemoveKeyResponse"> & {
  /**
   * The timestamp of the key deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2.RemoveKeyResponse
 */
export declare type RemoveKeyResponseJson = {
  /**
   * The timestamp of the key deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2.RemoveKeyResponse.
 * Use `create(RemoveKeyResponseSchema)` to create a new message.
 */
export declare const RemoveKeyResponseSchema: GenMessage<RemoveKeyResponse, {jsonType: RemoveKeyResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListKeysRequest
 */
export declare type ListKeysRequest = Message<"zitadel.user.v2.ListKeysRequest"> & {
  /**
   * List limitations and ordering.
   *
   * @generated from field: optional zitadel.filter.v2.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.user.v2.KeyFieldName sorting_column = 2;
   */
  sortingColumn?: KeyFieldName;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.user.v2.KeysSearchFilter filters = 3;
   */
  filters: KeysSearchFilter[];
};

/**
 * @generated from message zitadel.user.v2.ListKeysRequest
 */
export declare type ListKeysRequestJson = {
  /**
   * List limitations and ordering.
   *
   * @generated from field: optional zitadel.filter.v2.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequestJson;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.user.v2.KeyFieldName sorting_column = 2;
   */
  sortingColumn?: KeyFieldNameJson;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.user.v2.KeysSearchFilter filters = 3;
   */
  filters?: KeysSearchFilterJson[];
};

/**
 * Describes the message zitadel.user.v2.ListKeysRequest.
 * Use `create(ListKeysRequestSchema)` to create a new message.
 */
export declare const ListKeysRequestSchema: GenMessage<ListKeysRequest, {jsonType: ListKeysRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListKeysResponse
 */
export declare type ListKeysResponse = Message<"zitadel.user.v2.ListKeysResponse"> & {
  /**
   * @generated from field: zitadel.filter.v2.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponse;

  /**
   * @generated from field: repeated zitadel.user.v2.Key result = 2;
   */
  result: Key[];
};

/**
 * @generated from message zitadel.user.v2.ListKeysResponse
 */
export declare type ListKeysResponseJson = {
  /**
   * @generated from field: zitadel.filter.v2.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponseJson;

  /**
   * @generated from field: repeated zitadel.user.v2.Key result = 2;
   */
  result?: KeyJson[];
};

/**
 * Describes the message zitadel.user.v2.ListKeysResponse.
 * Use `create(ListKeysResponseSchema)` to create a new message.
 */
export declare const ListKeysResponseSchema: GenMessage<ListKeysResponse, {jsonType: ListKeysResponseJson}>;

/**
 * @generated from message zitadel.user.v2.AddPersonalAccessTokenRequest
 */
export declare type AddPersonalAccessTokenRequest = Message<"zitadel.user.v2.AddPersonalAccessTokenRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The timestamp when the token will expire.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2.AddPersonalAccessTokenRequest
 */
export declare type AddPersonalAccessTokenRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * The timestamp when the token will expire.
   *
   * @generated from field: google.protobuf.Timestamp expiration_date = 2;
   */
  expirationDate?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2.AddPersonalAccessTokenRequest.
 * Use `create(AddPersonalAccessTokenRequestSchema)` to create a new message.
 */
export declare const AddPersonalAccessTokenRequestSchema: GenMessage<AddPersonalAccessTokenRequest, {jsonType: AddPersonalAccessTokenRequestJson}>;

/**
 * @generated from message zitadel.user.v2.AddPersonalAccessTokenResponse
 */
export declare type AddPersonalAccessTokenResponse = Message<"zitadel.user.v2.AddPersonalAccessTokenResponse"> & {
  /**
   * The timestamp of the personal access token creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: Timestamp;

  /**
   * The tokens ID.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  /**
   * The personal access token that can be used to authenticate against the API
   *
   * @generated from field: string token = 3;
   */
  token: string;
};

/**
 * @generated from message zitadel.user.v2.AddPersonalAccessTokenResponse
 */
export declare type AddPersonalAccessTokenResponseJson = {
  /**
   * The timestamp of the personal access token creation.
   *
   * @generated from field: google.protobuf.Timestamp creation_date = 1;
   */
  creationDate?: TimestampJson;

  /**
   * The tokens ID.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId?: string;

  /**
   * The personal access token that can be used to authenticate against the API
   *
   * @generated from field: string token = 3;
   */
  token?: string;
};

/**
 * Describes the message zitadel.user.v2.AddPersonalAccessTokenResponse.
 * Use `create(AddPersonalAccessTokenResponseSchema)` to create a new message.
 */
export declare const AddPersonalAccessTokenResponseSchema: GenMessage<AddPersonalAccessTokenResponse, {jsonType: AddPersonalAccessTokenResponseJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePersonalAccessTokenRequest
 */
export declare type RemovePersonalAccessTokenRequest = Message<"zitadel.user.v2.RemovePersonalAccessTokenRequest"> & {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * The tokens ID.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId: string;
};

/**
 * @generated from message zitadel.user.v2.RemovePersonalAccessTokenRequest
 */
export declare type RemovePersonalAccessTokenRequestJson = {
  /**
   * The users resource ID.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * The tokens ID.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId?: string;
};

/**
 * Describes the message zitadel.user.v2.RemovePersonalAccessTokenRequest.
 * Use `create(RemovePersonalAccessTokenRequestSchema)` to create a new message.
 */
export declare const RemovePersonalAccessTokenRequestSchema: GenMessage<RemovePersonalAccessTokenRequest, {jsonType: RemovePersonalAccessTokenRequestJson}>;

/**
 * @generated from message zitadel.user.v2.RemovePersonalAccessTokenResponse
 */
export declare type RemovePersonalAccessTokenResponse = Message<"zitadel.user.v2.RemovePersonalAccessTokenResponse"> & {
  /**
   * The timestamp of the personal access token deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2.RemovePersonalAccessTokenResponse
 */
export declare type RemovePersonalAccessTokenResponseJson = {
  /**
   * The timestamp of the personal access token deletion.
   *
   * @generated from field: google.protobuf.Timestamp deletion_date = 1;
   */
  deletionDate?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2.RemovePersonalAccessTokenResponse.
 * Use `create(RemovePersonalAccessTokenResponseSchema)` to create a new message.
 */
export declare const RemovePersonalAccessTokenResponseSchema: GenMessage<RemovePersonalAccessTokenResponse, {jsonType: RemovePersonalAccessTokenResponseJson}>;

/**
 * @generated from message zitadel.user.v2.ListPersonalAccessTokensRequest
 */
export declare type ListPersonalAccessTokensRequest = Message<"zitadel.user.v2.ListPersonalAccessTokensRequest"> & {
  /**
   * List limitations and ordering.
   *
   * @generated from field: optional zitadel.filter.v2.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.user.v2.PersonalAccessTokenFieldName sorting_column = 2;
   */
  sortingColumn?: PersonalAccessTokenFieldName;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.user.v2.PersonalAccessTokensSearchFilter filters = 3;
   */
  filters: PersonalAccessTokensSearchFilter[];
};

/**
 * @generated from message zitadel.user.v2.ListPersonalAccessTokensRequest
 */
export declare type ListPersonalAccessTokensRequestJson = {
  /**
   * List limitations and ordering.
   *
   * @generated from field: optional zitadel.filter.v2.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequestJson;

  /**
   * The field the result is sorted by. The default is the creation date. Beware that if you change this, your result pagination might be inconsistent.
   *
   * @generated from field: optional zitadel.user.v2.PersonalAccessTokenFieldName sorting_column = 2;
   */
  sortingColumn?: PersonalAccessTokenFieldNameJson;

  /**
   * Define the criteria to query for.
   *
   * @generated from field: repeated zitadel.user.v2.PersonalAccessTokensSearchFilter filters = 3;
   */
  filters?: PersonalAccessTokensSearchFilterJson[];
};

/**
 * Describes the message zitadel.user.v2.ListPersonalAccessTokensRequest.
 * Use `create(ListPersonalAccessTokensRequestSchema)` to create a new message.
 */
export declare const ListPersonalAccessTokensRequestSchema: GenMessage<ListPersonalAccessTokensRequest, {jsonType: ListPersonalAccessTokensRequestJson}>;

/**
 * @generated from message zitadel.user.v2.ListPersonalAccessTokensResponse
 */
export declare type ListPersonalAccessTokensResponse = Message<"zitadel.user.v2.ListPersonalAccessTokensResponse"> & {
  /**
   * @generated from field: zitadel.filter.v2.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponse;

  /**
   * @generated from field: repeated zitadel.user.v2.PersonalAccessToken result = 2;
   */
  result: PersonalAccessToken[];
};

/**
 * @generated from message zitadel.user.v2.ListPersonalAccessTokensResponse
 */
export declare type ListPersonalAccessTokensResponseJson = {
  /**
   * @generated from field: zitadel.filter.v2.PaginationResponse pagination = 1;
   */
  pagination?: PaginationResponseJson;

  /**
   * @generated from field: repeated zitadel.user.v2.PersonalAccessToken result = 2;
   */
  result?: PersonalAccessTokenJson[];
};

/**
 * Describes the message zitadel.user.v2.ListPersonalAccessTokensResponse.
 * Use `create(ListPersonalAccessTokensResponseSchema)` to create a new message.
 */
export declare const ListPersonalAccessTokensResponseSchema: GenMessage<ListPersonalAccessTokensResponse, {jsonType: ListPersonalAccessTokensResponseJson}>;

/**
 * @generated from enum zitadel.user.v2.AuthenticationMethodType
 */
export enum AuthenticationMethodType {
  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_PASSWORD = 1;
   */
  PASSWORD = 1,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_PASSKEY = 2;
   */
  PASSKEY = 2,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_IDP = 3;
   */
  IDP = 3,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_TOTP = 4;
   */
  TOTP = 4,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_U2F = 5;
   */
  U2F = 5,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_OTP_SMS = 6;
   */
  OTP_SMS = 6,

  /**
   * @generated from enum value: AUTHENTICATION_METHOD_TYPE_OTP_EMAIL = 7;
   */
  OTP_EMAIL = 7,
}

/**
 * @generated from enum zitadel.user.v2.AuthenticationMethodType
 */
export declare type AuthenticationMethodTypeJson = "AUTHENTICATION_METHOD_TYPE_UNSPECIFIED" | "AUTHENTICATION_METHOD_TYPE_PASSWORD" | "AUTHENTICATION_METHOD_TYPE_PASSKEY" | "AUTHENTICATION_METHOD_TYPE_IDP" | "AUTHENTICATION_METHOD_TYPE_TOTP" | "AUTHENTICATION_METHOD_TYPE_U2F" | "AUTHENTICATION_METHOD_TYPE_OTP_SMS" | "AUTHENTICATION_METHOD_TYPE_OTP_EMAIL";

/**
 * Describes the enum zitadel.user.v2.AuthenticationMethodType.
 */
export declare const AuthenticationMethodTypeSchema: GenEnum<AuthenticationMethodType, AuthenticationMethodTypeJson>;

/**
 * @generated from enum zitadel.user.v2.AuthFactors
 */
export enum AuthFactors {
  /**
   * @generated from enum value: OTP = 0;
   */
  OTP = 0,

  /**
   * @generated from enum value: OTP_SMS = 1;
   */
  OTP_SMS = 1,

  /**
   * @generated from enum value: OTP_EMAIL = 2;
   */
  OTP_EMAIL = 2,

  /**
   * @generated from enum value: U2F = 3;
   */
  U2F = 3,
}

/**
 * @generated from enum zitadel.user.v2.AuthFactors
 */
export declare type AuthFactorsJson = "OTP" | "OTP_SMS" | "OTP_EMAIL" | "U2F";

/**
 * Describes the enum zitadel.user.v2.AuthFactors.
 */
export declare const AuthFactorsSchema: GenEnum<AuthFactors, AuthFactorsJson>;

/**
 * @generated from service zitadel.user.v2.UserService
 */
export declare const UserService: GenService<{
  /**
   * Create a User
   *
   * Create a new human or machine user in the specified organization.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof CreateUserResponseSchema;
  },
  /**
   * Create a new human user
   *
   * Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
   *
   * @generated from rpc zitadel.user.v2.UserService.AddHumanUser
   */
  addHumanUser: {
    methodKind: "unary";
    input: typeof AddHumanUserRequestSchema;
    output: typeof AddHumanUserResponseSchema;
  },
  /**
   * User by ID
   *
   * Returns the full user object (human or machine) including the profile, email, etc..
   *
   * @generated from rpc zitadel.user.v2.UserService.GetUserByID
   */
  getUserByID: {
    methodKind: "unary";
    input: typeof GetUserByIDRequestSchema;
    output: typeof GetUserByIDResponseSchema;
  },
  /**
   * Search Users
   *
   * Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
   *
   * @generated from rpc zitadel.user.v2.UserService.ListUsers
   */
  listUsers: {
    methodKind: "unary";
    input: typeof ListUsersRequestSchema;
    output: typeof ListUsersResponseSchema;
  },
  /**
   * Change the user email
   *
   * Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email..
   *
   * @generated from rpc zitadel.user.v2.UserService.SetEmail
   */
  setEmail: {
    methodKind: "unary";
    input: typeof SetEmailRequestSchema;
    output: typeof SetEmailResponseSchema;
  },
  /**
   * Resend code to verify user email
   *
   * @generated from rpc zitadel.user.v2.UserService.ResendEmailCode
   */
  resendEmailCode: {
    methodKind: "unary";
    input: typeof ResendEmailCodeRequestSchema;
    output: typeof ResendEmailCodeResponseSchema;
  },
  /**
   * Send code to verify user email
   *
   * @generated from rpc zitadel.user.v2.UserService.SendEmailCode
   */
  sendEmailCode: {
    methodKind: "unary";
    input: typeof SendEmailCodeRequestSchema;
    output: typeof SendEmailCodeResponseSchema;
  },
  /**
   * Verify the email
   *
   * Verify the email with the generated code.
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyEmail
   */
  verifyEmail: {
    methodKind: "unary";
    input: typeof VerifyEmailRequestSchema;
    output: typeof VerifyEmailResponseSchema;
  },
  /**
   * Set the user phone
   *
   * Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms..
   *
   * @generated from rpc zitadel.user.v2.UserService.SetPhone
   */
  setPhone: {
    methodKind: "unary";
    input: typeof SetPhoneRequestSchema;
    output: typeof SetPhoneResponseSchema;
  },
  /**
   * Delete the user phone
   *
   * Delete the phone number of a user.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemovePhone
   */
  removePhone: {
    methodKind: "unary";
    input: typeof RemovePhoneRequestSchema;
    output: typeof RemovePhoneResponseSchema;
  },
  /**
   * Resend code to verify user phone
   *
   * @generated from rpc zitadel.user.v2.UserService.ResendPhoneCode
   */
  resendPhoneCode: {
    methodKind: "unary";
    input: typeof ResendPhoneCodeRequestSchema;
    output: typeof ResendPhoneCodeResponseSchema;
  },
  /**
   * Verify the phone
   *
   * Verify the phone with the generated code..
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyPhone
   */
  verifyPhone: {
    methodKind: "unary";
    input: typeof VerifyPhoneRequestSchema;
    output: typeof VerifyPhoneResponseSchema;
  },
  /**
   * Update a User
   *
   * Partially update an existing user.
   * If you change the users email or phone, you can specify how the ownership should be verified.
   * If you change the users password, you can specify if the password should be changed again on the users next login.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UpdateUserResponseSchema;
  },
  /**
   * Update Human User
   *
   * Update all information from a user..
   *
   * @generated from rpc zitadel.user.v2.UserService.UpdateHumanUser
   */
  updateHumanUser: {
    methodKind: "unary";
    input: typeof UpdateHumanUserRequestSchema;
    output: typeof UpdateHumanUserResponseSchema;
  },
  /**
   * Deactivate user
   *
   * The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data..
   *
   * @generated from rpc zitadel.user.v2.UserService.DeactivateUser
   */
  deactivateUser: {
    methodKind: "unary";
    input: typeof DeactivateUserRequestSchema;
    output: typeof DeactivateUserResponseSchema;
  },
  /**
   * Reactivate user
   *
   * Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'..
   *
   * @generated from rpc zitadel.user.v2.UserService.ReactivateUser
   */
  reactivateUser: {
    methodKind: "unary";
    input: typeof ReactivateUserRequestSchema;
    output: typeof ReactivateUserResponseSchema;
  },
  /**
   * Lock user
   *
   * The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.)..
   *
   * @generated from rpc zitadel.user.v2.UserService.LockUser
   */
  lockUser: {
    methodKind: "unary";
    input: typeof LockUserRequestSchema;
    output: typeof LockUserResponseSchema;
  },
  /**
   * Unlock user
   *
   * The state of the user will be changed to 'active'. The user will be able to log in again. The endpoint returns an error if the user is not in the state 'locked'.
   *
   * @generated from rpc zitadel.user.v2.UserService.UnlockUser
   */
  unlockUser: {
    methodKind: "unary";
    input: typeof UnlockUserRequestSchema;
    output: typeof UnlockUserResponseSchema;
  },
  /**
   * Delete user
   *
   * The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found..
   *
   * @generated from rpc zitadel.user.v2.UserService.DeleteUser
   */
  deleteUser: {
    methodKind: "unary";
    input: typeof DeleteUserRequestSchema;
    output: typeof DeleteUserResponseSchema;
  },
  /**
   * Start the registration of passkey for a user
   *
   * Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey..
   *
   * @generated from rpc zitadel.user.v2.UserService.RegisterPasskey
   */
  registerPasskey: {
    methodKind: "unary";
    input: typeof RegisterPasskeyRequestSchema;
    output: typeof RegisterPasskeyResponseSchema;
  },
  /**
   * Verify a passkey for a user
   *
   * Verify the passkey registration with the public key credential..
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyPasskeyRegistration
   */
  verifyPasskeyRegistration: {
    methodKind: "unary";
    input: typeof VerifyPasskeyRegistrationRequestSchema;
    output: typeof VerifyPasskeyRegistrationResponseSchema;
  },
  /**
   * Create a passkey registration link for a user
   *
   * Create a passkey registration link which includes a code and either return it or send it to the user..
   *
   * @generated from rpc zitadel.user.v2.UserService.CreatePasskeyRegistrationLink
   */
  createPasskeyRegistrationLink: {
    methodKind: "unary";
    input: typeof CreatePasskeyRegistrationLinkRequestSchema;
    output: typeof CreatePasskeyRegistrationLinkResponseSchema;
  },
  /**
   * List passkeys of an user
   *
   * List passkeys of an user
   *
   * @generated from rpc zitadel.user.v2.UserService.ListPasskeys
   */
  listPasskeys: {
    methodKind: "unary";
    input: typeof ListPasskeysRequestSchema;
    output: typeof ListPasskeysResponseSchema;
  },
  /**
   * Remove passkey from a user
   *
   * Remove passkey from a user.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemovePasskey
   */
  removePasskey: {
    methodKind: "unary";
    input: typeof RemovePasskeyRequestSchema;
    output: typeof RemovePasskeyResponseSchema;
  },
  /**
   * Start the registration of a u2f token for a user
   *
   * Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token..
   *
   * @generated from rpc zitadel.user.v2.UserService.RegisterU2F
   */
  registerU2F: {
    methodKind: "unary";
    input: typeof RegisterU2FRequestSchema;
    output: typeof RegisterU2FResponseSchema;
  },
  /**
   * Verify a u2f token for a user
   *
   * Verify the u2f token registration with the public key credential..
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyU2FRegistration
   */
  verifyU2FRegistration: {
    methodKind: "unary";
    input: typeof VerifyU2FRegistrationRequestSchema;
    output: typeof VerifyU2FRegistrationResponseSchema;
  },
  /**
   * Remove u2f token from a user
   *
   * Remove u2f token from a user.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveU2F
   */
  removeU2F: {
    methodKind: "unary";
    input: typeof RemoveU2FRequestSchema;
    output: typeof RemoveU2FResponseSchema;
  },
  /**
   * Start the registration of a TOTP generator for a user
   *
   * Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device..
   *
   * @generated from rpc zitadel.user.v2.UserService.RegisterTOTP
   */
  registerTOTP: {
    methodKind: "unary";
    input: typeof RegisterTOTPRequestSchema;
    output: typeof RegisterTOTPResponseSchema;
  },
  /**
   * Verify a TOTP generator for a user
   *
   * Verify the TOTP registration with a generated code..
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyTOTPRegistration
   */
  verifyTOTPRegistration: {
    methodKind: "unary";
    input: typeof VerifyTOTPRegistrationRequestSchema;
    output: typeof VerifyTOTPRegistrationResponseSchema;
  },
  /**
   * Remove TOTP generator from a user
   *
   * Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveTOTP
   */
  removeTOTP: {
    methodKind: "unary";
    input: typeof RemoveTOTPRequestSchema;
    output: typeof RemoveTOTPResponseSchema;
  },
  /**
   * Add OTP SMS for a user
   *
   * Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor..
   *
   * @generated from rpc zitadel.user.v2.UserService.AddOTPSMS
   */
  addOTPSMS: {
    methodKind: "unary";
    input: typeof AddOTPSMSRequestSchema;
    output: typeof AddOTPSMSResponseSchema;
  },
  /**
   * Remove One-Time Password (OTP) SMS from a user
   *
   * Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveOTPSMS
   */
  removeOTPSMS: {
    methodKind: "unary";
    input: typeof RemoveOTPSMSRequestSchema;
    output: typeof RemoveOTPSMSResponseSchema;
  },
  /**
   * Add OTP Email for a user
   *
   * Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor..
   *
   * @generated from rpc zitadel.user.v2.UserService.AddOTPEmail
   */
  addOTPEmail: {
    methodKind: "unary";
    input: typeof AddOTPEmailRequestSchema;
    output: typeof AddOTPEmailResponseSchema;
  },
  /**
   * Remove One-Time Password (OTP) Email from a user
   *
   * Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveOTPEmail
   */
  removeOTPEmail: {
    methodKind: "unary";
    input: typeof RemoveOTPEmailRequestSchema;
    output: typeof RemoveOTPEmailResponseSchema;
  },
  /**
   * Start flow with an identity provider
   *
   * Start a flow with an identity provider, for external login, registration or linking..
   *
   * @generated from rpc zitadel.user.v2.UserService.StartIdentityProviderIntent
   */
  startIdentityProviderIntent: {
    methodKind: "unary";
    input: typeof StartIdentityProviderIntentRequestSchema;
    output: typeof StartIdentityProviderIntentResponseSchema;
  },
  /**
   * Retrieve the information returned by the identity provider
   *
   * Retrieve the information returned by the identity provider for registration or updating an existing user with new information..
   *
   * @generated from rpc zitadel.user.v2.UserService.RetrieveIdentityProviderIntent
   */
  retrieveIdentityProviderIntent: {
    methodKind: "unary";
    input: typeof RetrieveIdentityProviderIntentRequestSchema;
    output: typeof RetrieveIdentityProviderIntentResponseSchema;
  },
  /**
   * Add link to an identity provider to an user
   *
   * Add link to an identity provider to an user..
   *
   * @generated from rpc zitadel.user.v2.UserService.AddIDPLink
   */
  addIDPLink: {
    methodKind: "unary";
    input: typeof AddIDPLinkRequestSchema;
    output: typeof AddIDPLinkResponseSchema;
  },
  /**
   * List links to an identity provider of an user
   *
   * List links to an identity provider of an user.
   *
   * @generated from rpc zitadel.user.v2.UserService.ListIDPLinks
   */
  listIDPLinks: {
    methodKind: "unary";
    input: typeof ListIDPLinksRequestSchema;
    output: typeof ListIDPLinksResponseSchema;
  },
  /**
   * Remove link of an identity provider to an user
   *
   * Remove link of an identity provider to an user.
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveIDPLink
   */
  removeIDPLink: {
    methodKind: "unary";
    input: typeof RemoveIDPLinkRequestSchema;
    output: typeof RemoveIDPLinkResponseSchema;
  },
  /**
   * Request a code to reset a password
   *
   * Request a code to reset a password..
   *
   * @generated from rpc zitadel.user.v2.UserService.PasswordReset
   */
  passwordReset: {
    methodKind: "unary";
    input: typeof PasswordResetRequestSchema;
    output: typeof PasswordResetResponseSchema;
  },
  /**
   * Change password
   *
   * Change the password of a user with either a verification code or the current password..
   *
   * @generated from rpc zitadel.user.v2.UserService.SetPassword
   */
  setPassword: {
    methodKind: "unary";
    input: typeof SetPasswordRequestSchema;
    output: typeof SetPasswordResponseSchema;
  },
  /**
   * Add a Users Secret
   *
   * Generates a client secret for the user.
   * The client id is the users username.
   * If the user already has a secret, it is overwritten.
   * Only users of type machine can have a secret.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.AddSecret
   */
  addSecret: {
    methodKind: "unary";
    input: typeof AddSecretRequestSchema;
    output: typeof AddSecretResponseSchema;
  },
  /**
   * Remove a Users Secret
   *
   * Remove the current client ID and client secret from a machine user.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveSecret
   */
  removeSecret: {
    methodKind: "unary";
    input: typeof RemoveSecretRequestSchema;
    output: typeof RemoveSecretResponseSchema;
  },
  /**
   * Add a Key
   *
   * Add a keys that can be used to securely authenticate at the Zitadel APIs using JWT profile authentication using short-lived tokens.
   * Make sure you store the returned key safely, as you won't be able to read it from the Zitadel API anymore.
   * Only users of type machine can have keys.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.AddKey
   */
  addKey: {
    methodKind: "unary";
    input: typeof AddKeyRequestSchema;
    output: typeof AddKeyResponseSchema;
  },
  /**
   * Remove a Key
   *
   * Remove a machine users key by the given key ID and an optionally given user ID.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.RemoveKey
   */
  removeKey: {
    methodKind: "unary";
    input: typeof RemoveKeyRequestSchema;
    output: typeof RemoveKeyResponseSchema;
  },
  /**
   * Search Keys
   *
   * List all matching keys. By default all keys of the instance on which the caller has permission to read the owning users are returned.
   * Make sure to include a limit and sorting for pagination.
   *
   * Required permission:
   *   - user.read
   *
   * @generated from rpc zitadel.user.v2.UserService.ListKeys
   */
  listKeys: {
    methodKind: "unary";
    input: typeof ListKeysRequestSchema;
    output: typeof ListKeysResponseSchema;
  },
  /**
   * Add a Personal Access Token
   *
   * Personal access tokens (PAT) are the easiest way to authenticate to the Zitadel APIs.
   * Make sure you store the returned PAT safely, as you won't be able to read it from the Zitadel API anymore.
   * Only users of type machine can have personal access tokens.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.AddPersonalAccessToken
   */
  addPersonalAccessToken: {
    methodKind: "unary";
    input: typeof AddPersonalAccessTokenRequestSchema;
    output: typeof AddPersonalAccessTokenResponseSchema;
  },
  /**
   * Remove a Personal Access Token
   *
   * Removes a machine users personal access token by the given token ID and an optionally given user ID.
   *
   * Required permission:
   *   - user.write
   *
   * @generated from rpc zitadel.user.v2.UserService.RemovePersonalAccessToken
   */
  removePersonalAccessToken: {
    methodKind: "unary";
    input: typeof RemovePersonalAccessTokenRequestSchema;
    output: typeof RemovePersonalAccessTokenResponseSchema;
  },
  /**
   * Search Personal Access Tokens
   *
   * List all personal access tokens. By default all personal access tokens of the instance on which the caller has permission to read the owning users are returned.
   * Make sure to include a limit and sorting for pagination.
   *
   * Required permission:
   *   - user.read
   *
   * @generated from rpc zitadel.user.v2.UserService.ListPersonalAccessTokens
   */
  listPersonalAccessTokens: {
    methodKind: "unary";
    input: typeof ListPersonalAccessTokensRequestSchema;
    output: typeof ListPersonalAccessTokensResponseSchema;
  },
  /**
   * List all possible authentication methods of a user
   *
   * List all possible authentication methods of a user like password, passwordless, (T)OTP and more..
   *
   * @generated from rpc zitadel.user.v2.UserService.ListAuthenticationMethodTypes
   */
  listAuthenticationMethodTypes: {
    methodKind: "unary";
    input: typeof ListAuthenticationMethodTypesRequestSchema;
    output: typeof ListAuthenticationMethodTypesResponseSchema;
  },
  /**
   * @generated from rpc zitadel.user.v2.UserService.ListAuthenticationFactors
   */
  listAuthenticationFactors: {
    methodKind: "unary";
    input: typeof ListAuthenticationFactorsRequestSchema;
    output: typeof ListAuthenticationFactorsResponseSchema;
  },
  /**
   * Create an invite code for a user
   *
   * Create an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
   * If an invite code has been created previously, it's url template and application name will be used as defaults for the new code.
   * The new code will overwrite the previous one and make it invalid.
   *
   * @generated from rpc zitadel.user.v2.UserService.CreateInviteCode
   */
  createInviteCode: {
    methodKind: "unary";
    input: typeof CreateInviteCodeRequestSchema;
    output: typeof CreateInviteCodeResponseSchema;
  },
  /**
   * Resend an invite code for a user
   *
   * Deprecated: Use [CreateInviteCode](apis/resources/user_service_v2/user-service-create-invite-code.api.mdx) instead.
   *
   * Resend an invite code for a user to initialize their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
   * A resend is only possible if a code has been created previously and sent to the user. If there is no code or it was directly returned, an error will be returned.
   *
   * @generated from rpc zitadel.user.v2.UserService.ResendInviteCode
   */
  resendInviteCode: {
    methodKind: "unary";
    input: typeof ResendInviteCodeRequestSchema;
    output: typeof ResendInviteCodeResponseSchema;
  },
  /**
   * Verify an invite code for a user
   *
   * Verify the invite code of a user previously issued. This will set their email to a verified state and
   * allow the user to set up their first authentication method (password, passkeys, IdP) depending on the organization's available methods.
   *
   * @generated from rpc zitadel.user.v2.UserService.VerifyInviteCode
   */
  verifyInviteCode: {
    methodKind: "unary";
    input: typeof VerifyInviteCodeRequestSchema;
    output: typeof VerifyInviteCodeResponseSchema;
  },
  /**
   * MFA Init Skipped
   *
   * Update the last time the user has skipped MFA initialization. The server timestamp is used.
   *
   * @generated from rpc zitadel.user.v2.UserService.HumanMFAInitSkipped
   */
  humanMFAInitSkipped: {
    methodKind: "unary";
    input: typeof HumanMFAInitSkippedRequestSchema;
    output: typeof HumanMFAInitSkippedResponseSchema;
  },
}>;

