// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user/v2beta/query.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../google/api/annotations_pb.js";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb.js";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb.js";
import { file_validate_validate } from "../../../validate/validate_pb.js";
import { file_zitadel_user_v2beta_user } from "./user_pb.js";
import { file_zitadel_object_v2beta_object } from "../../object/v2beta/object_pb.js";

/**
 * Describes the file zitadel/user/v2beta/query.proto.
 */
export const file_zitadel_user_v2beta_query = /*@__PURE__*/
  fileDesc("Ch96aXRhZGVsL3VzZXIvdjJiZXRhL3F1ZXJ5LnByb3RvEhN6aXRhZGVsLnVzZXIudjJiZXRhIusHCgtTZWFyY2hRdWVyeRI9Cg91c2VyX25hbWVfcXVlcnkYASABKAsyIi56aXRhZGVsLnVzZXIudjJiZXRhLlVzZXJOYW1lUXVlcnlIABI/ChBmaXJzdF9uYW1lX3F1ZXJ5GAIgASgLMiMueml0YWRlbC51c2VyLnYyYmV0YS5GaXJzdE5hbWVRdWVyeUgAEj0KD2xhc3RfbmFtZV9xdWVyeRgDIAEoCzIiLnppdGFkZWwudXNlci52MmJldGEuTGFzdE5hbWVRdWVyeUgAEj0KD25pY2tfbmFtZV9xdWVyeRgEIAEoCzIiLnppdGFkZWwudXNlci52MmJldGEuTmlja05hbWVRdWVyeUgAEkMKEmRpc3BsYXlfbmFtZV9xdWVyeRgFIAEoCzIlLnppdGFkZWwudXNlci52MmJldGEuRGlzcGxheU5hbWVRdWVyeUgAEjYKC2VtYWlsX3F1ZXJ5GAYgASgLMh8ueml0YWRlbC51c2VyLnYyYmV0YS5FbWFpbFF1ZXJ5SAASNgoLc3RhdGVfcXVlcnkYByABKAsyHy56aXRhZGVsLnVzZXIudjJiZXRhLlN0YXRlUXVlcnlIABI0Cgp0eXBlX3F1ZXJ5GAggASgLMh4ueml0YWRlbC51c2VyLnYyYmV0YS5UeXBlUXVlcnlIABI/ChBsb2dpbl9uYW1lX3F1ZXJ5GAkgASgLMiMueml0YWRlbC51c2VyLnYyYmV0YS5Mb2dpbk5hbWVRdWVyeUgAEj8KEWluX3VzZXJfaWRzX3F1ZXJ5GAogASgLMiIueml0YWRlbC51c2VyLnYyYmV0YS5JblVzZXJJRFF1ZXJ5SAASMAoIb3JfcXVlcnkYCyABKAsyHC56aXRhZGVsLnVzZXIudjJiZXRhLk9yUXVlcnlIABIyCglhbmRfcXVlcnkYDCABKAsyHS56aXRhZGVsLnVzZXIudjJiZXRhLkFuZFF1ZXJ5SAASMgoJbm90X3F1ZXJ5GA0gASgLMh0ueml0YWRlbC51c2VyLnYyYmV0YS5Ob3RRdWVyeUgAEkYKFGluX3VzZXJfZW1haWxzX3F1ZXJ5GA4gASgLMiYueml0YWRlbC51c2VyLnYyYmV0YS5JblVzZXJFbWFpbHNRdWVyeUgAEkkKFW9yZ2FuaXphdGlvbl9pZF9xdWVyeRgPIAEoCzIoLnppdGFkZWwudXNlci52MmJldGEuT3JnYW5pemF0aW9uSWRRdWVyeUgAEjYKC3Bob25lX3F1ZXJ5GBAgASgLMh8ueml0YWRlbC51c2VyLnYyYmV0YS5QaG9uZVF1ZXJ5SABCDAoFcXVlcnkSA/hCASJaCgdPclF1ZXJ5Ek8KB3F1ZXJpZXMYASADKAsyIC56aXRhZGVsLnVzZXIudjJiZXRhLlNlYXJjaFF1ZXJ5QhySQRkyF3RoZSBzdWIgcXVlcmllcyB0byAnT1InIlwKCEFuZFF1ZXJ5ElAKB3F1ZXJpZXMYASADKAsyIC56aXRhZGVsLnVzZXIudjJiZXRhLlNlYXJjaFF1ZXJ5Qh2SQRoyGHRoZSBzdWIgcXVlcmllcyB0byAnQU5EJyJfCghOb3RRdWVyeRJTCgVxdWVyeRgBIAEoCzIgLnppdGFkZWwudXNlci52MmJldGEuU2VhcmNoUXVlcnlCIpJBHzIddGhlIHN1YiBxdWVyeSB0byBuZWdhdGUgKE5PVCkicgoNSW5Vc2VySURRdWVyeRJhCgh1c2VyX2lkcxgBIAMoCUJPkkFMMh90aGUgaWRzIG9mIHRoZSB1c2VycyB0byBpbmNsdWRlSilbIjY5NjI5MDIzOTA2NDg4MzM0IiwiNjk2MjIzNjYwMTIzNTU2NjIiXSK8AQoNVXNlck5hbWVRdWVyeRI6Cgl1c2VyX25hbWUYASABKAlCJ5JBFkoOImdpZ2ktZ2lyYWZmZSJ4yAGAAQHiQQEC+kIHcgUQARjIARJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIrYBCg5GaXJzdE5hbWVRdWVyeRIzCgpmaXJzdF9uYW1lGAEgASgJQh+SQQ5KBiJHaWdpInjIAYABAeJBAQL6QgdyBRABGMgBEm8KBm1ldGhvZBgCIAEoDjImLnppdGFkZWwub2JqZWN0LnYyYmV0YS5UZXh0UXVlcnlNZXRob2RCN5JBLDIqZGVmaW5lcyB3aGljaCB0ZXh0IGVxdWFsaXR5IG1ldGhvZCBpcyB1c2Vk+kIFggECEAEitwEKDUxhc3ROYW1lUXVlcnkSNQoJbGFzdF9uYW1lGAEgASgJQiKSQRFKCSJHaXJhZmZlInjIAYABAeJBAQL6QgdyBRABGMgBEm8KBm1ldGhvZBgCIAEoDjImLnppdGFkZWwub2JqZWN0LnYyYmV0YS5UZXh0UXVlcnlNZXRob2RCN5JBLDIqZGVmaW5lcyB3aGljaCB0ZXh0IGVxdWFsaXR5IG1ldGhvZCBpcyB1c2Vk+kIFggECEAEitAEKDU5pY2tOYW1lUXVlcnkSMgoJbmlja19uYW1lGAEgASgJQh+SQQ5KBiJHaWdpInjIAYABAeJBAQL6QgdyBRABGMgBEm8KBm1ldGhvZBgCIAEoDjImLnppdGFkZWwub2JqZWN0LnYyYmV0YS5UZXh0UXVlcnlNZXRob2RCN5JBLDIqZGVmaW5lcyB3aGljaCB0ZXh0IGVxdWFsaXR5IG1ldGhvZCBpcyB1c2Vk+kIFggECEAEiwgEKEERpc3BsYXlOYW1lUXVlcnkSPQoMZGlzcGxheV9uYW1lGAEgASgJQieSQRZKDiJHaWdpIEdpcmFmZmUieMgBgAEB4kEBAvpCB3IFEAEYyAESbwoGbWV0aG9kGAIgASgOMiYueml0YWRlbC5vYmplY3QudjJiZXRhLlRleHRRdWVyeU1ldGhvZEI3kkEsMipkZWZpbmVzIHdoaWNoIHRleHQgZXF1YWxpdHkgbWV0aG9kIGlzIHVzZWT6QgWCAQIQASLXAQoKRW1haWxRdWVyeRJYCg1lbWFpbF9hZGRyZXNzGAEgASgJQkGSQTIyGWVtYWlsIGFkZHJlc3Mgb2YgdGhlIHVzZXJKEiJnaWdpQHppdGFkZWwuY29tInjIAeJBAQL6QgVyAxjIARJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIswBCgpQaG9uZVF1ZXJ5Ek0KBm51bWJlchgBIAEoCUI9kkEvMhhQaG9uZSBudW1iZXIgb2YgdGhlIHVzZXJKDiIrNDE3OTEyMzQ1NjcieBSAAQHiQQEC+kIEcgIYFBJvCgZtZXRob2QYAiABKA4yJi56aXRhZGVsLm9iamVjdC52MmJldGEuVGV4dFF1ZXJ5TWV0aG9kQjeSQSwyKmRlZmluZXMgd2hpY2ggdGV4dCBlcXVhbGl0eSBtZXRob2QgaXMgdXNlZPpCBYIBAhABIsQBCg5Mb2dpbk5hbWVRdWVyeRJBCgpsb2dpbl9uYW1lGAEgASgJQi2SQRxKFCJnaWdpQHppdGFkZWwuY2xvdWQieMgBgAEB4kEBAvpCB3IFEAEYyAESbwoGbWV0aG9kGAIgASgOMiYueml0YWRlbC5vYmplY3QudjJiZXRhLlRleHRRdWVyeU1ldGhvZEI3kkEsMipkZWZpbmVzIHdoaWNoIHRleHQgZXF1YWxpdHkgbWV0aG9kIGlzIHVzZWT6QgWCAQIQASJnCgpTdGF0ZVF1ZXJ5ElkKBXN0YXRlGAEgASgOMh4ueml0YWRlbC51c2VyLnYyYmV0YS5Vc2VyU3RhdGVCKpJBGzIZY3VycmVudCBzdGF0ZSBvZiB0aGUgdXNlcuJBAQL6QgWCAQIQASJbCglUeXBlUXVlcnkSTgoEdHlwZRgBIAEoDjIZLnppdGFkZWwudXNlci52MmJldGEuVHlwZUIlkkEWMhR0aGUgdHlwZSBvZiB0aGUgdXNlcuJBAQL6QgWCAQIQASJ6ChFJblVzZXJFbWFpbHNRdWVyeRJlCgt1c2VyX2VtYWlscxgBIAMoCUJQkkFNMiJ0aGUgZW1haWxzIG9mIHRoZSB1c2VycyB0byBpbmNsdWRlSidbInRlc3RAZXhhbXBsZS5jb20iLCJ0ZXN0QGV4YW1wbGUub3JnIl0iXAoTT3JnYW5pemF0aW9uSWRRdWVyeRJFCg9vcmdhbml6YXRpb25faWQYASABKAlCLJJBG0oTIjY5NjI5MDIzOTA2NDg4MzM0InjIAYABAeJBAQL6QgdyBRABGMgBKj4KBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklFRBAAEg4KClRZUEVfSFVNQU4QARIQCgxUWVBFX01BQ0hJTkUQAirCAgoNVXNlckZpZWxkTmFtZRIfChtVU0VSX0ZJRUxEX05BTUVfVU5TUEVDSUZJRUQQABIdChlVU0VSX0ZJRUxEX05BTUVfVVNFUl9OQU1FEAESHgoaVVNFUl9GSUVMRF9OQU1FX0ZJUlNUX05BTUUQAhIdChlVU0VSX0ZJRUxEX05BTUVfTEFTVF9OQU1FEAMSHQoZVVNFUl9GSUVMRF9OQU1FX05JQ0tfTkFNRRAEEiAKHFVTRVJfRklFTERfTkFNRV9ESVNQTEFZX05BTUUQBRIZChVVU0VSX0ZJRUxEX05BTUVfRU1BSUwQBhIZChVVU0VSX0ZJRUxEX05BTUVfU1RBVEUQBxIYChRVU0VSX0ZJRUxEX05BTUVfVFlQRRAIEiEKHVVTRVJfRklFTERfTkFNRV9DUkVBVElPTl9EQVRFEAlCyQEKF2NvbS56aXRhZGVsLnVzZXIudjJiZXRhQgpRdWVyeVByb3RvUAFaNGdpdGh1Yi5jb20veml0YWRlbC96aXRhZGVsL3BrZy9ncnBjL3VzZXIvdjJiZXRhO3VzZXKiAgNaVViqAhNaaXRhZGVsLlVzZXIuVjJiZXRhygITWml0YWRlbFxVc2VyXFYyYmV0YeICH1ppdGFkZWxcVXNlclxWMmJldGFcR1BCTWV0YWRhdGHqAhVaaXRhZGVsOjpVc2VyOjpWMmJldGFiBnByb3RvMw", [file_google_api_annotations, file_google_api_field_behavior, file_protoc_gen_openapiv2_options_annotations, file_validate_validate, file_zitadel_user_v2beta_user, file_zitadel_object_v2beta_object]);

/**
 * Describes the message zitadel.user.v2beta.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export const SearchQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 0);

/**
 * Describes the message zitadel.user.v2beta.OrQuery.
 * Use `create(OrQuerySchema)` to create a new message.
 */
export const OrQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 1);

/**
 * Describes the message zitadel.user.v2beta.AndQuery.
 * Use `create(AndQuerySchema)` to create a new message.
 */
export const AndQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 2);

/**
 * Describes the message zitadel.user.v2beta.NotQuery.
 * Use `create(NotQuerySchema)` to create a new message.
 */
export const NotQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 3);

/**
 * Describes the message zitadel.user.v2beta.InUserIDQuery.
 * Use `create(InUserIDQuerySchema)` to create a new message.
 */
export const InUserIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 4);

/**
 * Describes the message zitadel.user.v2beta.UserNameQuery.
 * Use `create(UserNameQuerySchema)` to create a new message.
 */
export const UserNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 5);

/**
 * Describes the message zitadel.user.v2beta.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export const FirstNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 6);

/**
 * Describes the message zitadel.user.v2beta.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export const LastNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 7);

/**
 * Describes the message zitadel.user.v2beta.NickNameQuery.
 * Use `create(NickNameQuerySchema)` to create a new message.
 */
export const NickNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 8);

/**
 * Describes the message zitadel.user.v2beta.DisplayNameQuery.
 * Use `create(DisplayNameQuerySchema)` to create a new message.
 */
export const DisplayNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 9);

/**
 * Describes the message zitadel.user.v2beta.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export const EmailQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 10);

/**
 * Describes the message zitadel.user.v2beta.PhoneQuery.
 * Use `create(PhoneQuerySchema)` to create a new message.
 */
export const PhoneQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 11);

/**
 * Describes the message zitadel.user.v2beta.LoginNameQuery.
 * Use `create(LoginNameQuerySchema)` to create a new message.
 */
export const LoginNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 12);

/**
 * Describes the message zitadel.user.v2beta.StateQuery.
 * Use `create(StateQuerySchema)` to create a new message.
 */
export const StateQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 13);

/**
 * Describes the message zitadel.user.v2beta.TypeQuery.
 * Use `create(TypeQuerySchema)` to create a new message.
 */
export const TypeQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 14);

/**
 * Describes the message zitadel.user.v2beta.InUserEmailsQuery.
 * Use `create(InUserEmailsQuerySchema)` to create a new message.
 */
export const InUserEmailsQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 15);

/**
 * Describes the message zitadel.user.v2beta.OrganizationIdQuery.
 * Use `create(OrganizationIdQuerySchema)` to create a new message.
 */
export const OrganizationIdQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user_v2beta_query, 16);

/**
 * Describes the enum zitadel.user.v2beta.Type.
 */
export const TypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user_v2beta_query, 0);

/**
 * @generated from enum zitadel.user.v2beta.Type
 */
export const Type = /*@__PURE__*/
  tsEnum(TypeSchema);

/**
 * Describes the enum zitadel.user.v2beta.UserFieldName.
 */
export const UserFieldNameSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user_v2beta_query, 1);

/**
 * @generated from enum zitadel.user.v2beta.UserFieldName
 */
export const UserFieldName = /*@__PURE__*/
  tsEnum(UserFieldNameSchema);

