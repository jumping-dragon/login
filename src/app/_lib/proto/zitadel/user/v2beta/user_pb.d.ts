// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user/v2beta/user.proto (package zitadel.user.v2beta, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { HumanEmail, HumanEmailJson } from "./email_pb.js";
import type { HumanPhone, HumanPhoneJson } from "./phone_pb.js";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";
import type { Details, DetailsJson } from "../../object/v2beta/object_pb.js";

/**
 * Describes the file zitadel/user/v2beta/user.proto.
 */
export declare const file_zitadel_user_v2beta_user: GenFile;

/**
 * @generated from message zitadel.user.v2beta.SetHumanProfile
 */
export declare type SetHumanProfile = Message<"zitadel.user.v2beta.SetHumanProfile"> & {
  /**
   * @generated from field: string given_name = 1;
   */
  givenName: string;

  /**
   * @generated from field: string family_name = 2;
   */
  familyName: string;

  /**
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * @generated from field: optional zitadel.user.v2beta.Gender gender = 6;
   */
  gender?: Gender;
};

/**
 * @generated from message zitadel.user.v2beta.SetHumanProfile
 */
export declare type SetHumanProfileJson = {
  /**
   * @generated from field: string given_name = 1;
   */
  givenName?: string;

  /**
   * @generated from field: string family_name = 2;
   */
  familyName?: string;

  /**
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * @generated from field: optional zitadel.user.v2beta.Gender gender = 6;
   */
  gender?: GenderJson;
};

/**
 * Describes the message zitadel.user.v2beta.SetHumanProfile.
 * Use `create(SetHumanProfileSchema)` to create a new message.
 */
export declare const SetHumanProfileSchema: GenMessage<SetHumanProfile, {jsonType: SetHumanProfileJson}>;

/**
 * @generated from message zitadel.user.v2beta.HumanProfile
 */
export declare type HumanProfile = Message<"zitadel.user.v2beta.HumanProfile"> & {
  /**
   * @generated from field: string given_name = 1;
   */
  givenName: string;

  /**
   * @generated from field: string family_name = 2;
   */
  familyName: string;

  /**
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * @generated from field: optional zitadel.user.v2beta.Gender gender = 6;
   */
  gender?: Gender;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl: string;
};

/**
 * @generated from message zitadel.user.v2beta.HumanProfile
 */
export declare type HumanProfileJson = {
  /**
   * @generated from field: string given_name = 1;
   */
  givenName?: string;

  /**
   * @generated from field: string family_name = 2;
   */
  familyName?: string;

  /**
   * @generated from field: optional string nick_name = 3;
   */
  nickName?: string;

  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * @generated from field: optional zitadel.user.v2beta.Gender gender = 6;
   */
  gender?: GenderJson;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl?: string;
};

/**
 * Describes the message zitadel.user.v2beta.HumanProfile.
 * Use `create(HumanProfileSchema)` to create a new message.
 */
export declare const HumanProfileSchema: GenMessage<HumanProfile, {jsonType: HumanProfileJson}>;

/**
 * @generated from message zitadel.user.v2beta.SetMetadataEntry
 */
export declare type SetMetadataEntry = Message<"zitadel.user.v2beta.SetMetadataEntry"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * @generated from message zitadel.user.v2beta.SetMetadataEntry
 */
export declare type SetMetadataEntryJson = {
  /**
   * @generated from field: string key = 1;
   */
  key?: string;

  /**
   * @generated from field: bytes value = 2;
   */
  value?: string;
};

/**
 * Describes the message zitadel.user.v2beta.SetMetadataEntry.
 * Use `create(SetMetadataEntrySchema)` to create a new message.
 */
export declare const SetMetadataEntrySchema: GenMessage<SetMetadataEntry, {jsonType: SetMetadataEntryJson}>;

/**
 * @generated from message zitadel.user.v2beta.HumanUser
 */
export declare type HumanUser = Message<"zitadel.user.v2beta.HumanUser"> & {
  /**
   * Unique identifier of the user.
   *
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * State of the user, for example active, inactive, locked, deleted, initial.
   *
   * @generated from field: zitadel.user.v2beta.UserState state = 2;
   */
  state: UserState;

  /**
   * Username of the user, which can be globally unique or unique on organization level.
   *
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * Possible usable login names for the user.
   *
   * @generated from field: repeated string login_names = 4;
   */
  loginNames: string[];

  /**
   * Preferred login name of the user.
   *
   * @generated from field: string preferred_login_name = 5;
   */
  preferredLoginName: string;

  /**
   * Profile information of the user.
   *
   * @generated from field: zitadel.user.v2beta.HumanProfile profile = 6;
   */
  profile?: HumanProfile;

  /**
   * Email of the user, if defined.
   *
   * @generated from field: zitadel.user.v2beta.HumanEmail email = 7;
   */
  email?: HumanEmail;

  /**
   * Phone of the user, if defined.
   *
   * @generated from field: zitadel.user.v2beta.HumanPhone phone = 8;
   */
  phone?: HumanPhone;

  /**
   * User is required to change the used password on the next login.
   *
   * @generated from field: bool password_change_required = 9;
   */
  passwordChangeRequired: boolean;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 10;
   */
  passwordChanged?: Timestamp;
};

/**
 * @generated from message zitadel.user.v2beta.HumanUser
 */
export declare type HumanUserJson = {
  /**
   * Unique identifier of the user.
   *
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * State of the user, for example active, inactive, locked, deleted, initial.
   *
   * @generated from field: zitadel.user.v2beta.UserState state = 2;
   */
  state?: UserStateJson;

  /**
   * Username of the user, which can be globally unique or unique on organization level.
   *
   * @generated from field: string username = 3;
   */
  username?: string;

  /**
   * Possible usable login names for the user.
   *
   * @generated from field: repeated string login_names = 4;
   */
  loginNames?: string[];

  /**
   * Preferred login name of the user.
   *
   * @generated from field: string preferred_login_name = 5;
   */
  preferredLoginName?: string;

  /**
   * Profile information of the user.
   *
   * @generated from field: zitadel.user.v2beta.HumanProfile profile = 6;
   */
  profile?: HumanProfileJson;

  /**
   * Email of the user, if defined.
   *
   * @generated from field: zitadel.user.v2beta.HumanEmail email = 7;
   */
  email?: HumanEmailJson;

  /**
   * Phone of the user, if defined.
   *
   * @generated from field: zitadel.user.v2beta.HumanPhone phone = 8;
   */
  phone?: HumanPhoneJson;

  /**
   * User is required to change the used password on the next login.
   *
   * @generated from field: bool password_change_required = 9;
   */
  passwordChangeRequired?: boolean;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 10;
   */
  passwordChanged?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v2beta.HumanUser.
 * Use `create(HumanUserSchema)` to create a new message.
 */
export declare const HumanUserSchema: GenMessage<HumanUser, {jsonType: HumanUserJson}>;

/**
 * @generated from message zitadel.user.v2beta.User
 */
export declare type User = Message<"zitadel.user.v2beta.User"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.object.v2beta.Details details = 8;
   */
  details?: Details;

  /**
   * @generated from field: zitadel.user.v2beta.UserState state = 2;
   */
  state: UserState;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: repeated string login_names = 4;
   */
  loginNames: string[];

  /**
   * @generated from field: string preferred_login_name = 5;
   */
  preferredLoginName: string;

  /**
   * @generated from oneof zitadel.user.v2beta.User.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v2beta.HumanUser human = 6;
     */
    value: HumanUser;
    case: "human";
  } | {
    /**
     * @generated from field: zitadel.user.v2beta.MachineUser machine = 7;
     */
    value: MachineUser;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v2beta.User
 */
export declare type UserJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.object.v2beta.Details details = 8;
   */
  details?: DetailsJson;

  /**
   * @generated from field: zitadel.user.v2beta.UserState state = 2;
   */
  state?: UserStateJson;

  /**
   * @generated from field: string username = 3;
   */
  username?: string;

  /**
   * @generated from field: repeated string login_names = 4;
   */
  loginNames?: string[];

  /**
   * @generated from field: string preferred_login_name = 5;
   */
  preferredLoginName?: string;

  /**
   * @generated from field: zitadel.user.v2beta.HumanUser human = 6;
   */
  human?: HumanUserJson;

  /**
   * @generated from field: zitadel.user.v2beta.MachineUser machine = 7;
   */
  machine?: MachineUserJson;
};

/**
 * Describes the message zitadel.user.v2beta.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User, {jsonType: UserJson}>;

/**
 * @generated from message zitadel.user.v2beta.MachineUser
 */
export declare type MachineUser = Message<"zitadel.user.v2beta.MachineUser"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret: boolean;

  /**
   * @generated from field: zitadel.user.v2beta.AccessTokenType access_token_type = 4;
   */
  accessTokenType: AccessTokenType;
};

/**
 * @generated from message zitadel.user.v2beta.MachineUser
 */
export declare type MachineUserJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string description = 2;
   */
  description?: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret?: boolean;

  /**
   * @generated from field: zitadel.user.v2beta.AccessTokenType access_token_type = 4;
   */
  accessTokenType?: AccessTokenTypeJson;
};

/**
 * Describes the message zitadel.user.v2beta.MachineUser.
 * Use `create(MachineUserSchema)` to create a new message.
 */
export declare const MachineUserSchema: GenMessage<MachineUser, {jsonType: MachineUserJson}>;

/**
 * @generated from enum zitadel.user.v2beta.Gender
 */
export enum Gender {
  /**
   * @generated from enum value: GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GENDER_FEMALE = 1;
   */
  FEMALE = 1,

  /**
   * @generated from enum value: GENDER_MALE = 2;
   */
  MALE = 2,

  /**
   * @generated from enum value: GENDER_DIVERSE = 3;
   */
  DIVERSE = 3,
}

/**
 * @generated from enum zitadel.user.v2beta.Gender
 */
export declare type GenderJson = "GENDER_UNSPECIFIED" | "GENDER_FEMALE" | "GENDER_MALE" | "GENDER_DIVERSE";

/**
 * Describes the enum zitadel.user.v2beta.Gender.
 */
export declare const GenderSchema: GenEnum<Gender, GenderJson>;

/**
 * @generated from enum zitadel.user.v2beta.AccessTokenType
 */
export enum AccessTokenType {
  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_BEARER = 0;
   */
  BEARER = 0,

  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_JWT = 1;
   */
  JWT = 1,
}

/**
 * @generated from enum zitadel.user.v2beta.AccessTokenType
 */
export declare type AccessTokenTypeJson = "ACCESS_TOKEN_TYPE_BEARER" | "ACCESS_TOKEN_TYPE_JWT";

/**
 * Describes the enum zitadel.user.v2beta.AccessTokenType.
 */
export declare const AccessTokenTypeSchema: GenEnum<AccessTokenType, AccessTokenTypeJson>;

/**
 * @generated from enum zitadel.user.v2beta.UserState
 */
export enum UserState {
  /**
   * @generated from enum value: USER_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATE_DELETED = 3;
   */
  DELETED = 3,

  /**
   * @generated from enum value: USER_STATE_LOCKED = 4;
   */
  LOCKED = 4,

  /**
   * @generated from enum value: USER_STATE_INITIAL = 5;
   */
  INITIAL = 5,
}

/**
 * @generated from enum zitadel.user.v2beta.UserState
 */
export declare type UserStateJson = "USER_STATE_UNSPECIFIED" | "USER_STATE_ACTIVE" | "USER_STATE_INACTIVE" | "USER_STATE_DELETED" | "USER_STATE_LOCKED" | "USER_STATE_INITIAL";

/**
 * Describes the enum zitadel.user.v2beta.UserState.
 */
export declare const UserStateSchema: GenEnum<UserState, UserStateJson>;

