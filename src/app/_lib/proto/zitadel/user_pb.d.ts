// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user.proto (package zitadel.user.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";
import type { ObjectDetails, ObjectDetailsJson, TextQueryMethod, TextQueryMethodJson } from "./object_pb.js";
import type { Timestamp, TimestampJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file zitadel/user.proto.
 */
export declare const file_zitadel_user: GenFile;

/**
 * @generated from message zitadel.user.v1.User
 */
export declare type User = Message<"zitadel.user.v1.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.user.v1.UserState state = 3;
   */
  state: UserState;

  /**
   * @generated from field: string user_name = 4;
   */
  userName: string;

  /**
   * @generated from field: repeated string login_names = 5;
   */
  loginNames: string[];

  /**
   * @generated from field: string preferred_login_name = 6;
   */
  preferredLoginName: string;

  /**
   * @generated from oneof zitadel.user.v1.User.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.Human human = 7;
     */
    value: Human;
    case: "human";
  } | {
    /**
     * @generated from field: zitadel.user.v1.Machine machine = 8;
     */
    value: Machine;
    case: "machine";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.User
 */
export declare type UserJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: zitadel.user.v1.UserState state = 3;
   */
  state?: UserStateJson;

  /**
   * @generated from field: string user_name = 4;
   */
  userName?: string;

  /**
   * @generated from field: repeated string login_names = 5;
   */
  loginNames?: string[];

  /**
   * @generated from field: string preferred_login_name = 6;
   */
  preferredLoginName?: string;

  /**
   * @generated from field: zitadel.user.v1.Human human = 7;
   */
  human?: HumanJson;

  /**
   * @generated from field: zitadel.user.v1.Machine machine = 8;
   */
  machine?: MachineJson;
};

/**
 * Describes the message zitadel.user.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export declare const UserSchema: GenMessage<User, {jsonType: UserJson}>;

/**
 * @generated from message zitadel.user.v1.Human
 */
export declare type Human = Message<"zitadel.user.v1.Human"> & {
  /**
   * @generated from field: zitadel.user.v1.Profile profile = 1;
   */
  profile?: Profile;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: Email;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 3;
   */
  phone?: Phone;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 4;
   */
  passwordChanged?: Timestamp;
};

/**
 * @generated from message zitadel.user.v1.Human
 */
export declare type HumanJson = {
  /**
   * @generated from field: zitadel.user.v1.Profile profile = 1;
   */
  profile?: ProfileJson;

  /**
   * @generated from field: zitadel.user.v1.Email email = 2;
   */
  email?: EmailJson;

  /**
   * @generated from field: zitadel.user.v1.Phone phone = 3;
   */
  phone?: PhoneJson;

  /**
   * The time the user last changed their password.
   *
   * @generated from field: google.protobuf.Timestamp password_changed = 4;
   */
  passwordChanged?: TimestampJson;
};

/**
 * Describes the message zitadel.user.v1.Human.
 * Use `create(HumanSchema)` to create a new message.
 */
export declare const HumanSchema: GenMessage<Human, {jsonType: HumanJson}>;

/**
 * @generated from message zitadel.user.v1.Machine
 */
export declare type Machine = Message<"zitadel.user.v1.Machine"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret: boolean;

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType: AccessTokenType;
};

/**
 * @generated from message zitadel.user.v1.Machine
 */
export declare type MachineJson = {
  /**
   * @generated from field: string name = 1;
   */
  name?: string;

  /**
   * @generated from field: string description = 2;
   */
  description?: string;

  /**
   * @generated from field: bool has_secret = 3;
   */
  hasSecret?: boolean;

  /**
   * @generated from field: zitadel.user.v1.AccessTokenType access_token_type = 4;
   */
  accessTokenType?: AccessTokenTypeJson;
};

/**
 * Describes the message zitadel.user.v1.Machine.
 * Use `create(MachineSchema)` to create a new message.
 */
export declare const MachineSchema: GenMessage<Machine, {jsonType: MachineJson}>;

/**
 * @generated from message zitadel.user.v1.Profile
 */
export declare type Profile = Message<"zitadel.user.v1.Profile"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage: string;

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender: Gender;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl: string;
};

/**
 * @generated from message zitadel.user.v1.Profile
 */
export declare type ProfileJson = {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: string last_name = 2;
   */
  lastName?: string;

  /**
   * @generated from field: string nick_name = 3;
   */
  nickName?: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: string preferred_language = 5;
   */
  preferredLanguage?: string;

  /**
   * @generated from field: zitadel.user.v1.Gender gender = 6;
   */
  gender?: GenderJson;

  /**
   * @generated from field: string avatar_url = 7;
   */
  avatarUrl?: string;
};

/**
 * Describes the message zitadel.user.v1.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export declare const ProfileSchema: GenMessage<Profile, {jsonType: ProfileJson}>;

/**
 * @generated from message zitadel.user.v1.Email
 */
export declare type Email = Message<"zitadel.user.v1.Email"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified: boolean;
};

/**
 * @generated from message zitadel.user.v1.Email
 */
export declare type EmailJson = {
  /**
   * @generated from field: string email = 1;
   */
  email?: string;

  /**
   * @generated from field: bool is_email_verified = 2;
   */
  isEmailVerified?: boolean;
};

/**
 * Describes the message zitadel.user.v1.Email.
 * Use `create(EmailSchema)` to create a new message.
 */
export declare const EmailSchema: GenMessage<Email, {jsonType: EmailJson}>;

/**
 * @generated from message zitadel.user.v1.Phone
 */
export declare type Phone = Message<"zitadel.user.v1.Phone"> & {
  /**
   * @generated from field: string phone = 1;
   */
  phone: string;

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified: boolean;
};

/**
 * @generated from message zitadel.user.v1.Phone
 */
export declare type PhoneJson = {
  /**
   * @generated from field: string phone = 1;
   */
  phone?: string;

  /**
   * @generated from field: bool is_phone_verified = 2;
   */
  isPhoneVerified?: boolean;
};

/**
 * Describes the message zitadel.user.v1.Phone.
 * Use `create(PhoneSchema)` to create a new message.
 */
export declare const PhoneSchema: GenMessage<Phone, {jsonType: PhoneJson}>;

/**
 * @generated from message zitadel.user.v1.SearchQuery
 */
export declare type SearchQuery = Message<"zitadel.user.v1.SearchQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.SearchQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserNameQuery user_name_query = 1;
     */
    value: UserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.FirstNameQuery first_name_query = 2;
     */
    value: FirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LastNameQuery last_name_query = 3;
     */
    value: LastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NickNameQuery nick_name_query = 4;
     */
    value: NickNameQuery;
    case: "nickNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.DisplayNameQuery display_name_query = 5;
     */
    value: DisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.EmailQuery email_query = 6;
     */
    value: EmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.StateQuery state_query = 7;
     */
    value: StateQuery;
    case: "stateQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.TypeQuery type_query = 8;
     */
    value: TypeQuery;
    case: "typeQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.LoginNameQuery login_name_query = 9;
     */
    value: LoginNameQuery;
    case: "loginNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserIDQuery in_user_ids_query = 10;
     */
    value: InUserIDQuery;
    case: "inUserIdsQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.OrQuery or_query = 11;
     */
    value: OrQuery;
    case: "orQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AndQuery and_query = 12;
     */
    value: AndQuery;
    case: "andQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.NotQuery not_query = 13;
     */
    value: NotQuery;
    case: "notQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.InUserEmailsQuery in_user_emails_query = 14;
     */
    value: InUserEmailsQuery;
    case: "inUserEmailsQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.SearchQuery
 */
export declare type SearchQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.UserNameQuery user_name_query = 1;
   */
  userNameQuery?: UserNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.FirstNameQuery first_name_query = 2;
   */
  firstNameQuery?: FirstNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.LastNameQuery last_name_query = 3;
   */
  lastNameQuery?: LastNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.NickNameQuery nick_name_query = 4;
   */
  nickNameQuery?: NickNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.DisplayNameQuery display_name_query = 5;
   */
  displayNameQuery?: DisplayNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.EmailQuery email_query = 6;
   */
  emailQuery?: EmailQueryJson;

  /**
   * @generated from field: zitadel.user.v1.StateQuery state_query = 7;
   */
  stateQuery?: StateQueryJson;

  /**
   * @generated from field: zitadel.user.v1.TypeQuery type_query = 8;
   */
  typeQuery?: TypeQueryJson;

  /**
   * @generated from field: zitadel.user.v1.LoginNameQuery login_name_query = 9;
   */
  loginNameQuery?: LoginNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.InUserIDQuery in_user_ids_query = 10;
   */
  inUserIdsQuery?: InUserIDQueryJson;

  /**
   * @generated from field: zitadel.user.v1.OrQuery or_query = 11;
   */
  orQuery?: OrQueryJson;

  /**
   * @generated from field: zitadel.user.v1.AndQuery and_query = 12;
   */
  andQuery?: AndQueryJson;

  /**
   * @generated from field: zitadel.user.v1.NotQuery not_query = 13;
   */
  notQuery?: NotQueryJson;

  /**
   * @generated from field: zitadel.user.v1.InUserEmailsQuery in_user_emails_query = 14;
   */
  inUserEmailsQuery?: InUserEmailsQueryJson;
};

/**
 * Describes the message zitadel.user.v1.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export declare const SearchQuerySchema: GenMessage<SearchQuery, {jsonType: SearchQueryJson}>;

/**
 * @generated from message zitadel.user.v1.OrQuery
 */
export declare type OrQuery = Message<"zitadel.user.v1.OrQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * @generated from message zitadel.user.v1.OrQuery
 */
export declare type OrQueryJson = {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries?: SearchQueryJson[];
};

/**
 * Describes the message zitadel.user.v1.OrQuery.
 * Use `create(OrQuerySchema)` to create a new message.
 */
export declare const OrQuerySchema: GenMessage<OrQuery, {jsonType: OrQueryJson}>;

/**
 * @generated from message zitadel.user.v1.AndQuery
 */
export declare type AndQuery = Message<"zitadel.user.v1.AndQuery"> & {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries: SearchQuery[];
};

/**
 * @generated from message zitadel.user.v1.AndQuery
 */
export declare type AndQueryJson = {
  /**
   * @generated from field: repeated zitadel.user.v1.SearchQuery queries = 1;
   */
  queries?: SearchQueryJson[];
};

/**
 * Describes the message zitadel.user.v1.AndQuery.
 * Use `create(AndQuerySchema)` to create a new message.
 */
export declare const AndQuerySchema: GenMessage<AndQuery, {jsonType: AndQueryJson}>;

/**
 * @generated from message zitadel.user.v1.NotQuery
 */
export declare type NotQuery = Message<"zitadel.user.v1.NotQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.SearchQuery query = 1;
   */
  query?: SearchQuery;
};

/**
 * @generated from message zitadel.user.v1.NotQuery
 */
export declare type NotQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.SearchQuery query = 1;
   */
  query?: SearchQueryJson;
};

/**
 * Describes the message zitadel.user.v1.NotQuery.
 * Use `create(NotQuerySchema)` to create a new message.
 */
export declare const NotQuerySchema: GenMessage<NotQuery, {jsonType: NotQueryJson}>;

/**
 * @generated from message zitadel.user.v1.InUserIDQuery
 */
export declare type InUserIDQuery = Message<"zitadel.user.v1.InUserIDQuery"> & {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds: string[];
};

/**
 * @generated from message zitadel.user.v1.InUserIDQuery
 */
export declare type InUserIDQueryJson = {
  /**
   * @generated from field: repeated string user_ids = 1;
   */
  userIds?: string[];
};

/**
 * Describes the message zitadel.user.v1.InUserIDQuery.
 * Use `create(InUserIDQuerySchema)` to create a new message.
 */
export declare const InUserIDQuerySchema: GenMessage<InUserIDQuery, {jsonType: InUserIDQueryJson}>;

/**
 * @generated from message zitadel.user.v1.InUserEmailsQuery
 */
export declare type InUserEmailsQuery = Message<"zitadel.user.v1.InUserEmailsQuery"> & {
  /**
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails: string[];
};

/**
 * @generated from message zitadel.user.v1.InUserEmailsQuery
 */
export declare type InUserEmailsQueryJson = {
  /**
   * @generated from field: repeated string user_emails = 1;
   */
  userEmails?: string[];
};

/**
 * Describes the message zitadel.user.v1.InUserEmailsQuery.
 * Use `create(InUserEmailsQuerySchema)` to create a new message.
 */
export declare const InUserEmailsQuerySchema: GenMessage<InUserEmailsQuery, {jsonType: InUserEmailsQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserNameQuery
 */
export declare type UserNameQuery = Message<"zitadel.user.v1.UserNameQuery"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserNameQuery
 */
export declare type UserNameQueryJson = {
  /**
   * @generated from field: string user_name = 1;
   */
  userName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserNameQuery.
 * Use `create(UserNameQuerySchema)` to create a new message.
 */
export declare const UserNameQuerySchema: GenMessage<UserNameQuery, {jsonType: UserNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.FirstNameQuery
 */
export declare type FirstNameQuery = Message<"zitadel.user.v1.FirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.FirstNameQuery
 */
export declare type FirstNameQueryJson = {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export declare const FirstNameQuerySchema: GenMessage<FirstNameQuery, {jsonType: FirstNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.LastNameQuery
 */
export declare type LastNameQuery = Message<"zitadel.user.v1.LastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.LastNameQuery
 */
export declare type LastNameQueryJson = {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export declare const LastNameQuerySchema: GenMessage<LastNameQuery, {jsonType: LastNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.NickNameQuery
 */
export declare type NickNameQuery = Message<"zitadel.user.v1.NickNameQuery"> & {
  /**
   * @generated from field: string nick_name = 1;
   */
  nickName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.NickNameQuery
 */
export declare type NickNameQueryJson = {
  /**
   * @generated from field: string nick_name = 1;
   */
  nickName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.NickNameQuery.
 * Use `create(NickNameQuerySchema)` to create a new message.
 */
export declare const NickNameQuerySchema: GenMessage<NickNameQuery, {jsonType: NickNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.DisplayNameQuery
 */
export declare type DisplayNameQuery = Message<"zitadel.user.v1.DisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.DisplayNameQuery
 */
export declare type DisplayNameQueryJson = {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.DisplayNameQuery.
 * Use `create(DisplayNameQuerySchema)` to create a new message.
 */
export declare const DisplayNameQuerySchema: GenMessage<DisplayNameQuery, {jsonType: DisplayNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.EmailQuery
 */
export declare type EmailQuery = Message<"zitadel.user.v1.EmailQuery"> & {
  /**
   * @generated from field: string email_address = 1;
   */
  emailAddress: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.EmailQuery
 */
export declare type EmailQueryJson = {
  /**
   * @generated from field: string email_address = 1;
   */
  emailAddress?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export declare const EmailQuerySchema: GenMessage<EmailQuery, {jsonType: EmailQueryJson}>;

/**
 * @generated from message zitadel.user.v1.LoginNameQuery
 */
export declare type LoginNameQuery = Message<"zitadel.user.v1.LoginNameQuery"> & {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.LoginNameQuery
 */
export declare type LoginNameQueryJson = {
  /**
   * @generated from field: string login_name = 1;
   */
  loginName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.LoginNameQuery.
 * Use `create(LoginNameQuerySchema)` to create a new message.
 */
export declare const LoginNameQuerySchema: GenMessage<LoginNameQuery, {jsonType: LoginNameQueryJson}>;

/**
 * UserStateQuery always equals
 *
 * @generated from message zitadel.user.v1.StateQuery
 */
export declare type StateQuery = Message<"zitadel.user.v1.StateQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.UserState state = 1;
   */
  state: UserState;
};

/**
 * UserStateQuery always equals
 *
 * @generated from message zitadel.user.v1.StateQuery
 */
export declare type StateQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.UserState state = 1;
   */
  state?: UserStateJson;
};

/**
 * Describes the message zitadel.user.v1.StateQuery.
 * Use `create(StateQuerySchema)` to create a new message.
 */
export declare const StateQuerySchema: GenMessage<StateQuery, {jsonType: StateQueryJson}>;

/**
 * UserTypeQuery always equals
 *
 * @generated from message zitadel.user.v1.TypeQuery
 */
export declare type TypeQuery = Message<"zitadel.user.v1.TypeQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;
};

/**
 * UserTypeQuery always equals
 *
 * @generated from message zitadel.user.v1.TypeQuery
 */
export declare type TypeQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type?: TypeJson;
};

/**
 * Describes the message zitadel.user.v1.TypeQuery.
 * Use `create(TypeQuerySchema)` to create a new message.
 */
export declare const TypeQuerySchema: GenMessage<TypeQuery, {jsonType: TypeQueryJson}>;

/**
 * @generated from message zitadel.user.v1.AuthFactor
 */
export declare type AuthFactor = Message<"zitadel.user.v1.AuthFactor"> & {
  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 1;
   */
  state: AuthFactorState;

  /**
   * @generated from oneof zitadel.user.v1.AuthFactor.type
   */
  type: {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTP otp = 2;
     */
    value: AuthFactorOTP;
    case: "otp";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorU2F u2f = 3;
     */
    value: AuthFactorU2F;
    case: "u2f";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPSMS otp_sms = 4;
     */
    value: AuthFactorOTPSMS;
    case: "otpSms";
  } | {
    /**
     * @generated from field: zitadel.user.v1.AuthFactorOTPEmail otp_email = 5;
     */
    value: AuthFactorOTPEmail;
    case: "otpEmail";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.AuthFactor
 */
export declare type AuthFactorJson = {
  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 1;
   */
  state?: AuthFactorStateJson;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorOTP otp = 2;
   */
  otp?: AuthFactorOTPJson;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorU2F u2f = 3;
   */
  u2f?: AuthFactorU2FJson;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorOTPSMS otp_sms = 4;
   */
  otpSms?: AuthFactorOTPSMSJson;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorOTPEmail otp_email = 5;
   */
  otpEmail?: AuthFactorOTPEmailJson;
};

/**
 * Describes the message zitadel.user.v1.AuthFactor.
 * Use `create(AuthFactorSchema)` to create a new message.
 */
export declare const AuthFactorSchema: GenMessage<AuthFactor, {jsonType: AuthFactorJson}>;

/**
 * @generated from message zitadel.user.v1.AuthFactorOTP
 */
export declare type AuthFactorOTP = Message<"zitadel.user.v1.AuthFactorOTP"> & {
};

/**
 * @generated from message zitadel.user.v1.AuthFactorOTP
 */
export declare type AuthFactorOTPJson = {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTP.
 * Use `create(AuthFactorOTPSchema)` to create a new message.
 */
export declare const AuthFactorOTPSchema: GenMessage<AuthFactorOTP, {jsonType: AuthFactorOTPJson}>;

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPSMS
 */
export declare type AuthFactorOTPSMS = Message<"zitadel.user.v1.AuthFactorOTPSMS"> & {
};

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPSMS
 */
export declare type AuthFactorOTPSMSJson = {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPSMS.
 * Use `create(AuthFactorOTPSMSSchema)` to create a new message.
 */
export declare const AuthFactorOTPSMSSchema: GenMessage<AuthFactorOTPSMS, {jsonType: AuthFactorOTPSMSJson}>;

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPEmail
 */
export declare type AuthFactorOTPEmail = Message<"zitadel.user.v1.AuthFactorOTPEmail"> & {
};

/**
 * @generated from message zitadel.user.v1.AuthFactorOTPEmail
 */
export declare type AuthFactorOTPEmailJson = {
};

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPEmail.
 * Use `create(AuthFactorOTPEmailSchema)` to create a new message.
 */
export declare const AuthFactorOTPEmailSchema: GenMessage<AuthFactorOTPEmail, {jsonType: AuthFactorOTPEmailJson}>;

/**
 * @generated from message zitadel.user.v1.AuthFactorU2F
 */
export declare type AuthFactorU2F = Message<"zitadel.user.v1.AuthFactorU2F"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * @generated from message zitadel.user.v1.AuthFactorU2F
 */
export declare type AuthFactorU2FJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: string name = 2;
   */
  name?: string;
};

/**
 * Describes the message zitadel.user.v1.AuthFactorU2F.
 * Use `create(AuthFactorU2FSchema)` to create a new message.
 */
export declare const AuthFactorU2FSchema: GenMessage<AuthFactorU2F, {jsonType: AuthFactorU2FJson}>;

/**
 * @generated from message zitadel.user.v1.WebAuthNKey
 */
export declare type WebAuthNKey = Message<"zitadel.user.v1.WebAuthNKey"> & {
  /**
   * @generated from field: bytes public_key = 1;
   */
  publicKey: Uint8Array;
};

/**
 * @generated from message zitadel.user.v1.WebAuthNKey
 */
export declare type WebAuthNKeyJson = {
  /**
   * @generated from field: bytes public_key = 1;
   */
  publicKey?: string;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNKey.
 * Use `create(WebAuthNKeySchema)` to create a new message.
 */
export declare const WebAuthNKeySchema: GenMessage<WebAuthNKey, {jsonType: WebAuthNKeyJson}>;

/**
 * @generated from message zitadel.user.v1.WebAuthNVerification
 */
export declare type WebAuthNVerification = Message<"zitadel.user.v1.WebAuthNVerification"> & {
  /**
   * @generated from field: bytes public_key_credential = 1;
   */
  publicKeyCredential: Uint8Array;

  /**
   * @generated from field: string token_name = 2;
   */
  tokenName: string;
};

/**
 * @generated from message zitadel.user.v1.WebAuthNVerification
 */
export declare type WebAuthNVerificationJson = {
  /**
   * @generated from field: bytes public_key_credential = 1;
   */
  publicKeyCredential?: string;

  /**
   * @generated from field: string token_name = 2;
   */
  tokenName?: string;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNVerification.
 * Use `create(WebAuthNVerificationSchema)` to create a new message.
 */
export declare const WebAuthNVerificationSchema: GenMessage<WebAuthNVerification, {jsonType: WebAuthNVerificationJson}>;

/**
 * @generated from message zitadel.user.v1.WebAuthNToken
 */
export declare type WebAuthNToken = Message<"zitadel.user.v1.WebAuthNToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 2;
   */
  state: AuthFactorState;

  /**
   * @generated from field: string name = 3;
   */
  name: string;
};

/**
 * @generated from message zitadel.user.v1.WebAuthNToken
 */
export declare type WebAuthNTokenJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.user.v1.AuthFactorState state = 2;
   */
  state?: AuthFactorStateJson;

  /**
   * @generated from field: string name = 3;
   */
  name?: string;
};

/**
 * Describes the message zitadel.user.v1.WebAuthNToken.
 * Use `create(WebAuthNTokenSchema)` to create a new message.
 */
export declare const WebAuthNTokenSchema: GenMessage<WebAuthNToken, {jsonType: WebAuthNTokenJson}>;

/**
 * @generated from message zitadel.user.v1.Membership
 */
export declare type Membership = Message<"zitadel.user.v1.Membership"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles: string[];

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from oneof zitadel.user.v1.Membership.type
   */
  type: {
    /**
     * @generated from field: bool iam = 5;
     */
    value: boolean;
    case: "iam";
  } | {
    /**
     * @generated from field: string org_id = 6;
     */
    value: string;
    case: "orgId";
  } | {
    /**
     * @generated from field: string project_id = 7;
     */
    value: string;
    case: "projectId";
  } | {
    /**
     * @generated from field: string project_grant_id = 8;
     */
    value: string;
    case: "projectGrantId";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.Membership
 */
export declare type MembershipJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: repeated string roles = 3;
   */
  roles?: string[];

  /**
   * @generated from field: string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: bool iam = 5;
   */
  iam?: boolean;

  /**
   * @generated from field: string org_id = 6;
   */
  orgId?: string;

  /**
   * @generated from field: string project_id = 7;
   */
  projectId?: string;

  /**
   * @generated from field: string project_grant_id = 8;
   */
  projectGrantId?: string;
};

/**
 * Describes the message zitadel.user.v1.Membership.
 * Use `create(MembershipSchema)` to create a new message.
 */
export declare const MembershipSchema: GenMessage<Membership, {jsonType: MembershipJson}>;

/**
 * @generated from message zitadel.user.v1.MembershipQuery
 */
export declare type MembershipQuery = Message<"zitadel.user.v1.MembershipQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.MembershipQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.MembershipOrgQuery org_query = 1;
     */
    value: MembershipOrgQuery;
    case: "orgQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectQuery project_query = 2;
     */
    value: MembershipProjectQuery;
    case: "projectQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipProjectGrantQuery project_grant_query = 3;
     */
    value: MembershipProjectGrantQuery;
    case: "projectGrantQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.MembershipIAMQuery iam_query = 4;
     */
    value: MembershipIAMQuery;
    case: "iamQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.MembershipQuery
 */
export declare type MembershipQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.MembershipOrgQuery org_query = 1;
   */
  orgQuery?: MembershipOrgQueryJson;

  /**
   * @generated from field: zitadel.user.v1.MembershipProjectQuery project_query = 2;
   */
  projectQuery?: MembershipProjectQueryJson;

  /**
   * @generated from field: zitadel.user.v1.MembershipProjectGrantQuery project_grant_query = 3;
   */
  projectGrantQuery?: MembershipProjectGrantQueryJson;

  /**
   * @generated from field: zitadel.user.v1.MembershipIAMQuery iam_query = 4;
   */
  iamQuery?: MembershipIAMQueryJson;
};

/**
 * Describes the message zitadel.user.v1.MembershipQuery.
 * Use `create(MembershipQuerySchema)` to create a new message.
 */
export declare const MembershipQuerySchema: GenMessage<MembershipQuery, {jsonType: MembershipQueryJson}>;

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipOrgQuery
 */
export declare type MembershipOrgQuery = Message<"zitadel.user.v1.MembershipOrgQuery"> & {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId: string;
};

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipOrgQuery
 */
export declare type MembershipOrgQueryJson = {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId?: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipOrgQuery.
 * Use `create(MembershipOrgQuerySchema)` to create a new message.
 */
export declare const MembershipOrgQuerySchema: GenMessage<MembershipOrgQuery, {jsonType: MembershipOrgQueryJson}>;

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectQuery
 */
export declare type MembershipProjectQuery = Message<"zitadel.user.v1.MembershipProjectQuery"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectQuery
 */
export declare type MembershipProjectQueryJson = {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId?: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipProjectQuery.
 * Use `create(MembershipProjectQuerySchema)` to create a new message.
 */
export declare const MembershipProjectQuerySchema: GenMessage<MembershipProjectQuery, {jsonType: MembershipProjectQueryJson}>;

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectGrantQuery
 */
export declare type MembershipProjectGrantQuery = Message<"zitadel.user.v1.MembershipProjectGrantQuery"> & {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;
};

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipProjectGrantQuery
 */
export declare type MembershipProjectGrantQueryJson = {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId?: string;
};

/**
 * Describes the message zitadel.user.v1.MembershipProjectGrantQuery.
 * Use `create(MembershipProjectGrantQuerySchema)` to create a new message.
 */
export declare const MembershipProjectGrantQuerySchema: GenMessage<MembershipProjectGrantQuery, {jsonType: MembershipProjectGrantQueryJson}>;

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipIAMQuery
 */
export declare type MembershipIAMQuery = Message<"zitadel.user.v1.MembershipIAMQuery"> & {
  /**
   * @generated from field: bool iam = 1;
   */
  iam: boolean;
};

/**
 * this query always equals
 *
 * @generated from message zitadel.user.v1.MembershipIAMQuery
 */
export declare type MembershipIAMQueryJson = {
  /**
   * @generated from field: bool iam = 1;
   */
  iam?: boolean;
};

/**
 * Describes the message zitadel.user.v1.MembershipIAMQuery.
 * Use `create(MembershipIAMQuerySchema)` to create a new message.
 */
export declare const MembershipIAMQuerySchema: GenMessage<MembershipIAMQuery, {jsonType: MembershipIAMQueryJson}>;

/**
 * @generated from message zitadel.user.v1.Session
 */
export declare type Session = Message<"zitadel.user.v1.Session"> & {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string agent_id = 2;
   */
  agentId: string;

  /**
   * @generated from field: zitadel.user.v1.SessionState auth_state = 3;
   */
  authState: SessionState;

  /**
   * @generated from field: string user_id = 4;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 5;
   */
  userName: string;

  /**
   * @generated from field: string login_name = 7;
   */
  loginName: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 9;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string avatar_url = 10;
   */
  avatarUrl: string;
};

/**
 * @generated from message zitadel.user.v1.Session
 */
export declare type SessionJson = {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId?: string;

  /**
   * @generated from field: string agent_id = 2;
   */
  agentId?: string;

  /**
   * @generated from field: zitadel.user.v1.SessionState auth_state = 3;
   */
  authState?: SessionStateJson;

  /**
   * @generated from field: string user_id = 4;
   */
  userId?: string;

  /**
   * @generated from field: string user_name = 5;
   */
  userName?: string;

  /**
   * @generated from field: string login_name = 7;
   */
  loginName?: string;

  /**
   * @generated from field: string display_name = 8;
   */
  displayName?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 9;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string avatar_url = 10;
   */
  avatarUrl?: string;
};

/**
 * Describes the message zitadel.user.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export declare const SessionSchema: GenMessage<Session, {jsonType: SessionJson}>;

/**
 * @generated from message zitadel.user.v1.RefreshToken
 */
export declare type RefreshToken = Message<"zitadel.user.v1.RefreshToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId: string;

  /**
   * @generated from field: google.protobuf.Timestamp auth_time = 4;
   */
  authTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp idle_expiration = 5;
   */
  idleExpiration?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiration = 6;
   */
  expiration?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes: string[];

  /**
   * @generated from field: repeated string audience = 8;
   */
  audience: string[];
};

/**
 * @generated from message zitadel.user.v1.RefreshToken
 */
export declare type RefreshTokenJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: string client_id = 3;
   */
  clientId?: string;

  /**
   * @generated from field: google.protobuf.Timestamp auth_time = 4;
   */
  authTime?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Timestamp idle_expiration = 5;
   */
  idleExpiration?: TimestampJson;

  /**
   * @generated from field: google.protobuf.Timestamp expiration = 6;
   */
  expiration?: TimestampJson;

  /**
   * @generated from field: repeated string scopes = 7;
   */
  scopes?: string[];

  /**
   * @generated from field: repeated string audience = 8;
   */
  audience?: string[];
};

/**
 * Describes the message zitadel.user.v1.RefreshToken.
 * Use `create(RefreshTokenSchema)` to create a new message.
 */
export declare const RefreshTokenSchema: GenMessage<RefreshToken, {jsonType: RefreshTokenJson}>;

/**
 * @generated from message zitadel.user.v1.PersonalAccessToken
 */
export declare type PersonalAccessToken = Message<"zitadel.user.v1.PersonalAccessToken"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 3;
   */
  expirationDate?: Timestamp;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes: string[];
};

/**
 * @generated from message zitadel.user.v1.PersonalAccessToken
 */
export declare type PersonalAccessTokenJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: google.protobuf.Timestamp expiration_date = 3;
   */
  expirationDate?: TimestampJson;

  /**
   * @generated from field: repeated string scopes = 4;
   */
  scopes?: string[];
};

/**
 * Describes the message zitadel.user.v1.PersonalAccessToken.
 * Use `create(PersonalAccessTokenSchema)` to create a new message.
 */
export declare const PersonalAccessTokenSchema: GenMessage<PersonalAccessToken, {jsonType: PersonalAccessTokenJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrant
 */
export declare type UserGrant = Message<"zitadel.user.v1.UserGrant"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys: string[];

  /**
   * @generated from field: zitadel.user.v1.UserGrantState state = 4;
   */
  state: UserGrantState;

  /**
   * @generated from field: string user_id = 5;
   */
  userId: string;

  /**
   * @generated from field: string user_name = 6;
   */
  userName: string;

  /**
   * @generated from field: string first_name = 7;
   */
  firstName: string;

  /**
   * @generated from field: string last_name = 8;
   */
  lastName: string;

  /**
   * @generated from field: string email = 9;
   */
  email: string;

  /**
   * @generated from field: string display_name = 10;
   */
  displayName: string;

  /**
   * @generated from field: string org_id = 11;
   */
  orgId: string;

  /**
   * @generated from field: string org_name = 12;
   */
  orgName: string;

  /**
   * @generated from field: string org_domain = 13;
   */
  orgDomain: string;

  /**
   * @generated from field: string project_id = 14;
   */
  projectId: string;

  /**
   * @generated from field: string project_name = 15;
   */
  projectName: string;

  /**
   * @generated from field: string project_grant_id = 16;
   */
  projectGrantId: string;

  /**
   * @generated from field: string avatar_url = 17;
   */
  avatarUrl: string;

  /**
   * @generated from field: string preferred_login_name = 18;
   */
  preferredLoginName: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 19;
   */
  userType: Type;

  /**
   * @generated from field: string granted_org_id = 20;
   */
  grantedOrgId: string;

  /**
   * @generated from field: string granted_org_name = 21;
   */
  grantedOrgName: string;

  /**
   * @generated from field: string granted_org_domain = 22;
   */
  grantedOrgDomain: string;
};

/**
 * @generated from message zitadel.user.v1.UserGrant
 */
export declare type UserGrantJson = {
  /**
   * @generated from field: string id = 1;
   */
  id?: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetailsJson;

  /**
   * @generated from field: repeated string role_keys = 3;
   */
  roleKeys?: string[];

  /**
   * @generated from field: zitadel.user.v1.UserGrantState state = 4;
   */
  state?: UserGrantStateJson;

  /**
   * @generated from field: string user_id = 5;
   */
  userId?: string;

  /**
   * @generated from field: string user_name = 6;
   */
  userName?: string;

  /**
   * @generated from field: string first_name = 7;
   */
  firstName?: string;

  /**
   * @generated from field: string last_name = 8;
   */
  lastName?: string;

  /**
   * @generated from field: string email = 9;
   */
  email?: string;

  /**
   * @generated from field: string display_name = 10;
   */
  displayName?: string;

  /**
   * @generated from field: string org_id = 11;
   */
  orgId?: string;

  /**
   * @generated from field: string org_name = 12;
   */
  orgName?: string;

  /**
   * @generated from field: string org_domain = 13;
   */
  orgDomain?: string;

  /**
   * @generated from field: string project_id = 14;
   */
  projectId?: string;

  /**
   * @generated from field: string project_name = 15;
   */
  projectName?: string;

  /**
   * @generated from field: string project_grant_id = 16;
   */
  projectGrantId?: string;

  /**
   * @generated from field: string avatar_url = 17;
   */
  avatarUrl?: string;

  /**
   * @generated from field: string preferred_login_name = 18;
   */
  preferredLoginName?: string;

  /**
   * @generated from field: zitadel.user.v1.Type user_type = 19;
   */
  userType?: TypeJson;

  /**
   * @generated from field: string granted_org_id = 20;
   */
  grantedOrgId?: string;

  /**
   * @generated from field: string granted_org_name = 21;
   */
  grantedOrgName?: string;

  /**
   * @generated from field: string granted_org_domain = 22;
   */
  grantedOrgDomain?: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrant.
 * Use `create(UserGrantSchema)` to create a new message.
 */
export declare const UserGrantSchema: GenMessage<UserGrant, {jsonType: UserGrantJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantQuery
 */
export declare type UserGrantQuery = Message<"zitadel.user.v1.UserGrantQuery"> & {
  /**
   * @generated from oneof zitadel.user.v1.UserGrantQuery.query
   */
  query: {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectIDQuery project_id_query = 1;
     */
    value: UserGrantProjectIDQuery;
    case: "projectIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserIDQuery user_id_query = 2;
     */
    value: UserGrantUserIDQuery;
    case: "userIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantWithGrantedQuery with_granted_query = 3;
     */
    value: UserGrantWithGrantedQuery;
    case: "withGrantedQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantRoleKeyQuery role_key_query = 4;
     */
    value: UserGrantRoleKeyQuery;
    case: "roleKeyQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectGrantIDQuery project_grant_id_query = 5;
     */
    value: UserGrantProjectGrantIDQuery;
    case: "projectGrantIdQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserNameQuery user_name_query = 6;
     */
    value: UserGrantUserNameQuery;
    case: "userNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantFirstNameQuery first_name_query = 7;
     */
    value: UserGrantFirstNameQuery;
    case: "firstNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantLastNameQuery last_name_query = 8;
     */
    value: UserGrantLastNameQuery;
    case: "lastNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantEmailQuery email_query = 9;
     */
    value: UserGrantEmailQuery;
    case: "emailQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgNameQuery org_name_query = 10;
     */
    value: UserGrantOrgNameQuery;
    case: "orgNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantOrgDomainQuery org_domain_query = 11;
     */
    value: UserGrantOrgDomainQuery;
    case: "orgDomainQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantProjectNameQuery project_name_query = 12;
     */
    value: UserGrantProjectNameQuery;
    case: "projectNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantDisplayNameQuery display_name_query = 13;
     */
    value: UserGrantDisplayNameQuery;
    case: "displayNameQuery";
  } | {
    /**
     * @generated from field: zitadel.user.v1.UserGrantUserTypeQuery user_type_query = 14;
     */
    value: UserGrantUserTypeQuery;
    case: "userTypeQuery";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message zitadel.user.v1.UserGrantQuery
 */
export declare type UserGrantQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.UserGrantProjectIDQuery project_id_query = 1;
   */
  projectIdQuery?: UserGrantProjectIDQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantUserIDQuery user_id_query = 2;
   */
  userIdQuery?: UserGrantUserIDQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantWithGrantedQuery with_granted_query = 3;
   */
  withGrantedQuery?: UserGrantWithGrantedQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantRoleKeyQuery role_key_query = 4;
   */
  roleKeyQuery?: UserGrantRoleKeyQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantProjectGrantIDQuery project_grant_id_query = 5;
   */
  projectGrantIdQuery?: UserGrantProjectGrantIDQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantUserNameQuery user_name_query = 6;
   */
  userNameQuery?: UserGrantUserNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantFirstNameQuery first_name_query = 7;
   */
  firstNameQuery?: UserGrantFirstNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantLastNameQuery last_name_query = 8;
   */
  lastNameQuery?: UserGrantLastNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantEmailQuery email_query = 9;
   */
  emailQuery?: UserGrantEmailQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantOrgNameQuery org_name_query = 10;
   */
  orgNameQuery?: UserGrantOrgNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantOrgDomainQuery org_domain_query = 11;
   */
  orgDomainQuery?: UserGrantOrgDomainQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantProjectNameQuery project_name_query = 12;
   */
  projectNameQuery?: UserGrantProjectNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantDisplayNameQuery display_name_query = 13;
   */
  displayNameQuery?: UserGrantDisplayNameQueryJson;

  /**
   * @generated from field: zitadel.user.v1.UserGrantUserTypeQuery user_type_query = 14;
   */
  userTypeQuery?: UserGrantUserTypeQueryJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantQuery.
 * Use `create(UserGrantQuerySchema)` to create a new message.
 */
export declare const UserGrantQuerySchema: GenMessage<UserGrantQuery, {jsonType: UserGrantQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantProjectIDQuery
 */
export declare type UserGrantProjectIDQuery = Message<"zitadel.user.v1.UserGrantProjectIDQuery"> & {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId: string;
};

/**
 * @generated from message zitadel.user.v1.UserGrantProjectIDQuery
 */
export declare type UserGrantProjectIDQueryJson = {
  /**
   * @generated from field: string project_id = 1;
   */
  projectId?: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectIDQuery.
 * Use `create(UserGrantProjectIDQuerySchema)` to create a new message.
 */
export declare const UserGrantProjectIDQuerySchema: GenMessage<UserGrantProjectIDQuery, {jsonType: UserGrantProjectIDQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantUserIDQuery
 */
export declare type UserGrantUserIDQuery = Message<"zitadel.user.v1.UserGrantUserIDQuery"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * @generated from message zitadel.user.v1.UserGrantUserIDQuery
 */
export declare type UserGrantUserIDQueryJson = {
  /**
   * @generated from field: string user_id = 1;
   */
  userId?: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserIDQuery.
 * Use `create(UserGrantUserIDQuerySchema)` to create a new message.
 */
export declare const UserGrantUserIDQuerySchema: GenMessage<UserGrantUserIDQuery, {jsonType: UserGrantUserIDQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantWithGrantedQuery
 */
export declare type UserGrantWithGrantedQuery = Message<"zitadel.user.v1.UserGrantWithGrantedQuery"> & {
  /**
   * @generated from field: bool with_granted = 1;
   */
  withGranted: boolean;
};

/**
 * @generated from message zitadel.user.v1.UserGrantWithGrantedQuery
 */
export declare type UserGrantWithGrantedQueryJson = {
  /**
   * @generated from field: bool with_granted = 1;
   */
  withGranted?: boolean;
};

/**
 * Describes the message zitadel.user.v1.UserGrantWithGrantedQuery.
 * Use `create(UserGrantWithGrantedQuerySchema)` to create a new message.
 */
export declare const UserGrantWithGrantedQuerySchema: GenMessage<UserGrantWithGrantedQuery, {jsonType: UserGrantWithGrantedQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantRoleKeyQuery
 */
export declare type UserGrantRoleKeyQuery = Message<"zitadel.user.v1.UserGrantRoleKeyQuery"> & {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantRoleKeyQuery
 */
export declare type UserGrantRoleKeyQueryJson = {
  /**
   * @generated from field: string role_key = 1;
   */
  roleKey?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantRoleKeyQuery.
 * Use `create(UserGrantRoleKeyQuerySchema)` to create a new message.
 */
export declare const UserGrantRoleKeyQuerySchema: GenMessage<UserGrantRoleKeyQuery, {jsonType: UserGrantRoleKeyQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantProjectGrantIDQuery
 */
export declare type UserGrantProjectGrantIDQuery = Message<"zitadel.user.v1.UserGrantProjectGrantIDQuery"> & {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId: string;
};

/**
 * @generated from message zitadel.user.v1.UserGrantProjectGrantIDQuery
 */
export declare type UserGrantProjectGrantIDQueryJson = {
  /**
   * @generated from field: string project_grant_id = 1;
   */
  projectGrantId?: string;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectGrantIDQuery.
 * Use `create(UserGrantProjectGrantIDQuerySchema)` to create a new message.
 */
export declare const UserGrantProjectGrantIDQuerySchema: GenMessage<UserGrantProjectGrantIDQuery, {jsonType: UserGrantProjectGrantIDQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantUserNameQuery
 */
export declare type UserGrantUserNameQuery = Message<"zitadel.user.v1.UserGrantUserNameQuery"> & {
  /**
   * @generated from field: string user_name = 1;
   */
  userName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantUserNameQuery
 */
export declare type UserGrantUserNameQueryJson = {
  /**
   * @generated from field: string user_name = 1;
   */
  userName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserNameQuery.
 * Use `create(UserGrantUserNameQuerySchema)` to create a new message.
 */
export declare const UserGrantUserNameQuerySchema: GenMessage<UserGrantUserNameQuery, {jsonType: UserGrantUserNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantFirstNameQuery
 */
export declare type UserGrantFirstNameQuery = Message<"zitadel.user.v1.UserGrantFirstNameQuery"> & {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantFirstNameQuery
 */
export declare type UserGrantFirstNameQueryJson = {
  /**
   * @generated from field: string first_name = 1;
   */
  firstName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantFirstNameQuery.
 * Use `create(UserGrantFirstNameQuerySchema)` to create a new message.
 */
export declare const UserGrantFirstNameQuerySchema: GenMessage<UserGrantFirstNameQuery, {jsonType: UserGrantFirstNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantLastNameQuery
 */
export declare type UserGrantLastNameQuery = Message<"zitadel.user.v1.UserGrantLastNameQuery"> & {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantLastNameQuery
 */
export declare type UserGrantLastNameQueryJson = {
  /**
   * @generated from field: string last_name = 1;
   */
  lastName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantLastNameQuery.
 * Use `create(UserGrantLastNameQuerySchema)` to create a new message.
 */
export declare const UserGrantLastNameQuerySchema: GenMessage<UserGrantLastNameQuery, {jsonType: UserGrantLastNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantEmailQuery
 */
export declare type UserGrantEmailQuery = Message<"zitadel.user.v1.UserGrantEmailQuery"> & {
  /**
   * @generated from field: string email = 1;
   */
  email: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantEmailQuery
 */
export declare type UserGrantEmailQueryJson = {
  /**
   * @generated from field: string email = 1;
   */
  email?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantEmailQuery.
 * Use `create(UserGrantEmailQuerySchema)` to create a new message.
 */
export declare const UserGrantEmailQuerySchema: GenMessage<UserGrantEmailQuery, {jsonType: UserGrantEmailQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantOrgNameQuery
 */
export declare type UserGrantOrgNameQuery = Message<"zitadel.user.v1.UserGrantOrgNameQuery"> & {
  /**
   * @generated from field: string org_name = 1;
   */
  orgName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantOrgNameQuery
 */
export declare type UserGrantOrgNameQueryJson = {
  /**
   * @generated from field: string org_name = 1;
   */
  orgName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantOrgNameQuery.
 * Use `create(UserGrantOrgNameQuerySchema)` to create a new message.
 */
export declare const UserGrantOrgNameQuerySchema: GenMessage<UserGrantOrgNameQuery, {jsonType: UserGrantOrgNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantOrgDomainQuery
 */
export declare type UserGrantOrgDomainQuery = Message<"zitadel.user.v1.UserGrantOrgDomainQuery"> & {
  /**
   * @generated from field: string org_domain = 1;
   */
  orgDomain: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantOrgDomainQuery
 */
export declare type UserGrantOrgDomainQueryJson = {
  /**
   * @generated from field: string org_domain = 1;
   */
  orgDomain?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantOrgDomainQuery.
 * Use `create(UserGrantOrgDomainQuerySchema)` to create a new message.
 */
export declare const UserGrantOrgDomainQuerySchema: GenMessage<UserGrantOrgDomainQuery, {jsonType: UserGrantOrgDomainQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantProjectNameQuery
 */
export declare type UserGrantProjectNameQuery = Message<"zitadel.user.v1.UserGrantProjectNameQuery"> & {
  /**
   * @generated from field: string project_name = 1;
   */
  projectName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantProjectNameQuery
 */
export declare type UserGrantProjectNameQueryJson = {
  /**
   * @generated from field: string project_name = 1;
   */
  projectName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantProjectNameQuery.
 * Use `create(UserGrantProjectNameQuerySchema)` to create a new message.
 */
export declare const UserGrantProjectNameQuerySchema: GenMessage<UserGrantProjectNameQuery, {jsonType: UserGrantProjectNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantDisplayNameQuery
 */
export declare type UserGrantDisplayNameQuery = Message<"zitadel.user.v1.UserGrantDisplayNameQuery"> & {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;
};

/**
 * @generated from message zitadel.user.v1.UserGrantDisplayNameQuery
 */
export declare type UserGrantDisplayNameQueryJson = {
  /**
   * @generated from field: string display_name = 1;
   */
  displayName?: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method?: TextQueryMethodJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantDisplayNameQuery.
 * Use `create(UserGrantDisplayNameQuerySchema)` to create a new message.
 */
export declare const UserGrantDisplayNameQuerySchema: GenMessage<UserGrantDisplayNameQuery, {jsonType: UserGrantDisplayNameQueryJson}>;

/**
 * @generated from message zitadel.user.v1.UserGrantUserTypeQuery
 */
export declare type UserGrantUserTypeQuery = Message<"zitadel.user.v1.UserGrantUserTypeQuery"> & {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type: Type;
};

/**
 * @generated from message zitadel.user.v1.UserGrantUserTypeQuery
 */
export declare type UserGrantUserTypeQueryJson = {
  /**
   * @generated from field: zitadel.user.v1.Type type = 1;
   */
  type?: TypeJson;
};

/**
 * Describes the message zitadel.user.v1.UserGrantUserTypeQuery.
 * Use `create(UserGrantUserTypeQuerySchema)` to create a new message.
 */
export declare const UserGrantUserTypeQuerySchema: GenMessage<UserGrantUserTypeQuery, {jsonType: UserGrantUserTypeQueryJson}>;

/**
 * @generated from enum zitadel.user.v1.UserState
 */
export enum UserState {
  /**
   * @generated from enum value: USER_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: USER_STATE_DELETED = 3;
   */
  DELETED = 3,

  /**
   * @generated from enum value: USER_STATE_LOCKED = 4;
   */
  LOCKED = 4,

  /**
   * @generated from enum value: USER_STATE_SUSPEND = 5;
   */
  SUSPEND = 5,

  /**
   * @generated from enum value: USER_STATE_INITIAL = 6;
   */
  INITIAL = 6,
}

/**
 * @generated from enum zitadel.user.v1.UserState
 */
export declare type UserStateJson = "USER_STATE_UNSPECIFIED" | "USER_STATE_ACTIVE" | "USER_STATE_INACTIVE" | "USER_STATE_DELETED" | "USER_STATE_LOCKED" | "USER_STATE_SUSPEND" | "USER_STATE_INITIAL";

/**
 * Describes the enum zitadel.user.v1.UserState.
 */
export declare const UserStateSchema: GenEnum<UserState, UserStateJson>;

/**
 * @generated from enum zitadel.user.v1.Gender
 */
export enum Gender {
  /**
   * @generated from enum value: GENDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GENDER_FEMALE = 1;
   */
  FEMALE = 1,

  /**
   * @generated from enum value: GENDER_MALE = 2;
   */
  MALE = 2,

  /**
   * @generated from enum value: GENDER_DIVERSE = 3;
   */
  DIVERSE = 3,
}

/**
 * @generated from enum zitadel.user.v1.Gender
 */
export declare type GenderJson = "GENDER_UNSPECIFIED" | "GENDER_FEMALE" | "GENDER_MALE" | "GENDER_DIVERSE";

/**
 * Describes the enum zitadel.user.v1.Gender.
 */
export declare const GenderSchema: GenEnum<Gender, GenderJson>;

/**
 * @generated from enum zitadel.user.v1.AccessTokenType
 */
export enum AccessTokenType {
  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_BEARER = 0;
   */
  BEARER = 0,

  /**
   * @generated from enum value: ACCESS_TOKEN_TYPE_JWT = 1;
   */
  JWT = 1,
}

/**
 * @generated from enum zitadel.user.v1.AccessTokenType
 */
export declare type AccessTokenTypeJson = "ACCESS_TOKEN_TYPE_BEARER" | "ACCESS_TOKEN_TYPE_JWT";

/**
 * Describes the enum zitadel.user.v1.AccessTokenType.
 */
export declare const AccessTokenTypeSchema: GenEnum<AccessTokenType, AccessTokenTypeJson>;

/**
 * @generated from enum zitadel.user.v1.Type
 */
export enum Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_HUMAN = 1;
   */
  HUMAN = 1,

  /**
   * @generated from enum value: TYPE_MACHINE = 2;
   */
  MACHINE = 2,
}

/**
 * @generated from enum zitadel.user.v1.Type
 */
export declare type TypeJson = "TYPE_UNSPECIFIED" | "TYPE_HUMAN" | "TYPE_MACHINE";

/**
 * Describes the enum zitadel.user.v1.Type.
 */
export declare const TypeSchema: GenEnum<Type, TypeJson>;

/**
 * @generated from enum zitadel.user.v1.UserFieldName
 */
export enum UserFieldName {
  /**
   * @generated from enum value: USER_FIELD_NAME_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_FIELD_NAME_USER_NAME = 1;
   */
  USER_NAME = 1,

  /**
   * @generated from enum value: USER_FIELD_NAME_FIRST_NAME = 2;
   */
  FIRST_NAME = 2,

  /**
   * @generated from enum value: USER_FIELD_NAME_LAST_NAME = 3;
   */
  LAST_NAME = 3,

  /**
   * @generated from enum value: USER_FIELD_NAME_NICK_NAME = 4;
   */
  NICK_NAME = 4,

  /**
   * @generated from enum value: USER_FIELD_NAME_DISPLAY_NAME = 5;
   */
  DISPLAY_NAME = 5,

  /**
   * @generated from enum value: USER_FIELD_NAME_EMAIL = 6;
   */
  EMAIL = 6,

  /**
   * @generated from enum value: USER_FIELD_NAME_STATE = 7;
   */
  STATE = 7,

  /**
   * @generated from enum value: USER_FIELD_NAME_TYPE = 8;
   */
  TYPE = 8,

  /**
   * @generated from enum value: USER_FIELD_NAME_CREATION_DATE = 9;
   */
  CREATION_DATE = 9,
}

/**
 * @generated from enum zitadel.user.v1.UserFieldName
 */
export declare type UserFieldNameJson = "USER_FIELD_NAME_UNSPECIFIED" | "USER_FIELD_NAME_USER_NAME" | "USER_FIELD_NAME_FIRST_NAME" | "USER_FIELD_NAME_LAST_NAME" | "USER_FIELD_NAME_NICK_NAME" | "USER_FIELD_NAME_DISPLAY_NAME" | "USER_FIELD_NAME_EMAIL" | "USER_FIELD_NAME_STATE" | "USER_FIELD_NAME_TYPE" | "USER_FIELD_NAME_CREATION_DATE";

/**
 * Describes the enum zitadel.user.v1.UserFieldName.
 */
export declare const UserFieldNameSchema: GenEnum<UserFieldName, UserFieldNameJson>;

/**
 * @generated from enum zitadel.user.v1.AuthFactorState
 */
export enum AuthFactorState {
  /**
   * @generated from enum value: AUTH_FACTOR_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_NOT_READY = 1;
   */
  NOT_READY = 1,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_READY = 2;
   */
  READY = 2,

  /**
   * @generated from enum value: AUTH_FACTOR_STATE_REMOVED = 3;
   */
  REMOVED = 3,
}

/**
 * @generated from enum zitadel.user.v1.AuthFactorState
 */
export declare type AuthFactorStateJson = "AUTH_FACTOR_STATE_UNSPECIFIED" | "AUTH_FACTOR_STATE_NOT_READY" | "AUTH_FACTOR_STATE_READY" | "AUTH_FACTOR_STATE_REMOVED";

/**
 * Describes the enum zitadel.user.v1.AuthFactorState.
 */
export declare const AuthFactorStateSchema: GenEnum<AuthFactorState, AuthFactorStateJson>;

/**
 * @generated from enum zitadel.user.v1.SessionState
 */
export enum SessionState {
  /**
   * @generated from enum value: SESSION_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SESSION_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: SESSION_STATE_TERMINATED = 2;
   */
  TERMINATED = 2,
}

/**
 * @generated from enum zitadel.user.v1.SessionState
 */
export declare type SessionStateJson = "SESSION_STATE_UNSPECIFIED" | "SESSION_STATE_ACTIVE" | "SESSION_STATE_TERMINATED";

/**
 * Describes the enum zitadel.user.v1.SessionState.
 */
export declare const SessionStateSchema: GenEnum<SessionState, SessionStateJson>;

/**
 * @generated from enum zitadel.user.v1.UserGrantState
 */
export enum UserGrantState {
  /**
   * @generated from enum value: USER_GRANT_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: USER_GRANT_STATE_ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: USER_GRANT_STATE_INACTIVE = 2;
   */
  INACTIVE = 2,
}

/**
 * @generated from enum zitadel.user.v1.UserGrantState
 */
export declare type UserGrantStateJson = "USER_GRANT_STATE_UNSPECIFIED" | "USER_GRANT_STATE_ACTIVE" | "USER_GRANT_STATE_INACTIVE";

/**
 * Describes the enum zitadel.user.v1.UserGrantState.
 */
export declare const UserGrantStateSchema: GenEnum<UserGrantState, UserGrantStateJson>;

