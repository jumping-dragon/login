// @generated by protoc-gen-es v2.6.0 with parameter "json_types=true,import_extension=js"
// @generated from file zitadel/user.proto (package zitadel.user.v1, syntax proto3)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_zitadel_object } from "./object_pb.js";
import { file_validate_validate } from "../validate/validate_pb.js";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../protoc-gen-openapiv2/options/annotations_pb.js";

/**
 * Describes the file zitadel/user.proto.
 */
export const file_zitadel_user = /*@__PURE__*/
  fileDesc("", [file_zitadel_object, file_validate_validate, file_google_protobuf_timestamp, file_protoc_gen_openapiv2_options_annotations]);

/**
 * Describes the message zitadel.user.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 0);

/**
 * Describes the message zitadel.user.v1.Human.
 * Use `create(HumanSchema)` to create a new message.
 */
export const HumanSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 1);

/**
 * Describes the message zitadel.user.v1.Machine.
 * Use `create(MachineSchema)` to create a new message.
 */
export const MachineSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 2);

/**
 * Describes the message zitadel.user.v1.Profile.
 * Use `create(ProfileSchema)` to create a new message.
 */
export const ProfileSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 3);

/**
 * Describes the message zitadel.user.v1.Email.
 * Use `create(EmailSchema)` to create a new message.
 */
export const EmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 4);

/**
 * Describes the message zitadel.user.v1.Phone.
 * Use `create(PhoneSchema)` to create a new message.
 */
export const PhoneSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 5);

/**
 * Describes the message zitadel.user.v1.SearchQuery.
 * Use `create(SearchQuerySchema)` to create a new message.
 */
export const SearchQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 6);

/**
 * Describes the message zitadel.user.v1.OrQuery.
 * Use `create(OrQuerySchema)` to create a new message.
 */
export const OrQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 7);

/**
 * Describes the message zitadel.user.v1.AndQuery.
 * Use `create(AndQuerySchema)` to create a new message.
 */
export const AndQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 8);

/**
 * Describes the message zitadel.user.v1.NotQuery.
 * Use `create(NotQuerySchema)` to create a new message.
 */
export const NotQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 9);

/**
 * Describes the message zitadel.user.v1.InUserIDQuery.
 * Use `create(InUserIDQuerySchema)` to create a new message.
 */
export const InUserIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 10);

/**
 * Describes the message zitadel.user.v1.InUserEmailsQuery.
 * Use `create(InUserEmailsQuerySchema)` to create a new message.
 */
export const InUserEmailsQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 11);

/**
 * Describes the message zitadel.user.v1.UserNameQuery.
 * Use `create(UserNameQuerySchema)` to create a new message.
 */
export const UserNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 12);

/**
 * Describes the message zitadel.user.v1.FirstNameQuery.
 * Use `create(FirstNameQuerySchema)` to create a new message.
 */
export const FirstNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 13);

/**
 * Describes the message zitadel.user.v1.LastNameQuery.
 * Use `create(LastNameQuerySchema)` to create a new message.
 */
export const LastNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 14);

/**
 * Describes the message zitadel.user.v1.NickNameQuery.
 * Use `create(NickNameQuerySchema)` to create a new message.
 */
export const NickNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 15);

/**
 * Describes the message zitadel.user.v1.DisplayNameQuery.
 * Use `create(DisplayNameQuerySchema)` to create a new message.
 */
export const DisplayNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 16);

/**
 * Describes the message zitadel.user.v1.EmailQuery.
 * Use `create(EmailQuerySchema)` to create a new message.
 */
export const EmailQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 17);

/**
 * Describes the message zitadel.user.v1.LoginNameQuery.
 * Use `create(LoginNameQuerySchema)` to create a new message.
 */
export const LoginNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 18);

/**
 * Describes the message zitadel.user.v1.StateQuery.
 * Use `create(StateQuerySchema)` to create a new message.
 */
export const StateQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 19);

/**
 * Describes the message zitadel.user.v1.TypeQuery.
 * Use `create(TypeQuerySchema)` to create a new message.
 */
export const TypeQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 20);

/**
 * Describes the message zitadel.user.v1.AuthFactor.
 * Use `create(AuthFactorSchema)` to create a new message.
 */
export const AuthFactorSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 21);

/**
 * Describes the message zitadel.user.v1.AuthFactorOTP.
 * Use `create(AuthFactorOTPSchema)` to create a new message.
 */
export const AuthFactorOTPSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 22);

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPSMS.
 * Use `create(AuthFactorOTPSMSSchema)` to create a new message.
 */
export const AuthFactorOTPSMSSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 23);

/**
 * Describes the message zitadel.user.v1.AuthFactorOTPEmail.
 * Use `create(AuthFactorOTPEmailSchema)` to create a new message.
 */
export const AuthFactorOTPEmailSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 24);

/**
 * Describes the message zitadel.user.v1.AuthFactorU2F.
 * Use `create(AuthFactorU2FSchema)` to create a new message.
 */
export const AuthFactorU2FSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 25);

/**
 * Describes the message zitadel.user.v1.WebAuthNKey.
 * Use `create(WebAuthNKeySchema)` to create a new message.
 */
export const WebAuthNKeySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 26);

/**
 * Describes the message zitadel.user.v1.WebAuthNVerification.
 * Use `create(WebAuthNVerificationSchema)` to create a new message.
 */
export const WebAuthNVerificationSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 27);

/**
 * Describes the message zitadel.user.v1.WebAuthNToken.
 * Use `create(WebAuthNTokenSchema)` to create a new message.
 */
export const WebAuthNTokenSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 28);

/**
 * Describes the message zitadel.user.v1.Membership.
 * Use `create(MembershipSchema)` to create a new message.
 */
export const MembershipSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 29);

/**
 * Describes the message zitadel.user.v1.MembershipQuery.
 * Use `create(MembershipQuerySchema)` to create a new message.
 */
export const MembershipQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 30);

/**
 * Describes the message zitadel.user.v1.MembershipOrgQuery.
 * Use `create(MembershipOrgQuerySchema)` to create a new message.
 */
export const MembershipOrgQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 31);

/**
 * Describes the message zitadel.user.v1.MembershipProjectQuery.
 * Use `create(MembershipProjectQuerySchema)` to create a new message.
 */
export const MembershipProjectQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 32);

/**
 * Describes the message zitadel.user.v1.MembershipProjectGrantQuery.
 * Use `create(MembershipProjectGrantQuerySchema)` to create a new message.
 */
export const MembershipProjectGrantQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 33);

/**
 * Describes the message zitadel.user.v1.MembershipIAMQuery.
 * Use `create(MembershipIAMQuerySchema)` to create a new message.
 */
export const MembershipIAMQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 34);

/**
 * Describes the message zitadel.user.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 35);

/**
 * Describes the message zitadel.user.v1.RefreshToken.
 * Use `create(RefreshTokenSchema)` to create a new message.
 */
export const RefreshTokenSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 36);

/**
 * Describes the message zitadel.user.v1.PersonalAccessToken.
 * Use `create(PersonalAccessTokenSchema)` to create a new message.
 */
export const PersonalAccessTokenSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 37);

/**
 * Describes the message zitadel.user.v1.UserGrant.
 * Use `create(UserGrantSchema)` to create a new message.
 */
export const UserGrantSchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 38);

/**
 * Describes the message zitadel.user.v1.UserGrantQuery.
 * Use `create(UserGrantQuerySchema)` to create a new message.
 */
export const UserGrantQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 39);

/**
 * Describes the message zitadel.user.v1.UserGrantProjectIDQuery.
 * Use `create(UserGrantProjectIDQuerySchema)` to create a new message.
 */
export const UserGrantProjectIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 40);

/**
 * Describes the message zitadel.user.v1.UserGrantUserIDQuery.
 * Use `create(UserGrantUserIDQuerySchema)` to create a new message.
 */
export const UserGrantUserIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 41);

/**
 * Describes the message zitadel.user.v1.UserGrantWithGrantedQuery.
 * Use `create(UserGrantWithGrantedQuerySchema)` to create a new message.
 */
export const UserGrantWithGrantedQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 42);

/**
 * Describes the message zitadel.user.v1.UserGrantRoleKeyQuery.
 * Use `create(UserGrantRoleKeyQuerySchema)` to create a new message.
 */
export const UserGrantRoleKeyQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 43);

/**
 * Describes the message zitadel.user.v1.UserGrantProjectGrantIDQuery.
 * Use `create(UserGrantProjectGrantIDQuerySchema)` to create a new message.
 */
export const UserGrantProjectGrantIDQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 44);

/**
 * Describes the message zitadel.user.v1.UserGrantUserNameQuery.
 * Use `create(UserGrantUserNameQuerySchema)` to create a new message.
 */
export const UserGrantUserNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 45);

/**
 * Describes the message zitadel.user.v1.UserGrantFirstNameQuery.
 * Use `create(UserGrantFirstNameQuerySchema)` to create a new message.
 */
export const UserGrantFirstNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 46);

/**
 * Describes the message zitadel.user.v1.UserGrantLastNameQuery.
 * Use `create(UserGrantLastNameQuerySchema)` to create a new message.
 */
export const UserGrantLastNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 47);

/**
 * Describes the message zitadel.user.v1.UserGrantEmailQuery.
 * Use `create(UserGrantEmailQuerySchema)` to create a new message.
 */
export const UserGrantEmailQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 48);

/**
 * Describes the message zitadel.user.v1.UserGrantOrgNameQuery.
 * Use `create(UserGrantOrgNameQuerySchema)` to create a new message.
 */
export const UserGrantOrgNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 49);

/**
 * Describes the message zitadel.user.v1.UserGrantOrgDomainQuery.
 * Use `create(UserGrantOrgDomainQuerySchema)` to create a new message.
 */
export const UserGrantOrgDomainQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 50);

/**
 * Describes the message zitadel.user.v1.UserGrantProjectNameQuery.
 * Use `create(UserGrantProjectNameQuerySchema)` to create a new message.
 */
export const UserGrantProjectNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 51);

/**
 * Describes the message zitadel.user.v1.UserGrantDisplayNameQuery.
 * Use `create(UserGrantDisplayNameQuerySchema)` to create a new message.
 */
export const UserGrantDisplayNameQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 52);

/**
 * Describes the message zitadel.user.v1.UserGrantUserTypeQuery.
 * Use `create(UserGrantUserTypeQuerySchema)` to create a new message.
 */
export const UserGrantUserTypeQuerySchema = /*@__PURE__*/
  messageDesc(file_zitadel_user, 53);

/**
 * Describes the enum zitadel.user.v1.UserState.
 */
export const UserStateSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 0);

/**
 * @generated from enum zitadel.user.v1.UserState
 */
export const UserState = /*@__PURE__*/
  tsEnum(UserStateSchema);

/**
 * Describes the enum zitadel.user.v1.Gender.
 */
export const GenderSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 1);

/**
 * @generated from enum zitadel.user.v1.Gender
 */
export const Gender = /*@__PURE__*/
  tsEnum(GenderSchema);

/**
 * Describes the enum zitadel.user.v1.AccessTokenType.
 */
export const AccessTokenTypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 2);

/**
 * @generated from enum zitadel.user.v1.AccessTokenType
 */
export const AccessTokenType = /*@__PURE__*/
  tsEnum(AccessTokenTypeSchema);

/**
 * Describes the enum zitadel.user.v1.Type.
 */
export const TypeSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 3);

/**
 * @generated from enum zitadel.user.v1.Type
 */
export const Type = /*@__PURE__*/
  tsEnum(TypeSchema);

/**
 * Describes the enum zitadel.user.v1.UserFieldName.
 */
export const UserFieldNameSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 4);

/**
 * @generated from enum zitadel.user.v1.UserFieldName
 */
export const UserFieldName = /*@__PURE__*/
  tsEnum(UserFieldNameSchema);

/**
 * Describes the enum zitadel.user.v1.AuthFactorState.
 */
export const AuthFactorStateSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 5);

/**
 * @generated from enum zitadel.user.v1.AuthFactorState
 */
export const AuthFactorState = /*@__PURE__*/
  tsEnum(AuthFactorStateSchema);

/**
 * Describes the enum zitadel.user.v1.SessionState.
 */
export const SessionStateSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 6);

/**
 * @generated from enum zitadel.user.v1.SessionState
 */
export const SessionState = /*@__PURE__*/
  tsEnum(SessionStateSchema);

/**
 * Describes the enum zitadel.user.v1.UserGrantState.
 */
export const UserGrantStateSchema = /*@__PURE__*/
  enumDesc(file_zitadel_user, 7);

/**
 * @generated from enum zitadel.user.v1.UserGrantState
 */
export const UserGrantState = /*@__PURE__*/
  tsEnum(UserGrantStateSchema);

